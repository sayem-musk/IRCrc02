# compiler: R8
# compiler_version: 1.4.94
# min_api: 1
com.android.vending.expansion.zipfile.APKExpansionSupport -> com.android.vending.expansion.zipfile.APKExpansionSupport:
    32:59:java.lang.String[] getAPKExpansionFiles(android.content.Context,int,int) -> getAPKExpansionFiles
    76:77:com.android.vending.expansion.zipfile.ZipResourceFile getAPKExpansionZipFile(android.content.Context,int,int) -> getAPKExpansionZipFile
    65:69:com.android.vending.expansion.zipfile.ZipResourceFile getResourceZipFile(java.lang.String[]) -> getResourceZipFile
com.android.vending.expansion.zipfile.ZipResourceFile -> com.android.vending.expansion.zipfile.ZipResourceFile:
    188:189:void <init>(java.lang.String) -> <init>
    274:279:void addPatchFile(java.lang.String) -> addPatchFile
    226:228:android.content.res.AssetFileDescriptor getAssetFileDescriptor(java.lang.String) -> getAssetFileDescriptor
    265:265:int read4LE(java.io.RandomAccessFile) -> read4LE
com.android.vending.expansion.zipfile.ZipResourceFile$ZipEntryRO -> com.android.vending.expansion.zipfile.ZipResourceFile$ZipEntryRO:
    101:104:void <init>(java.lang.String,java.io.File,java.lang.String) -> <init>
    160:167:android.content.res.AssetFileDescriptor getAssetFileDescriptor() -> getAssetFileDescriptor
    147:147:long getOffset() -> getOffset
    122:134:void setOffsetFromFile(java.io.RandomAccessFile,java.nio.ByteBuffer) -> setOffsetFromFile
com.enhance.gameservice.IGameTuningService$Stub -> com.enhance.gameservice.IGameTuningService$Stub:
    26:30:com.enhance.gameservice.IGameTuningService asInterface(android.os.IBinder) -> asInterface
com.enhance.gameservice.IGameTuningService$Stub$Proxy -> com.enhance.gameservice.IGameTuningService$Stub$Proxy:
    104:105:void <init>(android.os.IBinder) -> <init>
    109:109:android.os.IBinder asBinder() -> asBinder
    153:166:int boostUp(int) -> boostUp
    171:183:int getAbstractTemperature() -> getAbstractTemperature
    135:148:int setFramePerSecond(int) -> setFramePerSecond
    188:201:int setGamePowerSaving(boolean) -> setGamePowerSaving
    117:130:int setPreferredResolution(int) -> setPreferredResolution
com.loopj.android.http.AsyncHttpClient -> com.loopj.android.http.AsyncHttpClient:
    132:132:void <clinit>() -> <clinit>
    147:147:void <init>() -> <init>
    177:177:void <init>(boolean,int,int) -> <init>
    185:270:void <init>(cz.msebera.android.httpclient.conn.scheme.SchemeRegistry) -> <init>
    116:116:java.util.Map access$000(com.loopj.android.http.AsyncHttpClient) -> access$000
    313:313:void allowRetryExceptionClass(java.lang.Class) -> allowRetryExceptionClass
    579:579:cz.msebera.android.httpclient.conn.ClientConnectionManager createConnectionManager(cz.msebera.android.httpclient.conn.scheme.SchemeRegistry,cz.msebera.android.httpclient.params.BasicHttpParams) -> createConnectionManager
    426:444:void endEntityViaReflection(cz.msebera.android.httpclient.HttpEntity) -> endEntityViaReflection
    1065:1065:com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> get
    1078:1078:com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    1093:1095:com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,cz.msebera.android.httpclient.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    282:306:cz.msebera.android.httpclient.conn.scheme.SchemeRegistry getDefaultSchemeRegistry(boolean,int,int) -> getDefaultSchemeRegistry
    568:568:java.util.concurrent.ExecutorService getDefaultThreadPool() -> getDefaultThreadPool
    337:350:java.lang.String getUrlWithQueryString(boolean,java.lang.String,com.loopj.android.http.RequestParams) -> getUrlWithQueryString
    1023:1025:com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,cz.msebera.android.httpclient.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    374:385:boolean isInputStreamGZIPCompressed(java.io.PushbackInputStream) -> isInputStreamGZIPCompressed
    1468:1468:com.loopj.android.http.AsyncHttpRequest newAsyncHttpRequest(cz.msebera.android.httpclient.impl.client.DefaultHttpClient,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> newAsyncHttpRequest
    1492:1485:com.loopj.android.http.RequestHandle sendRequest(cz.msebera.android.httpclient.impl.client.DefaultHttpClient,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> sendRequest
    690:693:void setConnectTimeout(int) -> setConnectTimeout
    592:594:void setEnableRedirects(boolean,boolean,boolean) -> setEnableRedirects
    613:613:void setEnableRedirects(boolean) -> setEnableRedirects
    713:715:void setResponseTimeout(int) -> setResponseTimeout
    669:670:void setTimeout(int) -> setTimeout
    1552:1552:void setURLEncodingEnabled(boolean) -> setURLEncodingEnabled
    397:400:void silentCloseInputStream(java.io.InputStream) -> silentCloseInputStream
    412:415:void silentCloseOutputStream(java.io.OutputStream) -> silentCloseOutputStream
com.loopj.android.http.AsyncHttpClient$1 -> com.loopj.android.http.AsyncHttpClient$1:
    209:209:void <init>(com.loopj.android.http.AsyncHttpClient) -> <init>
    212:227:void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$2 -> com.loopj.android.http.AsyncHttpClient$2:
    232:232:void <init>(com.loopj.android.http.AsyncHttpClient) -> <init>
    235:243:void process(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$3 -> com.loopj.android.http.AsyncHttpClient$3:
    251:251:void <init>(com.loopj.android.http.AsyncHttpClient) -> <init>
    254:264:void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$InflatingEntity -> com.loopj.android.http.AsyncHttpClient$InflatingEntity:
    1609:1609:void <init>(cz.msebera.android.httpclient.HttpEntity) -> <init>
    1631:1634:void consumeContent() -> consumeContent
    1614:1620:java.io.InputStream getContent() -> getContent
    1626:1626:long getContentLength() -> getContentLength
com.loopj.android.http.AsyncHttpRequest -> com.loopj.android.http.AsyncHttpRequest:
    46:50:void <init>(cz.msebera.android.httpclient.impl.client.AbstractHttpClient,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.client.methods.HttpUriRequest,com.loopj.android.http.ResponseHandlerInterface) -> <init>
    233:235:boolean cancel(boolean) -> cancel
    214:216:boolean isCancelled() -> isCancelled
    229:229:boolean isDone() -> isDone
    132:139:void makeRequest() -> makeRequest
    173:210:void makeRequestWithRetries() -> makeRequestWithRetries
    85:128:void run() -> run
    222:224:void sendCancelNotification() -> sendCancelNotification
com.loopj.android.http.AsyncHttpResponseHandler -> com.loopj.android.http.AsyncHttpResponseHandler:
    109:109:void <init>() -> <init>
    119:126:void <init>(android.os.Looper) -> <init>
    135:145:void <init>(boolean) -> <init>
    161:161:java.net.URI getRequestURI() -> getRequestURI
    464:468:byte[] getResponseData(cz.msebera.android.httpclient.HttpEntity) -> getResponseData
    206:206:boolean getUsePoolThread() -> getUsePoolThread
    181:181:boolean getUseSynchronousMode() -> getUseSynchronousMode
    347:395:void handleMessage(android.os.Message) -> handleMessage
    433:433:android.os.Message obtainMessage(int,java.lang.Object) -> obtainMessage
    299:299:void onCancel() -> onCancel
    242:242:void onProgress(long,long) -> onProgress
    295:295:void onRetry(int) -> onRetry
    303:304:void onUserException(java.lang.Throwable) -> onUserException
    339:339:void sendCancelMessage() -> sendCancelMessage
    319:319:void sendFailureMessage(int,cz.msebera.android.httpclient.Header[],byte[],java.lang.Throwable) -> sendFailureMessage
    329:329:void sendFinishMessage() -> sendFinishMessage
    400:401:void sendMessage(android.os.Message) -> sendMessage
    309:309:void sendProgressMessage(long,long) -> sendProgressMessage
    439:448:void sendResponseMessage(cz.msebera.android.httpclient.HttpResponse) -> sendResponseMessage
    334:334:void sendRetryMessage(int) -> sendRetryMessage
    324:324:void sendStartMessage() -> sendStartMessage
    314:314:void sendSuccessMessage(int,cz.msebera.android.httpclient.Header[],byte[]) -> sendSuccessMessage
    176:176:void setRequestHeaders(cz.msebera.android.httpclient.Header[]) -> setRequestHeaders
    166:166:void setRequestURI(java.net.URI) -> setRequestURI
    214:218:void setUsePoolThread(boolean) -> setUsePoolThread
    187:201:void setUseSynchronousMode(boolean) -> setUseSynchronousMode
com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler -> com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler:
    504:505:void <init>(com.loopj.android.http.AsyncHttpResponseHandler,android.os.Looper) -> <init>
    510:510:void handleMessage(android.os.Message) -> handleMessage
com.loopj.android.http.BinaryHttpResponseHandler -> com.loopj.android.http.BinaryHttpResponseHandler:
    77:81:void <init>(java.lang.String[]) -> <init>
    108:108:java.lang.String[] getAllowedContentTypes() -> getAllowedContentTypes
    119:158:void sendResponseMessage(cz.msebera.android.httpclient.HttpResponse) -> sendResponseMessage
com.loopj.android.http.FileAsyncHttpResponseHandler -> com.loopj.android.http.FileAsyncHttpResponseHandler:
    55:55:void <init>(java.io.File,boolean) -> <init>
    66:66:void <init>(java.io.File,boolean,boolean) -> <init>
    79:91:void <init>(java.io.File,boolean,boolean,boolean) -> <init>
    137:138:java.io.File getOriginalFile() -> getOriginalFile
    218:234:byte[] getResponseData(cz.msebera.android.httpclient.HttpEntity) -> getResponseData
    147:150:java.io.File getTargetFile() -> getTargetFile
    162:177:java.io.File getTargetFileByParsingURL() -> getTargetFileByParsingURL
    187:187:void onFailure(int,cz.msebera.android.httpclient.Header[],byte[],java.lang.Throwable) -> onFailure
    203:203:void onSuccess(int,cz.msebera.android.httpclient.Header[],byte[]) -> onSuccess
com.loopj.android.http.HttpGet -> com.loopj.android.http.HttpGet:
    52:53:void <init>(java.lang.String) -> <init>
com.loopj.android.http.LogHandler -> com.loopj.android.http.LogHandler:
    7:10:void <init>() -> <init>
    72:72:void checkedWtf(java.lang.String,java.lang.String,java.lang.Throwable) -> checkedWtf
    87:87:void d(java.lang.String,java.lang.String) -> d
    117:117:void e(java.lang.String,java.lang.String) -> e
    122:122:void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    14:14:boolean isLoggingEnabled() -> isLoggingEnabled
    38:38:void log(int,java.lang.String,java.lang.String) -> log
    42:45:void logWithThrowable(int,java.lang.String,java.lang.String,java.lang.Throwable) -> logWithThrowable
    34:34:boolean shouldLog(int) -> shouldLog
    77:77:void v(java.lang.String,java.lang.String) -> v
    107:107:void w(java.lang.String,java.lang.String) -> w
    112:112:void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
com.loopj.android.http.MyRedirectHandler -> com.loopj.android.http.MyRedirectHandler:
    51:52:void <init>(boolean) -> <init>
    85:82:java.net.URI getLocationURI(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getLocationURI
    59:63:boolean isRedirectRequested(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isRedirectRequested
com.loopj.android.http.MySSLSocketFactory -> com.loopj.android.http.MySSLSocketFactory:
    71:85:void <init>(java.security.KeyStore) -> <init>
    189:189:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    194:194:java.net.Socket createSocket() -> createSocket
    152:156:cz.msebera.android.httpclient.conn.ssl.SSLSocketFactory getFixedSocketFactory() -> getFixedSocketFactory
    136:139:java.security.KeyStore getKeystore() -> getKeystore
com.loopj.android.http.MySSLSocketFactory$1 -> com.loopj.android.http.MySSLSocketFactory$1:
    73:73:void <init>(com.loopj.android.http.MySSLSocketFactory) -> <init>
com.loopj.android.http.RangeFileAsyncHttpResponseHandler -> com.loopj.android.http.RangeFileAsyncHttpResponseHandler:
    79:94:byte[] getResponseData(cz.msebera.android.httpclient.HttpEntity) -> getResponseData
    52:70:void sendResponseMessage(cz.msebera.android.httpclient.HttpResponse) -> sendResponseMessage
    102:106:void updateRequestHeaders(cz.msebera.android.httpclient.client.methods.HttpUriRequest) -> updateRequestHeaders
com.loopj.android.http.RequestHandle -> com.loopj.android.http.RequestHandle:
    31:32:void <init>(com.loopj.android.http.AsyncHttpRequest) -> <init>
    52:65:boolean cancel(boolean) -> cancel
    88:89:boolean isCancelled() -> isCancelled
    78:79:boolean isFinished() -> isFinished
    93:95:boolean shouldBeGarbageCollected() -> shouldBeGarbageCollected
com.loopj.android.http.RequestHandle$1 -> com.loopj.android.http.RequestHandle$1:
    55:55:void <init>(com.loopj.android.http.RequestHandle,com.loopj.android.http.AsyncHttpRequest,boolean) -> <init>
    58:58:void run() -> run
com.loopj.android.http.RetryHandler -> com.loopj.android.http.RetryHandler:
    43:57:void <clinit>() -> <clinit>
    63:65:void <init>(int,int) -> <init>
    69:69:void addClassToWhitelist(java.lang.Class) -> addClassToWhitelist
    115:116:boolean isInList(java.util.HashSet,java.lang.Throwable) -> isInList
    80:108:boolean retryRequest(java.io.IOException,int,cz.msebera.android.httpclient.protocol.HttpContext) -> retryRequest
com.loopj.android.http.Utils -> com.loopj.android.http.Utils:
    39:39:void asserts(boolean,java.lang.String) -> asserts
    52:52:java.lang.Object notNull(java.lang.Object,java.lang.String) -> notNull
com.oppo.oiface.engine.IOIfaceNotifier$Stub -> com.oppo.oiface.engine.IOIfaceNotifier$Stub:
    28:29:void <init>() -> <init>
    40:44:com.oppo.oiface.engine.IOIfaceNotifier asInterface(android.os.IBinder) -> asInterface
    68:64:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.oppo.oiface.engine.IOIfaceNotifier$Stub$Proxy -> com.oppo.oiface.engine.IOIfaceNotifier$Stub$Proxy:
    74:75:void <init>(android.os.IBinder) -> <init>
    80:80:android.os.IBinder asBinder() -> asBinder
    93:102:void onSystemNotify(java.lang.String) -> onSystemNotify
com.oppo.oiface.engine.IOIfaceService$Stub -> com.oppo.oiface.engine.IOIfaceService$Stub:
    18:19:void <init>() -> <init>
    30:34:com.oppo.oiface.engine.IOIfaceService asInterface(android.os.IBinder) -> asInterface
    44:44:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.oppo.oiface.engine.IOIfaceService$Stub$Proxy -> com.oppo.oiface.engine.IOIfaceService$Stub$Proxy:
    50:51:void <init>(android.os.IBinder) -> <init>
    56:56:android.os.IBinder asBinder() -> asBinder
    111:120:int getMemoryUsage(int) -> getMemoryUsage
    94:104:java.lang.String getOifaceVersion() -> getOifaceVersion
    80:88:void onAppRegister() -> onAppRegister
    65:74:void registerEngineClient(com.oppo.oiface.engine.IOIfaceNotifier) -> registerEngineClient
    127:133:void updateGameEngineInfo(java.lang.String) -> updateGameEngineInfo
com.oppo.oiface.engine.OifaceGameEngineManager -> com.oppo.oiface.engine.OifaceGameEngineManager:
    34:35:void <init>() -> <init>
    25:25:java.lang.ref.WeakReference access$000(com.oppo.oiface.engine.OifaceGameEngineManager) -> access$000
    25:25:com.oppo.oiface.engine.IOIfaceService access$102(com.oppo.oiface.engine.IOIfaceService) -> access$102
    39:55:boolean connectOifaceService() -> connectOifaceService
    80:87:com.oppo.oiface.engine.OifaceGameEngineManager getInstance() -> getInstance
    106:110:int getMemoryUsage(int) -> getMemoryUsage
    91:96:java.lang.String getOifaceVersion() -> getOifaceVersion
    116:121:void systemStatus(com.oppo.oiface.engine.CallBack) -> systemStatus
    131:136:boolean updateGameEngineInfo(java.lang.String) -> updateGameEngineInfo
com.oppo.oiface.engine.OifaceGameEngineManager$1 -> com.oppo.oiface.engine.OifaceGameEngineManager$1:
    43:43:void <init>(com.oppo.oiface.engine.OifaceGameEngineManager) -> <init>
    46:47:void onSystemNotify(java.lang.String) -> onSystemNotify
com.oppo.oiface.engine.OifaceGameEngineManager$2 -> com.oppo.oiface.engine.OifaceGameEngineManager$2:
    62:62:void <init>(com.oppo.oiface.engine.OifaceGameEngineManager) -> <init>
    65:66:void binderDied() -> binderDied
cz.msebera.android.httpclient.ConnectionClosedException -> cz.msebera.android.httpclient.ConnectionClosedException:
    47:47:void <init>(java.lang.String) -> <init>
cz.msebera.android.httpclient.Consts -> cz.msebera.android.httpclient.Consts:
    44:46:void <clinit>() -> <clinit>
cz.msebera.android.httpclient.HttpException -> cz.msebera.android.httpclient.HttpException:
    43:43:void <init>() -> <init>
    52:52:void <init>(java.lang.String) -> <init>
    63:64:void <init>(java.lang.String,java.lang.Throwable) -> <init>
cz.msebera.android.httpclient.HttpHost -> cz.msebera.android.httpclient.HttpHost:
    79:88:void <init>(java.lang.String,int,java.lang.String) -> <init>
    99:99:void <init>(java.lang.String,int) -> <init>
    151:151:void <init>(java.net.InetAddress,int,java.lang.String) -> <init>
    168:177:void <init>(java.net.InetAddress,java.lang.String,int,java.lang.String) -> <init>
    335:335:java.lang.Object clone() -> clone
    307:312:boolean equals(java.lang.Object) -> equals
    256:256:java.net.InetAddress getAddress() -> getAddress
    227:227:java.lang.String getHostName() -> getHostName
    236:236:int getPort() -> getPort
    245:245:java.lang.String getSchemeName() -> getSchemeName
    324:328:int hashCode() -> hashCode
    283:291:java.lang.String toHostString() -> toHostString
    298:298:java.lang.String toString() -> toString
    265:273:java.lang.String toURI() -> toURI
cz.msebera.android.httpclient.HttpVersion -> cz.msebera.android.httpclient.HttpVersion:
    57:63:void <clinit>() -> <clinit>
    75:75:void <init>(int,int) -> <init>
    90:107:cz.msebera.android.httpclient.ProtocolVersion forVersion(int,int) -> forVersion
cz.msebera.android.httpclient.MalformedChunkCodingException -> cz.msebera.android.httpclient.MalformedChunkCodingException:
    54:54:void <init>(java.lang.String) -> <init>
cz.msebera.android.httpclient.MessageConstraintException -> cz.msebera.android.httpclient.MessageConstraintException:
    48:49:void <init>(java.lang.String) -> <init>
    54:54:java.lang.String getMessage() -> getMessage
cz.msebera.android.httpclient.NoHttpResponseException -> cz.msebera.android.httpclient.NoHttpResponseException:
    47:47:void <init>(java.lang.String) -> <init>
cz.msebera.android.httpclient.ParseException -> cz.msebera.android.httpclient.ParseException:
    58:58:void <init>(java.lang.String) -> <init>
cz.msebera.android.httpclient.ProtocolException -> cz.msebera.android.httpclient.ProtocolException:
    54:54:void <init>(java.lang.String) -> <init>
    65:65:void <init>(java.lang.String,java.lang.Throwable) -> <init>
cz.msebera.android.httpclient.ProtocolVersion -> cz.msebera.android.httpclient.ProtocolVersion:
    70:73:void <init>(java.lang.String,int,int) -> <init>
    262:262:java.lang.Object clone() -> clone
    203:208:int compareToVersion(cz.msebera.android.httpclient.ProtocolVersion) -> compareToVersion
    160:165:boolean equals(java.lang.Object) -> equals
    122:127:cz.msebera.android.httpclient.ProtocolVersion forVersion(int,int) -> forVersion
    91:91:int getMajor() -> getMajor
    100:100:int getMinor() -> getMinor
    82:82:java.lang.String getProtocol() -> getProtocol
    138:138:int hashCode() -> hashCode
    182:182:boolean isComparable(cz.msebera.android.httpclient.ProtocolVersion) -> isComparable
    240:240:boolean lessEquals(cz.msebera.android.httpclient.ProtocolVersion) -> lessEquals
    251:257:java.lang.String toString() -> toString
cz.msebera.android.httpclient.TruncatedChunkException -> cz.msebera.android.httpclient.TruncatedChunkException:
    45:45:void <init>(java.lang.String) -> <init>
cz.msebera.android.httpclient.auth.AuthOption -> cz.msebera.android.httpclient.auth.AuthOption:
    42:46:void <init>(cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.auth.Credentials) -> <init>
    50:50:cz.msebera.android.httpclient.auth.AuthScheme getAuthScheme() -> getAuthScheme
    54:54:cz.msebera.android.httpclient.auth.Credentials getCredentials() -> getCredentials
    59:59:java.lang.String toString() -> toString
cz.msebera.android.httpclient.auth.AuthProtocolState -> cz.msebera.android.httpclient.auth.AuthProtocolState:
    31:29:void <clinit>() -> <clinit>
    29:29:void <init>(java.lang.String,int) -> <init>
    29:29:cz.msebera.android.httpclient.auth.AuthProtocolState valueOf(java.lang.String) -> valueOf
    29:29:cz.msebera.android.httpclient.auth.AuthProtocolState[] values() -> values
cz.msebera.android.httpclient.auth.AuthSchemeRegistry -> cz.msebera.android.httpclient.auth.AuthSchemeRegistry:
    58:59:void <init>() -> <init>
    110:115:cz.msebera.android.httpclient.auth.AuthScheme getAuthScheme(java.lang.String,cz.msebera.android.httpclient.params.HttpParams) -> getAuthScheme
    51:51:java.lang.Object lookup(java.lang.String) -> lookup
    145:145:cz.msebera.android.httpclient.auth.AuthSchemeProvider lookup(java.lang.String) -> lookup
    80:82:void register(java.lang.String,cz.msebera.android.httpclient.auth.AuthSchemeFactory) -> register
cz.msebera.android.httpclient.auth.AuthSchemeRegistry$1 -> cz.msebera.android.httpclient.auth.AuthSchemeRegistry$1:
    145:145:void <init>(cz.msebera.android.httpclient.auth.AuthSchemeRegistry,java.lang.String) -> <init>
    149:151:cz.msebera.android.httpclient.auth.AuthScheme create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
cz.msebera.android.httpclient.auth.AuthScope -> cz.msebera.android.httpclient.auth.AuthScope:
    74:74:void <clinit>() -> <clinit>
    108:113:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    130:136:void <init>(cz.msebera.android.httpclient.HttpHost,java.lang.String,java.lang.String) -> <init>
    173:173:void <init>(java.lang.String,int) -> <init>
    277:285:boolean equals(java.lang.Object) -> equals
    322:325:int hashCode() -> hashCode
    235:259:int match(cz.msebera.android.httpclient.auth.AuthScope) -> match
    293:313:java.lang.String toString() -> toString
cz.msebera.android.httpclient.auth.AuthState -> cz.msebera.android.httpclient.auth.AuthState:
    58:59:void <init>() -> <init>
    125:125:java.util.Queue getAuthOptions() -> getAuthOptions
    93:93:cz.msebera.android.httpclient.auth.AuthScheme getAuthScheme() -> getAuthScheme
    100:100:cz.msebera.android.httpclient.auth.Credentials getCredentials() -> getCredentials
    79:79:cz.msebera.android.httpclient.auth.AuthProtocolState getState() -> getState
    68:72:void reset() -> reset
    180:183:void setAuthScheme(cz.msebera.android.httpclient.auth.AuthScheme) -> setAuthScheme
    195:195:void setCredentials(cz.msebera.android.httpclient.auth.Credentials) -> setCredentials
    86:86:void setState(cz.msebera.android.httpclient.auth.AuthProtocolState) -> setState
    224:232:java.lang.String toString() -> toString
    112:116:void update(cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.auth.Credentials) -> update
    146:149:void update(java.util.Queue) -> update
cz.msebera.android.httpclient.auth.AuthenticationException -> cz.msebera.android.httpclient.auth.AuthenticationException:
    56:56:void <init>(java.lang.String) -> <init>
    67:67:void <init>(java.lang.String,java.lang.Throwable) -> <init>
cz.msebera.android.httpclient.auth.BasicUserPrincipal -> cz.msebera.android.httpclient.auth.BasicUserPrincipal:
    49:51:void <init>(java.lang.String) -> <init>
    71:73:boolean equals(java.lang.Object) -> equals
    56:56:java.lang.String getName() -> getName
    62:62:int hashCode() -> hashCode
    82:86:java.lang.String toString() -> toString
cz.msebera.android.httpclient.auth.ChallengeState -> cz.msebera.android.httpclient.auth.ChallengeState:
    36:34:void <clinit>() -> <clinit>
    34:34:void <init>(java.lang.String,int) -> <init>
    34:34:cz.msebera.android.httpclient.auth.ChallengeState valueOf(java.lang.String) -> valueOf
    34:34:cz.msebera.android.httpclient.auth.ChallengeState[] values() -> values
cz.msebera.android.httpclient.auth.InvalidCredentialsException -> cz.msebera.android.httpclient.auth.InvalidCredentialsException:
    56:56:void <init>(java.lang.String) -> <init>
cz.msebera.android.httpclient.auth.MalformedChallengeException -> cz.msebera.android.httpclient.auth.MalformedChallengeException:
    57:57:void <init>(java.lang.String) -> <init>
cz.msebera.android.httpclient.auth.NTCredentials -> cz.msebera.android.httpclient.auth.NTCredentials:
    158:161:boolean equals(java.lang.Object) -> equals
    133:133:java.lang.String getDomain() -> getDomain
    124:124:java.lang.String getPassword() -> getPassword
    119:119:java.lang.String getUserName() -> getUserName
    115:115:java.security.Principal getUserPrincipal() -> getUserPrincipal
    148:149:int hashCode() -> hashCode
    170:176:java.lang.String toString() -> toString
cz.msebera.android.httpclient.auth.UsernamePasswordCredentials -> cz.msebera.android.httpclient.auth.UsernamePasswordCredentials:
    57:65:void <init>(java.lang.String) -> <init>
    107:109:boolean equals(java.lang.Object) -> equals
    94:94:java.lang.String getPassword() -> getPassword
    85:85:java.security.Principal getUserPrincipal() -> getUserPrincipal
    99:99:int hashCode() -> hashCode
    118:118:java.lang.String toString() -> toString
cz.msebera.android.httpclient.client.CircularRedirectException -> cz.msebera.android.httpclient.client.CircularRedirectException:
    55:55:void <init>(java.lang.String) -> <init>
cz.msebera.android.httpclient.client.ClientProtocolException -> cz.msebera.android.httpclient.client.ClientProtocolException:
    48:48:void <init>(java.lang.String) -> <init>
    51:52:void <init>(java.lang.Throwable) -> <init>
cz.msebera.android.httpclient.client.HttpResponseException -> cz.msebera.android.httpclient.client.HttpResponseException:
    44:45:void <init>(int,java.lang.String) -> <init>
cz.msebera.android.httpclient.client.NonRepeatableRequestException -> cz.msebera.android.httpclient.client.NonRepeatableRequestException:
    57:57:void <init>(java.lang.String) -> <init>
    67:67:void <init>(java.lang.String,java.lang.Throwable) -> <init>
cz.msebera.android.httpclient.client.RedirectException -> cz.msebera.android.httpclient.client.RedirectException:
    56:56:void <init>(java.lang.String) -> <init>
cz.msebera.android.httpclient.client.config.RequestConfig -> cz.msebera.android.httpclient.client.config.RequestConfig:
    44:44:void <clinit>() -> <clinit>
    80:96:void <init>(boolean,cz.msebera.android.httpclient.HttpHost,java.net.InetAddress,boolean,java.lang.String,boolean,boolean,boolean,int,boolean,java.util.Collection,java.util.Collection,int,int,int,boolean) -> <init>
    41:41:java.lang.Object clone() -> clone
    315:315:cz.msebera.android.httpclient.client.config.RequestConfig clone() -> clone
    342:342:cz.msebera.android.httpclient.client.config.RequestConfig$Builder custom() -> custom
    175:175:java.lang.String getCookieSpec() -> getCookieSpec
    251:251:java.util.Collection getProxyPreferredAuthSchemes() -> getProxyPreferredAuthSchemes
    240:240:java.util.Collection getTargetPreferredAuthSchemes() -> getTargetPreferredAuthSchemes
    208:208:boolean isCircularRedirectsAllowed() -> isCircularRedirectsAllowed
    196:196:boolean isRelativeRedirectsAllowed() -> isRelativeRedirectsAllowed
    320:338:java.lang.String toString() -> toString
cz.msebera.android.httpclient.client.config.RequestConfig$Builder -> cz.msebera.android.httpclient.client.config.RequestConfig$Builder:
    386:395:void <init>() -> <init>
    484:484:cz.msebera.android.httpclient.client.config.RequestConfig build() -> build
    449:449:cz.msebera.android.httpclient.client.config.RequestConfig$Builder setAuthenticationEnabled(boolean) -> setAuthenticationEnabled
    439:439:cz.msebera.android.httpclient.client.config.RequestConfig$Builder setCircularRedirectsAllowed(boolean) -> setCircularRedirectsAllowed
    469:469:cz.msebera.android.httpclient.client.config.RequestConfig$Builder setConnectTimeout(int) -> setConnectTimeout
    464:464:cz.msebera.android.httpclient.client.config.RequestConfig$Builder setConnectionRequestTimeout(int) -> setConnectionRequestTimeout
    424:424:cz.msebera.android.httpclient.client.config.RequestConfig$Builder setCookieSpec(java.lang.String) -> setCookieSpec
    399:399:cz.msebera.android.httpclient.client.config.RequestConfig$Builder setExpectContinueEnabled(boolean) -> setExpectContinueEnabled
    409:409:cz.msebera.android.httpclient.client.config.RequestConfig$Builder setLocalAddress(java.net.InetAddress) -> setLocalAddress
    444:444:cz.msebera.android.httpclient.client.config.RequestConfig$Builder setMaxRedirects(int) -> setMaxRedirects
    404:404:cz.msebera.android.httpclient.client.config.RequestConfig$Builder setProxy(cz.msebera.android.httpclient.HttpHost) -> setProxy
    459:459:cz.msebera.android.httpclient.client.config.RequestConfig$Builder setProxyPreferredAuthSchemes(java.util.Collection) -> setProxyPreferredAuthSchemes
    429:429:cz.msebera.android.httpclient.client.config.RequestConfig$Builder setRedirectsEnabled(boolean) -> setRedirectsEnabled
    434:434:cz.msebera.android.httpclient.client.config.RequestConfig$Builder setRelativeRedirectsAllowed(boolean) -> setRelativeRedirectsAllowed
    474:474:cz.msebera.android.httpclient.client.config.RequestConfig$Builder setSocketTimeout(int) -> setSocketTimeout
    419:419:cz.msebera.android.httpclient.client.config.RequestConfig$Builder setStaleConnectionCheckEnabled(boolean) -> setStaleConnectionCheckEnabled
    454:454:cz.msebera.android.httpclient.client.config.RequestConfig$Builder setTargetPreferredAuthSchemes(java.util.Collection) -> setTargetPreferredAuthSchemes
cz.msebera.android.httpclient.client.entity.UrlEncodedFormEntity -> cz.msebera.android.httpclient.client.entity.UrlEncodedFormEntity:
    77:77:void <init>(java.lang.Iterable,java.nio.charset.Charset) -> <init>
cz.msebera.android.httpclient.client.methods.AbstractExecutionAwareRequest -> cz.msebera.android.httpclient.client.methods.AbstractExecutionAwareRequest:
    48:50:void <init>() -> <init>
    87:90:void abort() -> abort
    112:114:java.lang.Object clone() -> clone
    97:97:boolean isAborted() -> isAborted
    105:106:void setCancellable(cz.msebera.android.httpclient.concurrent.Cancellable) -> setCancellable
    56:56:void setConnectionRequest(cz.msebera.android.httpclient.conn.ClientConnectionRequest) -> setConnectionRequest
    70:70:void setReleaseTrigger(cz.msebera.android.httpclient.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
cz.msebera.android.httpclient.client.methods.AbstractExecutionAwareRequest$1 -> cz.msebera.android.httpclient.client.methods.AbstractExecutionAwareRequest$1:
    56:56:void <init>(cz.msebera.android.httpclient.client.methods.AbstractExecutionAwareRequest,cz.msebera.android.httpclient.conn.ClientConnectionRequest) -> <init>
    60:60:boolean cancel() -> cancel
cz.msebera.android.httpclient.client.methods.AbstractExecutionAwareRequest$2 -> cz.msebera.android.httpclient.client.methods.AbstractExecutionAwareRequest$2:
    70:70:void <init>(cz.msebera.android.httpclient.client.methods.AbstractExecutionAwareRequest,cz.msebera.android.httpclient.conn.ConnectionReleaseTrigger) -> <init>
    75:75:boolean cancel() -> cancel
cz.msebera.android.httpclient.client.methods.HttpEntityEnclosingRequestBase -> cz.msebera.android.httpclient.client.methods.HttpEntityEnclosingRequestBase:
    50:50:void <init>() -> <init>
    72:74:java.lang.Object clone() -> clone
    65:66:boolean expectContinue() -> expectContinue
    55:55:cz.msebera.android.httpclient.HttpEntity getEntity() -> getEntity
    60:60:void setEntity(cz.msebera.android.httpclient.HttpEntity) -> setEntity
cz.msebera.android.httpclient.client.methods.HttpGet -> cz.msebera.android.httpclient.client.methods.HttpGet:
    60:61:void <init>(java.net.URI) -> <init>
cz.msebera.android.httpclient.client.methods.HttpHead -> cz.msebera.android.httpclient.client.methods.HttpHead:
    63:64:void <init>(java.net.URI) -> <init>
    71:72:void <init>(java.lang.String) -> <init>
cz.msebera.android.httpclient.client.methods.HttpRequestBase -> cz.msebera.android.httpclient.client.methods.HttpRequestBase:
    46:46:void <init>() -> <init>
    97:97:cz.msebera.android.httpclient.client.config.RequestConfig getConfig() -> getConfig
    65:65:cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    81:91:cz.msebera.android.httpclient.RequestLine getRequestLine() -> getRequestLine
    76:76:java.net.URI getURI() -> getURI
    101:101:void setConfig(cz.msebera.android.httpclient.client.config.RequestConfig) -> setConfig
    60:60:void setProtocolVersion(cz.msebera.android.httpclient.ProtocolVersion) -> setProtocolVersion
    105:105:void setURI(java.net.URI) -> setURI
    126:126:java.lang.String toString() -> toString
cz.msebera.android.httpclient.client.methods.RequestBuilder -> cz.msebera.android.httpclient.client.methods.RequestBuilder:
    83:85:void <init>(java.lang.String) -> <init>
    101:101:void <init>() -> <init>
    478:507:cz.msebera.android.httpclient.client.methods.HttpUriRequest build() -> build
    257:258:cz.msebera.android.httpclient.client.methods.RequestBuilder copy(cz.msebera.android.httpclient.HttpRequest) -> copy
    265:321:cz.msebera.android.httpclient.client.methods.RequestBuilder doCopy(cz.msebera.android.httpclient.HttpRequest) -> doCopy
    359:359:cz.msebera.android.httpclient.client.methods.RequestBuilder setUri(java.net.URI) -> setUri
cz.msebera.android.httpclient.client.methods.RequestBuilder$InternalEntityEclosingRequest -> cz.msebera.android.httpclient.client.methods.RequestBuilder$InternalEntityEclosingRequest:
    532:533:void <init>(java.lang.String) -> <init>
    538:538:java.lang.String getMethod() -> getMethod
cz.msebera.android.httpclient.client.methods.RequestBuilder$InternalRequest -> cz.msebera.android.httpclient.client.methods.RequestBuilder$InternalRequest:
    516:517:void <init>(java.lang.String) -> <init>
    522:522:java.lang.String getMethod() -> getMethod
cz.msebera.android.httpclient.client.params.HttpClientParamConfig -> cz.msebera.android.httpclient.client.params.HttpClientParamConfig:
    54:85:cz.msebera.android.httpclient.client.config.RequestConfig getRequestConfig(cz.msebera.android.httpclient.params.HttpParams) -> getRequestConfig
cz.msebera.android.httpclient.client.params.HttpClientParams -> cz.msebera.android.httpclient.client.params.HttpClientParams:
    108:113:long getConnectionManagerTimeout(cz.msebera.android.httpclient.params.HttpParams) -> getConnectionManagerTimeout
    62:64:boolean isAuthenticating(cz.msebera.android.httpclient.params.HttpParams) -> isAuthenticating
    50:52:boolean isRedirecting(cz.msebera.android.httpclient.params.HttpParams) -> isRedirecting
cz.msebera.android.httpclient.client.protocol.HttpClientContext -> cz.msebera.android.httpclient.client.protocol.HttpClientContext:
    151:151:void <init>(cz.msebera.android.httpclient.protocol.HttpContext) -> <init>
    155:155:void <init>() -> <init>
    139:142:cz.msebera.android.httpclient.client.protocol.HttpClientContext adapt(cz.msebera.android.httpclient.protocol.HttpContext) -> adapt
    213:213:cz.msebera.android.httpclient.client.AuthCache getAuthCache() -> getAuthCache
    197:197:cz.msebera.android.httpclient.config.Lookup getAuthSchemeRegistry() -> getAuthSchemeRegistry
    180:180:cz.msebera.android.httpclient.cookie.CookieOrigin getCookieOrigin() -> getCookieOrigin
    176:176:cz.msebera.android.httpclient.cookie.CookieSpec getCookieSpec() -> getCookieSpec
    189:189:cz.msebera.android.httpclient.config.Lookup getCookieSpecRegistry() -> getCookieSpecRegistry
    168:168:cz.msebera.android.httpclient.client.CookieStore getCookieStore() -> getCookieStore
    205:205:cz.msebera.android.httpclient.client.CredentialsProvider getCredentialsProvider() -> getCredentialsProvider
    159:159:cz.msebera.android.httpclient.conn.routing.RouteInfo getHttpRoute() -> getHttpRoute
    185:185:cz.msebera.android.httpclient.config.Lookup getLookup(java.lang.String,java.lang.Class) -> getLookup
    225:225:cz.msebera.android.httpclient.auth.AuthState getProxyAuthState() -> getProxyAuthState
    241:242:cz.msebera.android.httpclient.client.config.RequestConfig getRequestConfig() -> getRequestConfig
    221:221:cz.msebera.android.httpclient.auth.AuthState getTargetAuthState() -> getTargetAuthState
    217:217:void setAuthCache(cz.msebera.android.httpclient.client.AuthCache) -> setAuthCache
cz.msebera.android.httpclient.client.protocol.RequestAddCookies -> cz.msebera.android.httpclient.client.protocol.RequestAddCookies:
    72:69:void <init>() -> <init>
    78:204:void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.client.protocol.RequestAuthCache -> cz.msebera.android.httpclient.client.protocol.RequestAuthCache:
    63:60:void <init>() -> <init>
    128:144:void doPreemptiveAuth(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.auth.AuthState,cz.msebera.android.httpclient.client.CredentialsProvider) -> doPreemptiveAuth
    69:118:void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.client.protocol.RequestAuthenticationBase -> cz.msebera.android.httpclient.client.protocol.RequestAuthenticationBase:
    52:49:void <init>() -> <init>
    118:122:cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> authenticate
    110:110:void ensureAuthScheme(cz.msebera.android.httpclient.auth.AuthScheme) -> ensureAuthScheme
    59:103:void process(cz.msebera.android.httpclient.auth.AuthState,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.client.protocol.RequestAuthenticationBase$1 -> cz.msebera.android.httpclient.client.protocol.RequestAuthenticationBase$1:
    61:61:void <clinit>() -> <clinit>
cz.msebera.android.httpclient.client.protocol.RequestClientConnControl -> cz.msebera.android.httpclient.client.protocol.RequestClientConnControl:
    58:53:void <init>() -> <init>
    64:88:void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.client.protocol.RequestDefaultHeaders -> cz.msebera.android.httpclient.client.protocol.RequestDefaultHeaders:
    57:58:void <init>(java.util.Collection) -> <init>
    62:62:void <init>() -> <init>
    68:85:void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.client.protocol.RequestProxyAuthentication -> cz.msebera.android.httpclient.client.protocol.RequestProxyAuthentication:
    56:56:void <init>() -> <init>
    61:89:void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.client.protocol.RequestTargetAuthentication -> cz.msebera.android.httpclient.client.protocol.RequestTargetAuthentication:
    53:53:void <init>() -> <init>
    58:80:void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.client.protocol.ResponseProcessCookies -> cz.msebera.android.httpclient.client.protocol.ResponseProcessCookies:
    62:59:void <init>() -> <init>
    137:156:java.lang.String formatCooke(cz.msebera.android.httpclient.cookie.Cookie) -> formatCooke
    68:99:void process(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> process
    108:129:void processCookies(cz.msebera.android.httpclient.HeaderIterator,cz.msebera.android.httpclient.cookie.CookieSpec,cz.msebera.android.httpclient.cookie.CookieOrigin,cz.msebera.android.httpclient.client.CookieStore) -> processCookies
cz.msebera.android.httpclient.client.utils.CloneUtils -> cz.msebera.android.httpclient.client.utils.CloneUtils:
    49:72:java.lang.Object cloneObject(java.lang.Object) -> cloneObject
cz.msebera.android.httpclient.client.utils.DateUtils -> cz.msebera.android.httpclient.client.utils.DateUtils:
    69:84:void <clinit>() -> <clinit>
    108:108:java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    127:142:java.util.Date parseDate(java.lang.String,java.lang.String[],java.util.Date) -> parseDate
cz.msebera.android.httpclient.client.utils.DateUtils$DateFormatHolder -> cz.msebera.android.httpclient.client.utils.DateUtils$DateFormatHolder:
    203:203:void <clinit>() -> <clinit>
    226:238:java.text.SimpleDateFormat formatFor(java.lang.String) -> formatFor
cz.msebera.android.httpclient.client.utils.DateUtils$DateFormatHolder$1 -> cz.msebera.android.httpclient.client.utils.DateUtils$DateFormatHolder$1:
    203:203:void <init>() -> <init>
    203:203:java.lang.Object initialValue() -> initialValue
    207:207:java.lang.ref.SoftReference initialValue() -> initialValue
cz.msebera.android.httpclient.client.utils.URIBuilder -> cz.msebera.android.httpclient.client.utils.URIBuilder:
    90:91:void <init>(java.net.URI) -> <init>
    323:329:cz.msebera.android.httpclient.client.utils.URIBuilder addParameters(java.util.List) -> addParameters
    120:120:java.net.URI build() -> build
    124:167:java.lang.String buildString() -> buildString
    410:412:cz.msebera.android.httpclient.client.utils.URIBuilder clearParameters() -> clearParameters
    171:183:void digestURI(java.net.URI) -> digestURI
    191:191:java.lang.String encodePath(java.lang.String) -> encodePath
    199:199:java.lang.String encodeUric(java.lang.String) -> encodeUric
    195:195:java.lang.String encodeUrlForm(java.util.List) -> encodeUrlForm
    187:187:java.lang.String encodeUserInfo(java.lang.String) -> encodeUserInfo
    467:467:java.lang.String getHost() -> getHost
    475:475:java.lang.String getPath() -> getPath
    479:482:java.util.List getQueryParams() -> getQueryParams
    463:463:java.lang.String getUserInfo() -> getUserInfo
    501:507:java.lang.String normalizePath(java.lang.String) -> normalizePath
    110:111:java.util.List parseQuery(java.lang.String,java.nio.charset.Charset) -> parseQuery
    98:98:cz.msebera.android.httpclient.client.utils.URIBuilder setCharset(java.nio.charset.Charset) -> setCharset
    439:440:cz.msebera.android.httpclient.client.utils.URIBuilder setFragment(java.lang.String) -> setFragment
    234:236:cz.msebera.android.httpclient.client.utils.URIBuilder setHost(java.lang.String) -> setHost
    254:256:cz.msebera.android.httpclient.client.utils.URIBuilder setPath(java.lang.String) -> setPath
    244:246:cz.msebera.android.httpclient.client.utils.URIBuilder setPort(int) -> setPort
    206:206:cz.msebera.android.httpclient.client.utils.URIBuilder setScheme(java.lang.String) -> setScheme
    215:218:cz.msebera.android.httpclient.client.utils.URIBuilder setUserInfo(java.lang.String) -> setUserInfo
    492:492:java.lang.String toString() -> toString
cz.msebera.android.httpclient.client.utils.URIUtils -> cz.msebera.android.httpclient.client.utils.URIUtils:
    362:405:cz.msebera.android.httpclient.HttpHost extractHost(java.net.URI) -> extractHost
    296:344:java.net.URI normalizeSyntax(java.net.URI) -> normalizeSyntax
    253:270:java.net.URI resolve(java.net.URI,java.net.URI) -> resolve
    282:285:java.net.URI resolveReferenceStartingWithQueryString(java.net.URI,java.net.URI) -> resolveReferenceStartingWithQueryString
    135:155:java.net.URI rewriteURI(java.net.URI,cz.msebera.android.httpclient.HttpHost,boolean) -> rewriteURI
    181:196:java.net.URI rewriteURI(java.net.URI) -> rewriteURI
cz.msebera.android.httpclient.client.utils.URLEncodedUtils -> cz.msebera.android.httpclient.client.utils.URLEncodedUtils:
    409:504:void <clinit>() -> <clinit>
    602:602:java.lang.String decodeFormFields(java.lang.String,java.nio.charset.Charset) -> decodeFormFields
    677:677:java.lang.String encPath(java.lang.String,java.nio.charset.Charset) -> encPath
    664:664:java.lang.String encUric(java.lang.String,java.nio.charset.Charset) -> encUric
    651:651:java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset) -> encUserInfo
    638:638:java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset) -> encodeFormFields
    369:369:java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> format
    387:400:java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset) -> format
    112:114:java.util.List parse(cz.msebera.android.httpclient.HttpEntity) -> parse
    235:237:java.util.List parse(java.lang.String,java.nio.charset.Charset) -> parse
    279:303:java.util.List parse(cz.msebera.android.httpclient.util.CharArrayBuffer,java.nio.charset.Charset,char[]) -> parse
    551:574:java.lang.String urlDecode(java.lang.String,java.nio.charset.Charset,boolean) -> urlDecode
    517:533:java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean) -> urlEncode
cz.msebera.android.httpclient.config.MessageConstraints -> cz.msebera.android.httpclient.config.MessageConstraints:
    44:44:void <clinit>() -> <clinit>
    50:52:void <init>(int,int) -> <init>
    42:42:java.lang.Object clone() -> clone
    65:65:cz.msebera.android.httpclient.config.MessageConstraints clone() -> clone
    82:82:cz.msebera.android.httpclient.config.MessageConstraints$Builder custom() -> custom
    60:60:int getMaxHeaderCount() -> getMaxHeaderCount
    56:56:int getMaxLineLength() -> getMaxLineLength
    70:74:java.lang.String toString() -> toString
cz.msebera.android.httpclient.config.MessageConstraints$Builder -> cz.msebera.android.httpclient.config.MessageConstraints$Builder:
    97:99:void <init>() -> <init>
    113:113:cz.msebera.android.httpclient.config.MessageConstraints build() -> build
    108:108:cz.msebera.android.httpclient.config.MessageConstraints$Builder setMaxHeaderCount(int) -> setMaxHeaderCount
    103:103:cz.msebera.android.httpclient.config.MessageConstraints$Builder setMaxLineLength(int) -> setMaxLineLength
cz.msebera.android.httpclient.conn.BasicManagedEntity -> cz.msebera.android.httpclient.conn.BasicManagedEntity:
    74:77:void <init>(cz.msebera.android.httpclient.HttpEntity,cz.msebera.android.httpclient.conn.ManagedClientConnection,boolean) -> <init>
    129:133:void abortConnection() -> abortConnection
    114:114:void consumeContent() -> consumeContent
    91:104:void ensureConsumed() -> ensureConsumed
    140:151:boolean eofDetected(java.io.InputStream) -> eofDetected
    87:87:java.io.InputStream getContent() -> getContent
    199:203:void releaseManagedConnection() -> releaseManagedConnection
    182:183:boolean streamAbort(java.io.InputStream) -> streamAbort
    158:176:boolean streamClosed(java.io.InputStream) -> streamClosed
    119:120:void writeTo(java.io.OutputStream) -> writeTo
cz.msebera.android.httpclient.conn.ConnectTimeoutException -> cz.msebera.android.httpclient.conn.ConnectTimeoutException:
    64:65:void <init>(java.lang.String) -> <init>
cz.msebera.android.httpclient.conn.ConnectionPoolTimeoutException -> cz.msebera.android.httpclient.conn.ConnectionPoolTimeoutException:
    57:57:void <init>(java.lang.String) -> <init>
cz.msebera.android.httpclient.conn.EofSensorInputStream -> cz.msebera.android.httpclient.conn.EofSensorInputStream:
    83:87:void <init>(java.io.InputStream,cz.msebera.android.httpclient.conn.EofSensorWatcher) -> <init>
    287:288:void abortConnection() -> abortConnection
    157:163:int available() -> available
    254:264:void checkAbort() -> checkAbort
    224:234:void checkClose() -> checkClose
    196:206:void checkEOF(int) -> checkEOF
    173:174:void close() -> close
    108:109:boolean isReadAllowed() -> isReadAllowed
    118:124:int read() -> read
    135:141:int read(byte[],int,int) -> read
    150:150:int read(byte[]) -> read
cz.msebera.android.httpclient.conn.HttpInetSocketAddress -> cz.msebera.android.httpclient.conn.HttpInetSocketAddress:
    51:53:void <init>(cz.msebera.android.httpclient.HttpHost,java.net.InetAddress,int) -> <init>
    57:57:cz.msebera.android.httpclient.HttpHost getHttpHost() -> getHttpHost
    62:62:java.lang.String toString() -> toString
cz.msebera.android.httpclient.conn.UnsupportedSchemeException -> cz.msebera.android.httpclient.conn.UnsupportedSchemeException:
    48:48:void <init>(java.lang.String) -> <init>
cz.msebera.android.httpclient.conn.params.ConnManagerParams -> cz.msebera.android.httpclient.conn.params.ConnManagerParams:
    84:84:void <clinit>() -> <clinit>
    113:116:cz.msebera.android.httpclient.conn.params.ConnPerRoute getMaxConnectionsPerRoute(cz.msebera.android.httpclient.params.HttpParams) -> getMaxConnectionsPerRoute
    143:144:int getMaxTotalConnections(cz.msebera.android.httpclient.params.HttpParams) -> getMaxTotalConnections
    101:102:void setMaxConnectionsPerRoute(cz.msebera.android.httpclient.params.HttpParams,cz.msebera.android.httpclient.conn.params.ConnPerRoute) -> setMaxConnectionsPerRoute
    130:131:void setMaxTotalConnections(cz.msebera.android.httpclient.params.HttpParams,int) -> setMaxTotalConnections
    79:80:void setTimeout(cz.msebera.android.httpclient.params.HttpParams,long) -> setTimeout
cz.msebera.android.httpclient.conn.params.ConnManagerParams$1 -> cz.msebera.android.httpclient.conn.params.ConnManagerParams$1:
    84:84:void <init>() -> <init>
cz.msebera.android.httpclient.conn.params.ConnPerRouteBean -> cz.msebera.android.httpclient.conn.params.ConnPerRouteBean:
    58:60:void <init>(int) -> <init>
    64:64:void <init>() -> <init>
    90:95:int getMaxForRoute(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> getMaxForRoute
    79:80:void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    109:109:java.lang.String toString() -> toString
cz.msebera.android.httpclient.conn.params.ConnRouteParams -> cz.msebera.android.httpclient.conn.params.ConnRouteParams:
    54:61:void <clinit>() -> <clinit>
    80:83:cz.msebera.android.httpclient.HttpHost getDefaultProxy(cz.msebera.android.httpclient.params.HttpParams) -> getDefaultProxy
    118:121:cz.msebera.android.httpclient.conn.routing.HttpRoute getForcedRoute(cz.msebera.android.httpclient.params.HttpParams) -> getForcedRoute
    157:159:java.net.InetAddress getLocalAddress(cz.msebera.android.httpclient.params.HttpParams) -> getLocalAddress
cz.msebera.android.httpclient.conn.routing.BasicRouteDirector -> cz.msebera.android.httpclient.conn.routing.BasicRouteDirector:
    39:39:void <init>() -> <init>
    96:116:int directStep(cz.msebera.android.httpclient.conn.routing.RouteInfo,cz.msebera.android.httpclient.conn.routing.RouteInfo) -> directStep
    80:80:int firstStep(cz.msebera.android.httpclient.conn.routing.RouteInfo) -> firstStep
    54:59:int nextStep(cz.msebera.android.httpclient.conn.routing.RouteInfo,cz.msebera.android.httpclient.conn.routing.RouteInfo) -> nextStep
    136:175:int proxiedStep(cz.msebera.android.httpclient.conn.routing.RouteInfo,cz.msebera.android.httpclient.conn.routing.RouteInfo) -> proxiedStep
cz.msebera.android.httpclient.conn.routing.HttpRoute -> cz.msebera.android.httpclient.conn.routing.HttpRoute:
    72:86:void <init>(cz.msebera.android.httpclient.HttpHost,java.net.InetAddress,java.util.List,boolean,cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType,cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType) -> <init>
    132:132:void <init>(cz.msebera.android.httpclient.HttpHost,java.net.InetAddress,cz.msebera.android.httpclient.HttpHost[],boolean,cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType,cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType) -> <init>
    170:170:void <init>(cz.msebera.android.httpclient.HttpHost,java.net.InetAddress,boolean) -> <init>
    180:180:void <init>(cz.msebera.android.httpclient.HttpHost) -> <init>
    199:199:void <init>(cz.msebera.android.httpclient.HttpHost,java.net.InetAddress,cz.msebera.android.httpclient.HttpHost,boolean) -> <init>
    363:363:java.lang.Object clone() -> clone
    290:299:boolean equals(java.lang.Object) -> equals
    91:93:int getDefaultPort(java.lang.String) -> getDefaultPort
    232:232:int getHopCount() -> getHopCount
    237:243:cz.msebera.android.httpclient.HttpHost getHopTarget(int) -> getHopTarget
    223:223:java.net.InetAddress getLocalAddress() -> getLocalAddress
    249:249:cz.msebera.android.httpclient.HttpHost getProxyHost() -> getProxyHost
    218:218:cz.msebera.android.httpclient.HttpHost getTargetHost() -> getTargetHost
    314:323:int hashCode() -> hashCode
    269:269:boolean isLayered() -> isLayered
    274:274:boolean isSecure() -> isSecure
    259:259:boolean isTunnelled() -> isTunnelled
    103:112:cz.msebera.android.httpclient.HttpHost normalize(cz.msebera.android.httpclient.HttpHost) -> normalize
    334:357:java.lang.String toString() -> toString
cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType -> cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType:
    65:65:void <clinit>() -> <clinit>
    65:65:void <init>(java.lang.String,int) -> <init>
    65:65:cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType valueOf(java.lang.String) -> valueOf
    65:65:cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType[] values() -> values
cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType -> cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType:
    49:49:void <clinit>() -> <clinit>
    49:49:void <init>(java.lang.String,int) -> <init>
    49:49:cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType valueOf(java.lang.String) -> valueOf
    49:49:cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType[] values() -> values
cz.msebera.android.httpclient.conn.routing.RouteTracker -> cz.msebera.android.httpclient.conn.routing.RouteTracker:
    81:86:void <init>(cz.msebera.android.httpclient.HttpHost,java.net.InetAddress) -> <init>
    108:108:void <init>(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> <init>
    373:373:java.lang.Object clone() -> clone
    131:135:void connectProxy(cz.msebera.android.httpclient.HttpHost,boolean) -> connectProxy
    118:120:void connectTarget(boolean) -> connectTarget
    288:301:boolean equals(java.lang.Object) -> equals
    201:205:int getHopCount() -> getHopCount
    213:220:cz.msebera.android.httpclient.HttpHost getHopTarget(int) -> getHopTarget
    195:195:java.net.InetAddress getLocalAddress() -> getLocalAddress
    228:228:cz.msebera.android.httpclient.HttpHost getProxyHost() -> getProxyHost
    190:190:cz.msebera.android.httpclient.HttpHost getTargetHost() -> getTargetHost
    315:325:int hashCode() -> hashCode
    232:232:boolean isConnected() -> isConnected
    252:252:boolean isLayered() -> isLayered
    257:257:boolean isSecure() -> isSecure
    242:242:boolean isTunnelled() -> isTunnelled
    183:185:void layerProtocol(boolean) -> layerProtocol
    93:97:void reset() -> reset
    269:269:cz.msebera.android.httpclient.conn.routing.HttpRoute toRoute() -> toRoute
    336:366:java.lang.String toString() -> toString
    145:148:void tunnelTarget(boolean) -> tunnelTarget
cz.msebera.android.httpclient.conn.scheme.PlainSocketFactory -> cz.msebera.android.httpclient.conn.scheme.PlainSocketFactory:
    75:76:void <init>() -> <init>
    102:119:java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,cz.msebera.android.httpclient.params.HttpParams) -> connectSocket
    148:157:java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,cz.msebera.android.httpclient.params.HttpParams) -> connectSocket
    87:87:java.net.Socket createSocket(cz.msebera.android.httpclient.params.HttpParams) -> createSocket
    91:91:java.net.Socket createSocket() -> createSocket
    62:62:cz.msebera.android.httpclient.conn.scheme.PlainSocketFactory getSocketFactory() -> getSocketFactory
cz.msebera.android.httpclient.conn.scheme.Scheme -> cz.msebera.android.httpclient.conn.scheme.Scheme:
    90:104:void <init>(java.lang.String,int,cz.msebera.android.httpclient.conn.scheme.SchemeSocketFactory) -> <init>
    124:139:void <init>(java.lang.String,cz.msebera.android.httpclient.conn.scheme.SocketFactory,int) -> <init>
    242:244:boolean equals(java.lang.Object) -> equals
    148:148:int getDefaultPort() -> getDefaultPort
    194:194:java.lang.String getName() -> getName
    185:185:cz.msebera.android.httpclient.conn.scheme.SchemeSocketFactory getSchemeSocketFactory() -> getSchemeSocketFactory
    255:257:int hashCode() -> hashCode
    204:204:boolean isLayered() -> isLayered
    217:217:int resolvePort(int) -> resolvePort
    227:234:java.lang.String toString() -> toString
cz.msebera.android.httpclient.conn.scheme.SchemeLayeredSocketFactoryAdaptor -> cz.msebera.android.httpclient.conn.scheme.SchemeLayeredSocketFactoryAdaptor:
    46:47:void <init>(cz.msebera.android.httpclient.conn.scheme.LayeredSocketFactory) -> <init>
    55:55:java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,cz.msebera.android.httpclient.params.HttpParams) -> createLayeredSocket
cz.msebera.android.httpclient.conn.scheme.SchemeLayeredSocketFactoryAdaptor2 -> cz.msebera.android.httpclient.conn.scheme.SchemeLayeredSocketFactoryAdaptor2:
    47:48:void <init>(cz.msebera.android.httpclient.conn.scheme.LayeredSchemeSocketFactory) -> <init>
    62:62:java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,cz.msebera.android.httpclient.params.HttpParams) -> connectSocket
    75:75:java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,cz.msebera.android.httpclient.params.HttpParams) -> createLayeredSocket
    53:53:java.net.Socket createSocket(cz.msebera.android.httpclient.params.HttpParams) -> createSocket
    67:67:boolean isSecure(java.net.Socket) -> isSecure
cz.msebera.android.httpclient.conn.scheme.SchemeRegistry -> cz.msebera.android.httpclient.conn.scheme.SchemeRegistry:
    57:58:void <init>() -> <init>
    105:108:cz.msebera.android.httpclient.conn.scheme.Scheme get(java.lang.String) -> get
    72:74:cz.msebera.android.httpclient.conn.scheme.Scheme getScheme(java.lang.String) -> getScheme
    92:93:cz.msebera.android.httpclient.conn.scheme.Scheme getScheme(cz.msebera.android.httpclient.HttpHost) -> getScheme
    123:124:cz.msebera.android.httpclient.conn.scheme.Scheme register(cz.msebera.android.httpclient.conn.scheme.Scheme) -> register
cz.msebera.android.httpclient.conn.scheme.SchemeSocketFactoryAdaptor -> cz.msebera.android.httpclient.conn.scheme.SchemeSocketFactoryAdaptor:
    48:49:void <init>(cz.msebera.android.httpclient.conn.scheme.SocketFactory) -> <init>
    58:66:java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,cz.msebera.android.httpclient.params.HttpParams) -> connectSocket
    71:71:java.net.Socket createSocket(cz.msebera.android.httpclient.params.HttpParams) -> createSocket
    91:94:boolean equals(java.lang.Object) -> equals
    100:100:int hashCode() -> hashCode
    76:76:boolean isSecure(java.net.Socket) -> isSecure
cz.msebera.android.httpclient.conn.ssl.AbstractVerifier -> cz.msebera.android.httpclient.conn.ssl.AbstractVerifier:
    62:68:void <clinit>() -> <clinit>
    58:60:void <init>() -> <init>
    255:256:int countDots(java.lang.String) -> countDots
    184:205:boolean matchIdentity(java.lang.String,java.lang.String,boolean) -> matchIdentity
    210:213:boolean validCountryWildcard(java.lang.String[]) -> validCountryWildcard
    74:114:void verify(java.lang.String,javax.net.ssl.SSLSocket) -> verify
    120:126:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    134:140:void verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    150:175:void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean) -> verify
cz.msebera.android.httpclient.conn.ssl.AllowAllHostnameVerifier -> cz.msebera.android.httpclient.conn.ssl.AllowAllHostnameVerifier:
    45:45:void <clinit>() -> <clinit>
    43:43:void <init>() -> <init>
cz.msebera.android.httpclient.conn.ssl.BrowserCompatHostnameVerifier -> cz.msebera.android.httpclient.conn.ssl.BrowserCompatHostnameVerifier:
    54:54:void <clinit>() -> <clinit>
    52:52:void <init>() -> <init>
    61:61:void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
cz.msebera.android.httpclient.conn.ssl.DefaultHostnameVerifier -> cz.msebera.android.httpclient.conn.ssl.DefaultHostnameVerifier:
    235:248:java.util.List extractSubjectAlts(java.security.cert.X509Certificate,int) -> extractSubjectAlts
    263:264:java.lang.String normaliseAddress(java.lang.String) -> normaliseAddress
cz.msebera.android.httpclient.conn.ssl.DistinguishedNameParser -> cz.msebera.android.httpclient.conn.ssl.DistinguishedNameParser:
    38:43:void <init>(javax.security.auth.x500.X500Principal) -> <init>
    163:193:java.lang.String escapedAV() -> escapedAV
    309:354:java.lang.String findMostSpecific(java.lang.String) -> findMostSpecific
    275:276:int getByte(int) -> getByte
    204:206:char getEscaped() -> getEscaped
    233:257:char getUTF8() -> getUTF8
    121:123:java.lang.String hexAV() -> hexAV
    49:63:java.lang.String nextAT() -> nextAT
    93:98:java.lang.String quotedAV() -> quotedAV
cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder -> cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder:
    76:78:void <init>() -> <init>
    165:167:javax.net.ssl.SSLContext build() -> build
    105:119:cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,cz.msebera.android.httpclient.conn.ssl.TrustStrategy) -> loadTrustMaterial
    127:127:cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore) -> loadTrustMaterial
cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder$TrustManagerDelegate -> cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder$TrustManagerDelegate:
    180:182:void <init>(javax.net.ssl.X509TrustManager,cz.msebera.android.httpclient.conn.ssl.TrustStrategy) -> <init>
    188:188:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    194:195:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    201:201:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
cz.msebera.android.httpclient.conn.ssl.SSLContexts -> cz.msebera.android.httpclient.conn.ssl.SSLContexts:
    57:61:javax.net.ssl.SSLContext createDefault() -> createDefault
    90:90:cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder custom() -> custom
cz.msebera.android.httpclient.conn.ssl.SSLInitializationException -> cz.msebera.android.httpclient.conn.ssl.SSLInitializationException:
    34:34:void <init>(java.lang.String,java.lang.Throwable) -> <init>
cz.msebera.android.httpclient.conn.ssl.SSLSocketFactory -> cz.msebera.android.httpclient.conn.ssl.SSLSocketFactory:
    151:157:void <clinit>() -> <clinit>
    287:287:void <init>(java.security.KeyStore) -> <init>
    337:337:void <init>(javax.net.ssl.SSLContext,cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier) -> <init>
    369:374:void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier) -> <init>
    398:409:java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,cz.msebera.android.httpclient.params.HttpParams) -> connectSocket
    468:479:java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,cz.msebera.android.httpclient.params.HttpParams) -> connectSocket
    525:538:java.net.Socket connectSocket(int,java.net.Socket,cz.msebera.android.httpclient.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,cz.msebera.android.httpclient.protocol.HttpContext) -> connectSocket
    442:442:java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,cz.msebera.android.httpclient.params.HttpParams) -> createLayeredSocket
    450:450:java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> createLayeredSocket
    556:563:java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,cz.msebera.android.httpclient.protocol.HttpContext) -> createLayeredSocket
    383:383:java.net.Socket createSocket(cz.msebera.android.httpclient.params.HttpParams) -> createSocket
    387:387:java.net.Socket createSocket() -> createSocket
    486:486:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    513:514:java.net.Socket createSocket(cz.msebera.android.httpclient.protocol.HttpContext) -> createSocket
    168:169:cz.msebera.android.httpclient.conn.ssl.SSLSocketFactory getSocketFactory() -> getSocketFactory
    503:509:void internalPrepareSocket(javax.net.ssl.SSLSocket) -> internalPrepareSocket
    428:430:boolean isSecure(java.net.Socket) -> isSecure
    454:455:void setHostnameVerifier(cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier) -> setHostnameVerifier
    569:574:void verifyHostname(javax.net.ssl.SSLSocket,java.lang.String) -> verifyHostname
cz.msebera.android.httpclient.conn.ssl.StrictHostnameVerifier -> cz.msebera.android.httpclient.conn.ssl.StrictHostnameVerifier:
    60:60:void <clinit>() -> <clinit>
    58:58:void <init>() -> <init>
    67:67:void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
cz.msebera.android.httpclient.conn.util.InetAddressUtils -> cz.msebera.android.httpclient.conn.util.InetAddressUtils:
    51:61:void <clinit>() -> <clinit>
    81:81:boolean isIPv4Address(java.lang.String) -> isIPv4Address
    121:121:boolean isIPv6Address(java.lang.String) -> isIPv6Address
    106:111:boolean isIPv6HexCompressedAddress(java.lang.String) -> isIPv6HexCompressedAddress
    95:95:boolean isIPv6StdAddress(java.lang.String) -> isIPv6StdAddress
cz.msebera.android.httpclient.cookie.CookieIdentityComparator -> cz.msebera.android.httpclient.cookie.CookieIdentityComparator:
    44:44:void <init>() -> <init>
    43:43:int compare(java.lang.Object,java.lang.Object) -> compare
    50:76:int compare(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.Cookie) -> compare
cz.msebera.android.httpclient.cookie.CookieOrigin -> cz.msebera.android.httpclient.cookie.CookieOrigin:
    50:61:void <init>(java.lang.String,int,java.lang.String,boolean) -> <init>
    65:65:java.lang.String getHost() -> getHost
    69:69:java.lang.String getPath() -> getPath
    73:73:int getPort() -> getPort
    77:77:boolean isSecure() -> isSecure
    82:92:java.lang.String toString() -> toString
cz.msebera.android.httpclient.cookie.CookiePathComparator -> cz.msebera.android.httpclient.cookie.CookiePathComparator:
    53:53:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    50:50:int compare(java.lang.Object,java.lang.Object) -> compare
    70:76:int compare(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.Cookie) -> compare
    58:63:java.lang.String normalizePath(cz.msebera.android.httpclient.cookie.Cookie) -> normalizePath
cz.msebera.android.httpclient.cookie.CookieRestrictionViolationException -> cz.msebera.android.httpclient.cookie.CookieRestrictionViolationException:
    58:58:void <init>(java.lang.String) -> <init>
cz.msebera.android.httpclient.cookie.CookieSpecRegistry -> cz.msebera.android.httpclient.cookie.CookieSpecRegistry:
    60:61:void <init>() -> <init>
    105:110:cz.msebera.android.httpclient.cookie.CookieSpec getCookieSpec(java.lang.String,cz.msebera.android.httpclient.params.HttpParams) -> getCookieSpec
    53:53:java.lang.Object lookup(java.lang.String) -> lookup
    157:157:cz.msebera.android.httpclient.cookie.CookieSpecProvider lookup(java.lang.String) -> lookup
    76:78:void register(java.lang.String,cz.msebera.android.httpclient.cookie.CookieSpecFactory) -> register
cz.msebera.android.httpclient.cookie.CookieSpecRegistry$1 -> cz.msebera.android.httpclient.cookie.CookieSpecRegistry$1:
    157:157:void <init>(cz.msebera.android.httpclient.cookie.CookieSpecRegistry,java.lang.String) -> <init>
    161:163:cz.msebera.android.httpclient.cookie.CookieSpec create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
cz.msebera.android.httpclient.cookie.MalformedCookieException -> cz.msebera.android.httpclient.cookie.MalformedCookieException:
    58:58:void <init>(java.lang.String) -> <init>
cz.msebera.android.httpclient.entity.AbstractHttpEntity -> cz.msebera.android.httpclient.entity.AbstractHttpEntity:
    65:65:void <init>() -> <init>
    91:91:cz.msebera.android.httpclient.Header getContentEncoding() -> getContentEncoding
    78:78:cz.msebera.android.httpclient.Header getContentType() -> getContentType
    103:103:boolean isChunked() -> isChunked
    180:180:void setChunked(boolean) -> setChunked
    145:145:void setContentEncoding(cz.msebera.android.httpclient.Header) -> setContentEncoding
    116:116:void setContentType(cz.msebera.android.httpclient.Header) -> setContentType
    130:132:void setContentType(java.lang.String) -> setContentType
    197:218:java.lang.String toString() -> toString
cz.msebera.android.httpclient.entity.BasicHttpEntity -> cz.msebera.android.httpclient.entity.BasicHttpEntity:
    57:58:void <init>() -> <init>
    77:78:java.io.InputStream getContent() -> getContent
    63:63:long getContentLength() -> getContentLength
    128:128:boolean isStreaming() -> isStreaming
    108:108:void setContent(java.io.InputStream) -> setContent
    98:98:void setContentLength(long) -> setContentLength
    113:122:void writeTo(java.io.OutputStream) -> writeTo
cz.msebera.android.httpclient.entity.BufferedHttpEntity -> cz.msebera.android.httpclient.entity.BufferedHttpEntity:
    61:63:void <init>(cz.msebera.android.httpclient.HttpEntity) -> <init>
    80:83:java.io.InputStream getContent() -> getContent
    71:74:long getContentLength() -> getContentLength
    94:94:boolean isChunked() -> isChunked
    122:122:boolean isStreaming() -> isStreaming
    110:114:void writeTo(java.io.OutputStream) -> writeTo
cz.msebera.android.httpclient.entity.ContentType -> cz.msebera.android.httpclient.entity.ContentType:
    69:96:void <clinit>() -> <clinit>
    104:107:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    113:116:void <init>(java.lang.String,java.nio.charset.Charset,cz.msebera.android.httpclient.NameValuePair[]) -> <init>
    180:182:cz.msebera.android.httpclient.entity.ContentType create(java.lang.String,java.nio.charset.Charset) -> create
    213:213:cz.msebera.android.httpclient.entity.ContentType create(cz.msebera.android.httpclient.HeaderElement,boolean) -> create
    218:233:cz.msebera.android.httpclient.entity.ContentType create(java.lang.String,cz.msebera.android.httpclient.NameValuePair[],boolean) -> create
    294:298:cz.msebera.android.httpclient.entity.ContentType get(cz.msebera.android.httpclient.HttpEntity) -> get
    124:124:java.nio.charset.Charset getCharset() -> getCharset
    120:120:java.lang.String getMimeType() -> getMimeType
    149:158:java.lang.String toString() -> toString
    162:163:boolean valid(java.lang.String) -> valid
cz.msebera.android.httpclient.entity.HttpEntityWrapper -> cz.msebera.android.httpclient.entity.HttpEntityWrapper:
    58:59:void <init>(cz.msebera.android.httpclient.HttpEntity) -> <init>
    111:111:void consumeContent() -> consumeContent
    90:90:java.io.InputStream getContent() -> getContent
    84:84:cz.msebera.android.httpclient.Header getContentEncoding() -> getContentEncoding
    74:74:long getContentLength() -> getContentLength
    79:79:cz.msebera.android.httpclient.Header getContentType() -> getContentType
    69:69:boolean isChunked() -> isChunked
    64:64:boolean isRepeatable() -> isRepeatable
    101:101:boolean isStreaming() -> isStreaming
    96:96:void writeTo(java.io.OutputStream) -> writeTo
cz.msebera.android.httpclient.entity.StringEntity -> cz.msebera.android.httpclient.entity.StringEntity:
    66:74:void <init>(java.lang.String,cz.msebera.android.httpclient.entity.ContentType) -> <init>
    185:185:java.lang.Object clone() -> clone
    163:163:java.io.InputStream getContent() -> getContent
    158:158:long getContentLength() -> getContentLength
    168:170:void writeTo(java.io.OutputStream) -> writeTo
cz.msebera.android.httpclient.extras.Base64 -> cz.msebera.android.httpclient.extras.Base64:
    27:27:void <clinit>() -> <clinit>
    740:740:void <init>() -> <init>
    494:494:byte[] encode(byte[],int) -> encode
    510:539:byte[] encode(byte[],int,int,int) -> encode
cz.msebera.android.httpclient.extras.Base64$Coder -> cz.msebera.android.httpclient.extras.Base64$Coder:
    71:71:void <init>() -> <init>
cz.msebera.android.httpclient.extras.Base64$Encoder -> cz.msebera.android.httpclient.extras.Base64$Encoder:
    542:565:void <clinit>() -> <clinit>
    581:592:void <init>(int,byte[]) -> <init>
    605:734:boolean process(byte[],int,int,boolean) -> process
cz.msebera.android.httpclient.extras.HttpClientAndroidLog -> cz.msebera.android.httpclient.extras.HttpClientAndroidLog:
    14:20:void <init>(java.lang.Object) -> <init>
    32:33:void debug(java.lang.Object) -> debug
    37:38:void debug(java.lang.Object,java.lang.Throwable) -> debug
    50:51:void error(java.lang.Object) -> error
    86:87:void info(java.lang.Object) -> info
    28:28:boolean isDebugEnabled() -> isDebugEnabled
    46:46:boolean isErrorEnabled() -> isErrorEnabled
    82:82:boolean isInfoEnabled() -> isInfoEnabled
    64:64:boolean isWarnEnabled() -> isWarnEnabled
    68:69:void warn(java.lang.Object) -> warn
    73:74:void warn(java.lang.Object,java.lang.Throwable) -> warn
cz.msebera.android.httpclient.impl.AbstractHttpClientConnection -> cz.msebera.android.httpclient.impl.AbstractHttpClientConnection:
    98:100:void <init>() -> <init>
    202:202:cz.msebera.android.httpclient.impl.HttpConnectionMetricsImpl createConnectionMetrics(cz.msebera.android.httpclient.io.HttpTransportMetrics,cz.msebera.android.httpclient.io.HttpTransportMetrics) -> createConnectionMetrics
    122:122:cz.msebera.android.httpclient.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    137:137:cz.msebera.android.httpclient.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    151:151:cz.msebera.android.httpclient.HttpResponseFactory createHttpResponseFactory() -> createHttpResponseFactory
    193:193:cz.msebera.android.httpclient.io.HttpMessageWriter createRequestWriter(cz.msebera.android.httpclient.io.SessionOutputBuffer,cz.msebera.android.httpclient.params.HttpParams) -> createRequestWriter
    272:272:void doFlush() -> doFlush
    276:277:void flush() -> flush
    225:236:void init(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.io.SessionOutputBuffer,cz.msebera.android.httpclient.params.HttpParams) -> init
    299:299:boolean isEof() -> isEof
    242:244:boolean isResponseAvailable(int) -> isResponseAvailable
    303:311:boolean isStale() -> isStale
    292:295:void receiveResponseEntity(cz.msebera.android.httpclient.HttpResponse) -> receiveResponseEntity
    282:285:cz.msebera.android.httpclient.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    260:265:void sendRequestEntity(cz.msebera.android.httpclient.HttpEntityEnclosingRequest) -> sendRequestEntity
    252:255:void sendRequestHeader(cz.msebera.android.httpclient.HttpRequest) -> sendRequestHeader
cz.msebera.android.httpclient.impl.DefaultConnectionReuseStrategy -> cz.msebera.android.httpclient.impl.DefaultConnectionReuseStrategy:
    67:67:void <clinit>() -> <clinit>
    70:70:void <init>() -> <init>
    183:183:boolean canResponseHaveBody(cz.msebera.android.httpclient.HttpResponse) -> canResponseHaveBody
    77:165:boolean keepAlive(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> keepAlive
cz.msebera.android.httpclient.impl.DefaultHttpResponseFactory -> cz.msebera.android.httpclient.impl.DefaultHttpResponseFactory:
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>(cz.msebera.android.httpclient.ReasonPhraseCatalog) -> <init>
    71:71:void <init>() -> <init>
    108:108:java.util.Locale determineLocale(cz.msebera.android.httpclient.protocol.HttpContext) -> determineLocale
    94:95:cz.msebera.android.httpclient.HttpResponse newHttpResponse(cz.msebera.android.httpclient.StatusLine,cz.msebera.android.httpclient.protocol.HttpContext) -> newHttpResponse
cz.msebera.android.httpclient.impl.EnglishReasonPhraseCatalog -> cz.msebera.android.httpclient.impl.EnglishReasonPhraseCatalog:
    54:220:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    77:83:java.lang.String getReason(int,java.util.Locale) -> getReason
    110:112:void setReason(int,java.lang.String) -> setReason
cz.msebera.android.httpclient.impl.HttpConnectionMetricsImpl -> cz.msebera.android.httpclient.impl.HttpConnectionMetricsImpl:
    63:65:void <init>(cz.msebera.android.httpclient.io.HttpTransportMetrics,cz.msebera.android.httpclient.io.HttpTransportMetrics) -> <init>
    94:94:void incrementRequestCount() -> incrementRequestCount
    103:103:void incrementResponseCount() -> incrementResponseCount
cz.msebera.android.httpclient.impl.SocketHttpClientConnection -> cz.msebera.android.httpclient.impl.SocketHttpClientConnection:
    66:63:void <init>() -> <init>
    70:70:void assertNotOpen() -> assertNotOpen
    75:75:void assertOpen() -> assertOpen
    143:153:void bind(java.net.Socket,cz.msebera.android.httpclient.params.HttpParams) -> bind
    230:250:void close() -> close
    97:97:cz.msebera.android.httpclient.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,cz.msebera.android.httpclient.params.HttpParams) -> createSessionInputBuffer
    119:119:cz.msebera.android.httpclient.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,cz.msebera.android.httpclient.params.HttpParams) -> createSessionOutputBuffer
    255:262:void formatAddress(java.lang.StringBuilder,java.net.SocketAddress) -> formatAddress
    181:182:java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    189:190:int getRemotePort() -> getRemotePort
    157:157:boolean isOpen() -> isOpen
    197:200:void setSocketTimeout(int) -> setSocketTimeout
    222:225:void shutdown() -> shutdown
    268:279:java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.auth.AuthSchemeBase -> cz.msebera.android.httpclient.impl.auth.AuthSchemeBase:
    76:76:void <init>() -> <init>
    138:138:cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> authenticate
    149:149:boolean isProxy() -> isProxy
    91:98:void processChallenge(cz.msebera.android.httpclient.Header) -> processChallenge
    163:167:java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.auth.BasicScheme -> cz.msebera.android.httpclient.impl.auth.BasicScheme:
    65:66:void <init>(java.nio.charset.Charset) -> <init>
    83:83:void <init>() -> <init>
    140:140:cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest) -> authenticate
    161:181:cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> authenticate
    119:119:boolean isComplete() -> isComplete
    107:108:void processChallenge(cz.msebera.android.httpclient.Header) -> processChallenge
    225:228:java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.auth.BasicSchemeFactory -> cz.msebera.android.httpclient.impl.auth.BasicSchemeFactory:
    55:56:void <init>(java.nio.charset.Charset) -> <init>
    60:60:void <init>() -> <init>
    70:70:cz.msebera.android.httpclient.auth.AuthScheme create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
    65:65:cz.msebera.android.httpclient.auth.AuthScheme newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
cz.msebera.android.httpclient.impl.auth.DigestScheme -> cz.msebera.android.httpclient.impl.auth.DigestScheme:
    86:86:void <clinit>() -> <clinit>
    109:110:void <init>(java.nio.charset.Charset) -> <init>
    127:127:void <init>() -> <init>
    196:196:cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest) -> authenticate
    219:222:cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> authenticate
    483:486:java.lang.String createCnonce() -> createCnonce
    258:288:cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest) -> createDigestHeader
    240:242:java.security.MessageDigest createMessageDigest(java.lang.String) -> createMessageDigest
    464:473:java.lang.String encode(byte[]) -> encode
    156:160:boolean isComplete() -> isComplete
    141:144:void processChallenge(cz.msebera.android.httpclient.Header) -> processChallenge
    491:496:java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.auth.DigestSchemeFactory -> cz.msebera.android.httpclient.impl.auth.DigestSchemeFactory:
    55:56:void <init>(java.nio.charset.Charset) -> <init>
    60:60:void <init>() -> <init>
    70:70:cz.msebera.android.httpclient.auth.AuthScheme create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
    65:65:cz.msebera.android.httpclient.auth.AuthScheme newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
cz.msebera.android.httpclient.impl.auth.HttpAuthenticator -> cz.msebera.android.httpclient.impl.auth.HttpAuthenticator:
    62:63:void <init>(cz.msebera.android.httpclient.extras.HttpClientAndroidLog) -> <init>
    106:169:boolean handleAuthChallenge(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.client.AuthenticationStrategy,cz.msebera.android.httpclient.auth.AuthState,cz.msebera.android.httpclient.protocol.HttpContext) -> handleAuthChallenge
    76:88:boolean isAuthenticationRequested(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.client.AuthenticationStrategy,cz.msebera.android.httpclient.auth.AuthState,cz.msebera.android.httpclient.protocol.HttpContext) -> isAuthenticationRequested
cz.msebera.android.httpclient.impl.auth.HttpAuthenticator$1 -> cz.msebera.android.httpclient.impl.auth.HttpAuthenticator$1:
    83:83:void <clinit>() -> <clinit>
cz.msebera.android.httpclient.impl.auth.HttpEntityDigester -> cz.msebera.android.httpclient.impl.auth.HttpEntityDigester:
    40:42:void <init>(java.security.MessageDigest) -> <init>
    63:68:void close() -> close
    72:72:byte[] getDigest() -> getDigest
    47:48:void write(int) -> write
    55:56:void write(byte[],int,int) -> write
cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl -> cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl:
    55:101:void <clinit>() -> <clinit>
    52:52:void <init>() -> <init>
cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$NTLMMessage -> cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$NTLMMessage:
    816:813:void <init>() -> <init>
cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$Type1Message -> cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$Type1Message:
    988:990:void <init>() -> <init>
cz.msebera.android.httpclient.impl.auth.NTLMScheme -> cz.msebera.android.httpclient.impl.auth.NTLMScheme:
    66:70:void <init>(cz.msebera.android.httpclient.impl.auth.NTLMEngine) -> <init>
    77:77:void <init>() -> <init>
    129:133:cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest) -> authenticate
    167:167:boolean isComplete() -> isComplete
    106:116:void parseChallenge(cz.msebera.android.httpclient.util.CharArrayBuffer,int,int) -> parseChallenge
cz.msebera.android.httpclient.impl.auth.NTLMScheme$State -> cz.msebera.android.httpclient.impl.auth.NTLMScheme$State:
    52:51:void <clinit>() -> <clinit>
    51:51:void <init>(java.lang.String,int) -> <init>
    51:51:cz.msebera.android.httpclient.impl.auth.NTLMScheme$State valueOf(java.lang.String) -> valueOf
    51:51:cz.msebera.android.httpclient.impl.auth.NTLMScheme$State[] values() -> values
cz.msebera.android.httpclient.impl.auth.NTLMSchemeFactory -> cz.msebera.android.httpclient.impl.auth.NTLMSchemeFactory:
    46:46:void <init>() -> <init>
    55:55:cz.msebera.android.httpclient.auth.AuthScheme create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
    50:50:cz.msebera.android.httpclient.auth.AuthScheme newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
cz.msebera.android.httpclient.impl.auth.RFC2617Scheme -> cz.msebera.android.httpclient.impl.auth.RFC2617Scheme:
    87:89:void <init>(java.nio.charset.Charset) -> <init>
    101:101:java.nio.charset.Charset getCredentialsCharset() -> getCredentialsCharset
    105:107:java.lang.String getCredentialsCharset(cz.msebera.android.httpclient.HttpRequest) -> getCredentialsCharset
    145:145:java.lang.String getParameter(java.lang.String) -> getParameter
    130:130:java.util.Map getParameters() -> getParameters
    155:155:java.lang.String getRealm() -> getRealm
    115:120:void parseChallenge(cz.msebera.android.httpclient.util.CharArrayBuffer,int,int) -> parseChallenge
cz.msebera.android.httpclient.impl.auth.UnsupportedDigestAlgorithmException -> cz.msebera.android.httpclient.impl.auth.UnsupportedDigestAlgorithmException:
    56:56:void <init>(java.lang.String) -> <init>
cz.msebera.android.httpclient.impl.client.AbstractHttpClient -> cz.msebera.android.httpclient.impl.client.AbstractHttpClient:
    287:289:void <init>(cz.msebera.android.httpclient.conn.ClientConnectionManager,cz.msebera.android.httpclient.params.HttpParams) -> <init>
    776:777:void addRequestInterceptor(cz.msebera.android.httpclient.HttpRequestInterceptor) -> addRequestInterceptor
    781:782:void addRequestInterceptor(cz.msebera.android.httpclient.HttpRequestInterceptor,int) -> addRequestInterceptor
    756:757:void addResponseInterceptor(cz.msebera.android.httpclient.HttpResponseInterceptor) -> addResponseInterceptor
    1007:1007:void close() -> close
    353:360:cz.msebera.android.httpclient.auth.AuthSchemeRegistry createAuthSchemeRegistry() -> createAuthSchemeRegistry
    321:345:cz.msebera.android.httpclient.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    968:968:cz.msebera.android.httpclient.client.RequestDirector createClientRequestDirector(cz.msebera.android.httpclient.protocol.HttpRequestExecutor,cz.msebera.android.httpclient.conn.ClientConnectionManager,cz.msebera.android.httpclient.ConnectionReuseStrategy,cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy,cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner,cz.msebera.android.httpclient.protocol.HttpProcessor,cz.msebera.android.httpclient.client.HttpRequestRetryHandler,cz.msebera.android.httpclient.client.RedirectStrategy,cz.msebera.android.httpclient.client.AuthenticationStrategy,cz.msebera.android.httpclient.client.AuthenticationStrategy,cz.msebera.android.httpclient.client.UserTokenHandler,cz.msebera.android.httpclient.params.HttpParams) -> createClientRequestDirector
    404:404:cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy() -> createConnectionKeepAliveStrategy
    400:400:cz.msebera.android.httpclient.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
    370:389:cz.msebera.android.httpclient.cookie.CookieSpecRegistry createCookieSpecRegistry() -> createCookieSpecRegistry
    444:444:cz.msebera.android.httpclient.client.CookieStore createCookieStore() -> createCookieStore
    448:448:cz.msebera.android.httpclient.client.CredentialsProvider createCredentialsProvider() -> createCredentialsProvider
    300:313:cz.msebera.android.httpclient.protocol.HttpContext createHttpContext() -> createHttpContext
    408:408:cz.msebera.android.httpclient.client.HttpRequestRetryHandler createHttpRequestRetryHandler() -> createHttpRequestRetryHandler
    452:452:cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> createHttpRoutePlanner
    432:432:cz.msebera.android.httpclient.client.AuthenticationStrategy createProxyAuthenticationStrategy() -> createProxyAuthenticationStrategy
    396:396:cz.msebera.android.httpclient.protocol.HttpRequestExecutor createRequestExecutor() -> createRequestExecutor
    420:420:cz.msebera.android.httpclient.client.AuthenticationStrategy createTargetAuthenticationStrategy() -> createTargetAuthenticationStrategy
    456:456:cz.msebera.android.httpclient.client.UserTokenHandler createUserTokenHandler() -> createUserTokenHandler
    1001:1002:cz.msebera.android.httpclient.params.HttpParams determineParams(cz.msebera.android.httpclient.HttpRequest) -> determineParams
    800:841:cz.msebera.android.httpclient.client.methods.CloseableHttpResponse doExecute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> doExecute
    495:498:cz.msebera.android.httpclient.auth.AuthSchemeRegistry getAuthSchemes() -> getAuthSchemes
    521:521:cz.msebera.android.httpclient.client.BackoffManager getBackoffManager() -> getBackoffManager
    506:506:cz.msebera.android.httpclient.client.ConnectionBackoffStrategy getConnectionBackoffStrategy() -> getConnectionBackoffStrategy
    546:549:cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy() -> getConnectionKeepAliveStrategy
    479:482:cz.msebera.android.httpclient.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    533:536:cz.msebera.android.httpclient.ConnectionReuseStrategy getConnectionReuseStrategy() -> getConnectionReuseStrategy
    514:517:cz.msebera.android.httpclient.cookie.CookieSpecRegistry getCookieSpecs() -> getCookieSpecs
    669:672:cz.msebera.android.httpclient.client.CookieStore getCookieStore() -> getCookieStore
    680:683:cz.msebera.android.httpclient.client.CredentialsProvider getCredentialsProvider() -> getCredentialsProvider
    713:716:cz.msebera.android.httpclient.protocol.BasicHttpProcessor getHttpProcessor() -> getHttpProcessor
    559:562:cz.msebera.android.httpclient.client.HttpRequestRetryHandler getHttpRequestRetryHandler() -> getHttpRequestRetryHandler
    461:464:cz.msebera.android.httpclient.params.HttpParams getParams() -> getParams
    720:736:cz.msebera.android.httpclient.protocol.HttpProcessor getProtocolProcessor() -> getProtocolProcessor
    655:658:cz.msebera.android.httpclient.client.AuthenticationStrategy getProxyAuthenticationStrategy() -> getProxyAuthenticationStrategy
    589:592:cz.msebera.android.httpclient.client.RedirectStrategy getRedirectStrategy() -> getRedirectStrategy
    487:490:cz.msebera.android.httpclient.protocol.HttpRequestExecutor getRequestExecutor() -> getRequestExecutor
    691:694:cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner getRoutePlanner() -> getRoutePlanner
    622:625:cz.msebera.android.httpclient.client.AuthenticationStrategy getTargetAuthenticationStrategy() -> getTargetAuthenticationStrategy
    702:705:cz.msebera.android.httpclient.client.UserTokenHandler getUserTokenHandler() -> getUserTokenHandler
    566:566:void setHttpRequestRetryHandler(cz.msebera.android.httpclient.client.HttpRequestRetryHandler) -> setHttpRequestRetryHandler
    582:582:void setRedirectHandler(cz.msebera.android.httpclient.client.RedirectHandler) -> setRedirectHandler
cz.msebera.android.httpclient.impl.client.AuthenticationStrategyAdaptor -> cz.msebera.android.httpclient.impl.client.AuthenticationStrategyAdaptor:
    148:156:void authFailed(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authFailed
    132:142:void authSucceeded(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authSucceeded
    83:83:java.util.Map getChallenges(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getChallenges
    169:169:cz.msebera.android.httpclient.client.AuthenticationHandler getHandler() -> getHandler
    76:76:boolean isAuthenticationRequested(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isAuthenticationRequested
    160:165:boolean isCachable(cz.msebera.android.httpclient.auth.AuthScheme) -> isCachable
    91:109:java.util.Queue select(java.util.Map,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> select
cz.msebera.android.httpclient.impl.client.AuthenticationStrategyImpl -> cz.msebera.android.httpclient.impl.client.AuthenticationStrategyImpl:
    70:71:void <clinit>() -> <clinit>
    86:88:void <init>(int,java.lang.String) -> <init>
    246:256:void authFailed(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authFailed
    214:230:void authSucceeded(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authSucceeded
    111:123:java.util.Map getChallenges(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getChallenges
    96:98:boolean isAuthenticationRequested(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isAuthenticationRequested
    235:240:boolean isCachable(cz.msebera.android.httpclient.auth.AuthScheme) -> isCachable
    151:203:java.util.Queue select(java.util.Map,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> select
cz.msebera.android.httpclient.impl.client.BasicAuthCache -> cz.msebera.android.httpclient.impl.client.BasicAuthCache:
    73:75:void <init>(cz.msebera.android.httpclient.conn.SchemePortResolver) -> <init>
    80:80:void <init>() -> <init>
    124:135:cz.msebera.android.httpclient.auth.AuthScheme get(cz.msebera.android.httpclient.HttpHost) -> get
    84:91:cz.msebera.android.httpclient.HttpHost getKey(cz.msebera.android.httpclient.HttpHost) -> getKey
    99:117:void put(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme) -> put
    151:152:void remove(cz.msebera.android.httpclient.HttpHost) -> remove
    162:162:java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.client.BasicCookieStore -> cz.msebera.android.httpclient.impl.client.BasicCookieStore:
    57:58:void <init>() -> <init>
    75:77:void addCookie(cz.msebera.android.httpclient.cookie.Cookie) -> addCookie
    126:128:boolean clearExpired(java.util.Date) -> clearExpired
    109:109:java.util.List getCookies() -> getCookies
    145:145:java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.client.BasicCredentialsProvider -> cz.msebera.android.httpclient.impl.client.BasicCredentialsProvider:
    52:53:void <init>() -> <init>
    98:99:cz.msebera.android.httpclient.auth.Credentials getCredentials(cz.msebera.android.httpclient.auth.AuthScope) -> getCredentials
    76:90:cz.msebera.android.httpclient.auth.Credentials matchCredentials(java.util.Map,cz.msebera.android.httpclient.auth.AuthScope) -> matchCredentials
    109:109:java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.client.ClientParamsStack -> cz.msebera.android.httpclient.impl.client.ClientParamsStack:
    100:104:void <init>(cz.msebera.android.httpclient.params.HttpParams,cz.msebera.android.httpclient.params.HttpParams,cz.msebera.android.httpclient.params.HttpParams,cz.msebera.android.httpclient.params.HttpParams) -> <init>
    193:207:java.lang.Object getParameter(java.lang.String) -> getParameter
    228:228:cz.msebera.android.httpclient.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
cz.msebera.android.httpclient.impl.client.CloseableHttpClient -> cz.msebera.android.httpclient.impl.client.CloseableHttpClient:
    56:58:void <init>() -> <init>
    90:94:cz.msebera.android.httpclient.HttpHost determineTarget(cz.msebera.android.httpclient.client.methods.HttpUriRequest) -> determineTarget
    81:82:cz.msebera.android.httpclient.client.methods.CloseableHttpResponse execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
cz.msebera.android.httpclient.impl.client.CloseableHttpResponseProxy -> cz.msebera.android.httpclient.impl.client.CloseableHttpResponseProxy:
    54:57:void <clinit>() -> <clinit>
    64:65:void <init>(cz.msebera.android.httpclient.HttpResponse) -> <init>
    69:70:void close() -> close
    76:88:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    96:98:cz.msebera.android.httpclient.client.methods.CloseableHttpResponse newProxy(cz.msebera.android.httpclient.HttpResponse) -> newProxy
cz.msebera.android.httpclient.impl.client.DefaultConnectionKeepAliveStrategy -> cz.msebera.android.httpclient.impl.client.DefaultConnectionKeepAliveStrategy:
    51:51:void <clinit>() -> <clinit>
    49:49:void <init>() -> <init>
    55:64:long getKeepAliveDuration(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getKeepAliveDuration
cz.msebera.android.httpclient.impl.client.DefaultHttpClient -> cz.msebera.android.httpclient.impl.client.DefaultHttpClient:
    128:128:void <init>(cz.msebera.android.httpclient.conn.ClientConnectionManager,cz.msebera.android.httpclient.params.HttpParams) -> <init>
    147:147:void <init>() -> <init>
    158:159:cz.msebera.android.httpclient.params.HttpParams createHttpParams() -> createHttpParams
    208:223:cz.msebera.android.httpclient.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
    180:184:void setDefaultHttpParams(cz.msebera.android.httpclient.params.HttpParams) -> setDefaultHttpParams
cz.msebera.android.httpclient.impl.client.DefaultHttpRequestRetryHandler -> cz.msebera.android.httpclient.impl.client.DefaultHttpRequestRetryHandler:
    58:58:void <clinit>() -> <clinit>
    80:85:void <init>(int,boolean,java.util.Collection) -> <init>
    103:103:void <init>(int,boolean) -> <init>
    121:121:void <init>() -> <init>
    187:187:boolean handleAsIdempotent(cz.msebera.android.httpclient.HttpRequest) -> handleAsIdempotent
    198:201:boolean requestIsAborted(cz.msebera.android.httpclient.HttpRequest) -> requestIsAborted
    132:159:boolean retryRequest(java.io.IOException,int,cz.msebera.android.httpclient.protocol.HttpContext) -> retryRequest
cz.msebera.android.httpclient.impl.client.DefaultRedirectHandler -> cz.msebera.android.httpclient.impl.client.DefaultRedirectHandler:
    70:65:void <init>() -> <init>
cz.msebera.android.httpclient.impl.client.DefaultRedirectStrategy -> cz.msebera.android.httpclient.impl.client.DefaultRedirectStrategy:
    84:89:void <clinit>() -> <clinit>
    95:76:void <init>() -> <init>
    188:199:java.net.URI createLocationURI(java.lang.String) -> createLocationURI
    126:137:java.net.URI getLocationURI(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getLocationURI
    220:231:cz.msebera.android.httpclient.client.methods.HttpUriRequest getRedirect(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getRedirect
    207:208:boolean isRedirectable(java.lang.String) -> isRedirectable
    103:114:boolean isRedirected(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isRedirected
cz.msebera.android.httpclient.impl.client.DefaultRedirectStrategyAdaptor -> cz.msebera.android.httpclient.impl.client.DefaultRedirectStrategyAdaptor:
    53:54:void <init>(cz.msebera.android.httpclient.client.RedirectHandler) -> <init>
    78:78:cz.msebera.android.httpclient.client.RedirectHandler getHandler() -> getHandler
    68:73:cz.msebera.android.httpclient.client.methods.HttpUriRequest getRedirect(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getRedirect
    61:61:boolean isRedirected(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isRedirected
cz.msebera.android.httpclient.impl.client.DefaultRequestDirector -> cz.msebera.android.httpclient.impl.client.DefaultRequestDirector:
    269:321:void <init>(cz.msebera.android.httpclient.extras.HttpClientAndroidLog,cz.msebera.android.httpclient.protocol.HttpRequestExecutor,cz.msebera.android.httpclient.conn.ClientConnectionManager,cz.msebera.android.httpclient.ConnectionReuseStrategy,cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy,cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner,cz.msebera.android.httpclient.protocol.HttpProcessor,cz.msebera.android.httpclient.client.HttpRequestRetryHandler,cz.msebera.android.httpclient.client.RedirectStrategy,cz.msebera.android.httpclient.client.AuthenticationStrategy,cz.msebera.android.httpclient.client.AuthenticationStrategy,cz.msebera.android.httpclient.client.UserTokenHandler,cz.msebera.android.httpclient.params.HttpParams) -> <init>
    1128:1144:void abortConnection() -> abortConnection
    988:1005:cz.msebera.android.httpclient.HttpRequest createConnectRequest(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext) -> createConnectRequest
    968:968:boolean createTunnelToProxy(cz.msebera.android.httpclient.conn.routing.HttpRoute,int,cz.msebera.android.httpclient.protocol.HttpContext) -> createTunnelToProxy
    856:885:boolean createTunnelToTarget(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext) -> createTunnelToTarget
    762:762:cz.msebera.android.httpclient.conn.routing.HttpRoute determineRoute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> determineRoute
    781:818:void establishRoute(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext) -> establishRoute
    373:582:cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    1030:1076:cz.msebera.android.httpclient.impl.client.RoutedRequest handleResponse(cz.msebera.android.httpclient.impl.client.RoutedRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> handleResponse
    734:738:void releaseConnection() -> releaseConnection
    342:363:void rewriteRequestURI(cz.msebera.android.httpclient.impl.client.RequestWrapper,cz.msebera.android.httpclient.conn.routing.HttpRoute) -> rewriteRequestURI
    601:635:void tryConnect(cz.msebera.android.httpclient.impl.client.RoutedRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> tryConnect
    646:716:cz.msebera.android.httpclient.HttpResponse tryExecute(cz.msebera.android.httpclient.impl.client.RoutedRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> tryExecute
    327:331:cz.msebera.android.httpclient.impl.client.RequestWrapper wrapRequest(cz.msebera.android.httpclient.HttpRequest) -> wrapRequest
cz.msebera.android.httpclient.impl.client.DefaultUserTokenHandler -> cz.msebera.android.httpclient.impl.client.DefaultUserTokenHandler:
    60:60:void <clinit>() -> <clinit>
    58:58:void <init>() -> <init>
    92:96:java.security.Principal getAuthPrincipal(cz.msebera.android.httpclient.auth.AuthState) -> getAuthPrincipal
    65:83:java.lang.Object getUserToken(cz.msebera.android.httpclient.protocol.HttpContext) -> getUserToken
cz.msebera.android.httpclient.impl.client.EntityEnclosingRequestWrapper -> cz.msebera.android.httpclient.impl.client.EntityEnclosingRequestWrapper:
    65:66:void <init>(cz.msebera.android.httpclient.HttpEntityEnclosingRequest) -> <init>
    57:57:boolean access$002(cz.msebera.android.httpclient.impl.client.EntityEnclosingRequestWrapper,boolean) -> access$002
    82:83:boolean expectContinue() -> expectContinue
    71:71:cz.msebera.android.httpclient.HttpEntity getEntity() -> getEntity
    88:88:boolean isRepeatable() -> isRepeatable
    76:77:void setEntity(cz.msebera.android.httpclient.HttpEntity) -> setEntity
cz.msebera.android.httpclient.impl.client.EntityEnclosingRequestWrapper$EntityWrapper -> cz.msebera.android.httpclient.impl.client.EntityEnclosingRequestWrapper$EntityWrapper:
    93:94:void <init>(cz.msebera.android.httpclient.impl.client.EntityEnclosingRequestWrapper,cz.msebera.android.httpclient.HttpEntity) -> <init>
    99:100:void consumeContent() -> consumeContent
    105:106:java.io.InputStream getContent() -> getContent
    111:112:void writeTo(java.io.OutputStream) -> writeTo
cz.msebera.android.httpclient.impl.client.HttpAuthenticator -> cz.msebera.android.httpclient.impl.client.HttpAuthenticator:
    45:45:void <init>(cz.msebera.android.httpclient.extras.HttpClientAndroidLog) -> <init>
    58:58:boolean authenticate(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.client.AuthenticationStrategy,cz.msebera.android.httpclient.auth.AuthState,cz.msebera.android.httpclient.protocol.HttpContext) -> authenticate
cz.msebera.android.httpclient.impl.client.ProxyAuthenticationStrategy -> cz.msebera.android.httpclient.impl.client.ProxyAuthenticationStrategy:
    46:46:void <clinit>() -> <clinit>
    49:49:void <init>() -> <init>
    43:43:void authFailed(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authFailed
    43:43:void authSucceeded(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authSucceeded
    43:43:java.util.Map getChallenges(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getChallenges
    54:54:java.util.Collection getPreferredAuthSchemes(cz.msebera.android.httpclient.client.config.RequestConfig) -> getPreferredAuthSchemes
    43:43:boolean isAuthenticationRequested(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isAuthenticationRequested
    43:43:java.util.Queue select(java.util.Map,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> select
cz.msebera.android.httpclient.impl.client.RedirectLocations -> cz.msebera.android.httpclient.impl.client.RedirectLocations:
    53:55:void <init>() -> <init>
    69:70:void add(java.net.URI) -> add
    185:186:void add(int,java.lang.Object) -> add
    62:62:boolean contains(java.net.URI) -> contains
    224:224:boolean contains(java.lang.Object) -> contains
    46:46:java.lang.Object get(int) -> get
    114:114:java.net.URI get(int) -> get
    46:46:java.lang.Object remove(int) -> remove
    204:207:java.net.URI remove(int) -> remove
    153:157:java.lang.Object set(int,java.lang.Object) -> set
    127:127:int size() -> size
cz.msebera.android.httpclient.impl.client.RequestWrapper -> cz.msebera.android.httpclient.impl.client.RequestWrapper:
    69:85:void <init>(cz.msebera.android.httpclient.HttpRequest) -> <init>
    146:146:void abort() -> abort
    163:163:int getExecCount() -> getExecCount
    101:101:java.lang.String getMethod() -> getMethod
    155:155:cz.msebera.android.httpclient.HttpRequest getOriginal() -> getOriginal
    111:114:cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    133:141:cz.msebera.android.httpclient.RequestLine getRequestLine() -> getRequestLine
    124:124:java.net.URI getURI() -> getURI
    167:167:void incrementExecCount() -> incrementExecCount
    95:96:void resetHeaders() -> resetHeaders
    128:128:void setURI(java.net.URI) -> setURI
cz.msebera.android.httpclient.impl.client.RoutedRequest -> cz.msebera.android.httpclient.impl.client.RoutedRequest:
    54:56:void <init>(cz.msebera.android.httpclient.impl.client.RequestWrapper,cz.msebera.android.httpclient.conn.routing.HttpRoute) -> <init>
    60:60:cz.msebera.android.httpclient.impl.client.RequestWrapper getRequest() -> getRequest
    64:64:cz.msebera.android.httpclient.conn.routing.HttpRoute getRoute() -> getRoute
cz.msebera.android.httpclient.impl.client.TargetAuthenticationStrategy -> cz.msebera.android.httpclient.impl.client.TargetAuthenticationStrategy:
    46:46:void <clinit>() -> <clinit>
    49:49:void <init>() -> <init>
    43:43:void authFailed(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authFailed
    43:43:void authSucceeded(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authSucceeded
    43:43:java.util.Map getChallenges(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getChallenges
    54:54:java.util.Collection getPreferredAuthSchemes(cz.msebera.android.httpclient.client.config.RequestConfig) -> getPreferredAuthSchemes
    43:43:boolean isAuthenticationRequested(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isAuthenticationRequested
    43:43:java.util.Queue select(java.util.Map,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> select
cz.msebera.android.httpclient.impl.client.TunnelRefusedException -> cz.msebera.android.httpclient.impl.client.TunnelRefusedException:
    50:51:void <init>(java.lang.String,cz.msebera.android.httpclient.HttpResponse) -> <init>
    55:55:cz.msebera.android.httpclient.HttpResponse getResponse() -> getResponse
cz.msebera.android.httpclient.impl.conn.AbstractClientConnAdapter -> cz.msebera.android.httpclient.impl.conn.AbstractClientConnAdapter:
    103:108:void <init>(cz.msebera.android.httpclient.conn.ClientConnectionManager,cz.msebera.android.httpclient.conn.OperatedClientConnection) -> <init>
    329:338:void abortConnection() -> abortConnection
    154:155:void assertValid(cz.msebera.android.httpclient.conn.OperatedClientConnection) -> assertValid
    116:117:void detach() -> detach
    199:201:void flush() -> flush
    342:345:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    125:125:cz.msebera.android.httpclient.conn.ClientConnectionManager getManager() -> getManager
    255:257:java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    261:263:int getRemotePort() -> getRemotePort
    286:295:javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    121:121:cz.msebera.android.httpclient.conn.OperatedClientConnection getWrappedConnection() -> getWrappedConnection
    309:309:boolean isMarkedReusable() -> isMarkedReusable
    160:165:boolean isOpen() -> isOpen
    143:143:boolean isReleased() -> isReleased
    205:207:boolean isResponseAvailable(int) -> isResponseAvailable
    169:177:boolean isStale() -> isStale
    301:301:void markReusable() -> markReusable
    212:215:void receiveResponseEntity(cz.msebera.android.httpclient.HttpResponse) -> receiveResponseEntity
    220:223:cz.msebera.android.httpclient.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    321:325:void releaseConnection() -> releaseConnection
    228:231:void sendRequestEntity(cz.msebera.android.httpclient.HttpEntityEnclosingRequest) -> sendRequestEntity
    236:239:void sendRequestHeader(cz.msebera.android.httpclient.HttpRequest) -> sendRequestHeader
    362:365:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    314:316:void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
    181:183:void setSocketTimeout(int) -> setSocketTimeout
    305:305:void unmarkReusable() -> unmarkReusable
cz.msebera.android.httpclient.impl.conn.AbstractPoolEntry -> cz.msebera.android.httpclient.impl.conn.AbstractPoolEntry:
    91:96:void <init>(cz.msebera.android.httpclient.conn.ClientConnectionOperator,cz.msebera.android.httpclient.conn.routing.HttpRoute) -> <init>
    105:105:java.lang.Object getState() -> getState
    230:246:void layerProtocol(cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> layerProtocol
    130:155:void open(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> open
    114:114:void setState(java.lang.Object) -> setState
    257:258:void shutdownEntry() -> shutdownEntry
    180:187:void tunnelTarget(boolean,cz.msebera.android.httpclient.params.HttpParams) -> tunnelTarget
cz.msebera.android.httpclient.impl.conn.AbstractPooledConnAdapter -> cz.msebera.android.httpclient.impl.conn.AbstractPooledConnAdapter:
    66:67:void <init>(cz.msebera.android.httpclient.conn.ClientConnectionManager,cz.msebera.android.httpclient.impl.conn.AbstractPoolEntry) -> <init>
    95:96:void assertValid(cz.msebera.android.httpclient.impl.conn.AbstractPoolEntry) -> assertValid
    156:163:void close() -> close
    116:117:void detach() -> detach
    83:83:cz.msebera.android.httpclient.impl.conn.AbstractPoolEntry getPoolEntry() -> getPoolEntry
    121:123:cz.msebera.android.httpclient.conn.routing.HttpRoute getRoute() -> getRoute
    150:152:void layerProtocol(cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> layerProtocol
    129:131:void open(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> open
    186:188:void setState(java.lang.Object) -> setState
    168:175:void shutdown() -> shutdown
    136:138:void tunnelTarget(boolean,cz.msebera.android.httpclient.params.HttpParams) -> tunnelTarget
cz.msebera.android.httpclient.impl.conn.BasicClientConnectionManager -> cz.msebera.android.httpclient.impl.conn.BasicClientConnectionManager:
    75:75:void <clinit>() -> <clinit>
    105:108:void <init>(cz.msebera.android.httpclient.conn.scheme.SchemeRegistry) -> <init>
    152:152:void assertNotShutdown() -> assertNotShutdown
    129:129:cz.msebera.android.httpclient.conn.ClientConnectionOperator createConnectionOperator(cz.msebera.android.httpclient.conn.scheme.SchemeRegistry) -> createConnectionOperator
    118:120:void finalize() -> finalize
    156:179:cz.msebera.android.httpclient.conn.ManagedClientConnection getConnection(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    125:125:cz.msebera.android.httpclient.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    193:234:void releaseConnection(cz.msebera.android.httpclient.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    136:136:cz.msebera.android.httpclient.conn.ClientConnectionRequest requestConnection(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    265:275:void shutdown() -> shutdown
    184:187:void shutdownConnection(cz.msebera.android.httpclient.HttpClientConnection) -> shutdownConnection
cz.msebera.android.httpclient.impl.conn.BasicClientConnectionManager$1 -> cz.msebera.android.httpclient.impl.conn.BasicClientConnectionManager$1:
    136:136:void <init>(cz.msebera.android.httpclient.impl.conn.BasicClientConnectionManager,cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> <init>
    144:144:cz.msebera.android.httpclient.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
cz.msebera.android.httpclient.impl.conn.ConnectionShutdownException -> cz.msebera.android.httpclient.impl.conn.ConnectionShutdownException:
    47:47:void <init>() -> <init>
cz.msebera.android.httpclient.impl.conn.DefaultClientConnection -> cz.msebera.android.httpclient.impl.conn.DefaultClientConnection:
    92:93:void <init>() -> <init>
    174:179:void close() -> close
    225:225:cz.msebera.android.httpclient.io.HttpMessageParser createResponseParser(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.HttpResponseFactory,cz.msebera.android.httpclient.params.HttpParams) -> createResponseParser
    188:196:cz.msebera.android.httpclient.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,cz.msebera.android.httpclient.params.HttpParams) -> createSessionInputBuffer
    206:214:cz.msebera.android.httpclient.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,cz.msebera.android.httpclient.params.HttpParams) -> createSessionOutputBuffer
    281:281:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    114:115:javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    110:110:java.net.Socket getSocket() -> getSocket
    105:105:boolean isSecure() -> isSecure
    135:138:void openCompleted(boolean,cz.msebera.android.httpclient.params.HttpParams) -> openCompleted
    122:130:void opening(java.net.Socket,cz.msebera.android.httpclient.HttpHost) -> opening
    251:259:cz.msebera.android.httpclient.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    267:275:void sendRequestHeader(cz.msebera.android.httpclient.HttpRequest) -> sendRequestHeader
    289:289:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    156:167:void shutdown() -> shutdown
    237:246:void update(java.net.Socket,cz.msebera.android.httpclient.HttpHost,boolean,cz.msebera.android.httpclient.params.HttpParams) -> update
cz.msebera.android.httpclient.impl.conn.DefaultClientConnectionOperator -> cz.msebera.android.httpclient.impl.conn.DefaultClientConnectionOperator:
    107:110:void <init>(cz.msebera.android.httpclient.conn.scheme.SchemeRegistry) -> <init>
    132:132:cz.msebera.android.httpclient.conn.OperatedClientConnection createConnection() -> createConnection
    136:139:cz.msebera.android.httpclient.conn.scheme.SchemeRegistry getSchemeRegistry(cz.msebera.android.httpclient.protocol.HttpContext) -> getSchemeRegistry
    150:187:void openConnection(cz.msebera.android.httpclient.conn.OperatedClientConnection,cz.msebera.android.httpclient.HttpHost,java.net.InetAddress,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> openConnection
    235:240:void prepareSocket(java.net.Socket,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> prepareSocket
    259:259:java.net.InetAddress[] resolveHostname(java.lang.String) -> resolveHostname
    206:219:void updateSecureConnection(cz.msebera.android.httpclient.conn.OperatedClientConnection,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> updateSecureConnection
cz.msebera.android.httpclient.impl.conn.DefaultHttpResponseParser -> cz.msebera.android.httpclient.impl.conn.DefaultHttpResponseParser:
    76:79:void <init>(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.message.LineParser,cz.msebera.android.httpclient.HttpResponseFactory,cz.msebera.android.httpclient.params.HttpParams) -> <init>
    57:57:cz.msebera.android.httpclient.HttpMessage parseHead(cz.msebera.android.httpclient.io.SessionInputBuffer) -> parseHead
    139:151:cz.msebera.android.httpclient.HttpResponse parseHead(cz.msebera.android.httpclient.io.SessionInputBuffer) -> parseHead
cz.msebera.android.httpclient.impl.conn.DefaultHttpRoutePlanner -> cz.msebera.android.httpclient.impl.conn.DefaultHttpRoutePlanner:
    76:78:void <init>(cz.msebera.android.httpclient.conn.scheme.SchemeRegistry) -> <init>
    86:109:cz.msebera.android.httpclient.conn.routing.HttpRoute determineRoute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> determineRoute
cz.msebera.android.httpclient.impl.conn.DefaultSchemePortResolver -> cz.msebera.android.httpclient.impl.conn.DefaultSchemePortResolver:
    43:43:void <clinit>() -> <clinit>
    41:41:void <init>() -> <init>
    47:58:int resolve(cz.msebera.android.httpclient.HttpHost) -> resolve
cz.msebera.android.httpclient.impl.conn.HttpPoolEntry -> cz.msebera.android.httpclient.impl.conn.HttpPoolEntry:
    56:58:void <init>(cz.msebera.android.httpclient.extras.HttpClientAndroidLog,java.lang.String,cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.conn.OperatedClientConnection,long,java.util.concurrent.TimeUnit) -> <init>
    90:94:void close() -> close
    79:79:cz.msebera.android.httpclient.conn.routing.HttpRoute getEffectiveRoute() -> getEffectiveRoute
    75:75:cz.msebera.android.httpclient.conn.routing.HttpRoute getPlannedRoute() -> getPlannedRoute
    71:71:cz.msebera.android.httpclient.conn.routing.RouteTracker getTracker() -> getTracker
    84:85:boolean isClosed() -> isClosed
    63:65:boolean isExpired(long) -> isExpired
cz.msebera.android.httpclient.impl.conn.IdleConnectionHandler -> cz.msebera.android.httpclient.impl.conn.IdleConnectionHandler:
    61:62:void <init>() -> <init>
cz.msebera.android.httpclient.impl.conn.LoggingSessionInputBuffer -> cz.msebera.android.httpclient.impl.conn.LoggingSessionInputBuffer:
    67:71:void <init>(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.impl.conn.Wire,java.lang.String) -> <init>
    127:127:cz.msebera.android.httpclient.io.HttpTransportMetrics getMetrics() -> getMetrics
    79:79:boolean isDataAvailable(int) -> isDataAvailable
    131:132:boolean isEof() -> isEof
    83:85:int read(byte[],int,int) -> read
    91:93:int read() -> read
    116:121:int readLine(cz.msebera.android.httpclient.util.CharArrayBuffer) -> readLine
cz.msebera.android.httpclient.impl.conn.LoggingSessionOutputBuffer -> cz.msebera.android.httpclient.impl.conn.LoggingSessionOutputBuffer:
    62:65:void <init>(cz.msebera.android.httpclient.io.SessionOutputBuffer,cz.msebera.android.httpclient.impl.conn.Wire,java.lang.String) -> <init>
    94:94:void flush() -> flush
    115:115:cz.msebera.android.httpclient.io.HttpTransportMetrics getMetrics() -> getMetrics
    73:75:void write(byte[],int,int) -> write
    80:82:void write(int) -> write
    98:102:void writeLine(cz.msebera.android.httpclient.util.CharArrayBuffer) -> writeLine
    107:110:void writeLine(java.lang.String) -> writeLine
cz.msebera.android.httpclient.impl.conn.ManagedClientConnectionImpl -> cz.msebera.android.httpclient.impl.conn.ManagedClientConnectionImpl:
    75:83:void <init>(cz.msebera.android.httpclient.conn.ClientConnectionManager,cz.msebera.android.httpclient.conn.ClientConnectionOperator,cz.msebera.android.httpclient.impl.conn.HttpPoolEntry) -> <init>
    446:458:void abortConnection() -> abortConnection
    129:133:void close() -> close
    95:96:cz.msebera.android.httpclient.impl.conn.HttpPoolEntry detach() -> detach
    113:115:cz.msebera.android.httpclient.conn.OperatedClientConnection ensureConnection() -> ensureConnection
    121:123:cz.msebera.android.httpclient.impl.conn.HttpPoolEntry ensurePoolEntry() -> ensurePoolEntry
    180:181:void flush() -> flush
    105:109:cz.msebera.android.httpclient.conn.OperatedClientConnection getConnection() -> getConnection
    101:101:cz.msebera.android.httpclient.conn.ClientConnectionManager getManager() -> getManager
    91:91:cz.msebera.android.httpclient.impl.conn.HttpPoolEntry getPoolEntry() -> getPoolEntry
    223:224:java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    228:229:int getRemotePort() -> getRemotePort
    282:283:cz.msebera.android.httpclient.conn.routing.HttpRoute getRoute() -> getRoute
    247:251:javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    424:424:boolean isMarkedReusable() -> isMarkedReusable
    147:149:boolean isOpen() -> isOpen
    185:186:boolean isResponseAvailable(int) -> isResponseAvailable
    156:158:boolean isStale() -> isStale
    379:393:void layerProtocol(cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> layerProtocol
    416:416:void markReusable() -> markReusable
    290:301:void open(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> open
    191:192:void receiveResponseEntity(cz.msebera.android.httpclient.HttpResponse) -> receiveResponseEntity
    196:197:cz.msebera.android.httpclient.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    436:442:void releaseConnection() -> releaseConnection
    202:203:void sendRequestEntity(cz.msebera.android.httpclient.HttpEntityEnclosingRequest) -> sendRequestEntity
    208:209:void sendRequestHeader(cz.msebera.android.httpclient.HttpRequest) -> sendRequestHeader
    429:431:void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
    165:166:void setSocketTimeout(int) -> setSocketTimeout
    411:412:void setState(java.lang.Object) -> setState
    138:142:void shutdown() -> shutdown
    325:338:void tunnelTarget(boolean,cz.msebera.android.httpclient.params.HttpParams) -> tunnelTarget
    420:420:void unmarkReusable() -> unmarkReusable
cz.msebera.android.httpclient.impl.conn.SchemeRegistryFactory -> cz.msebera.android.httpclient.impl.conn.SchemeRegistryFactory:
    49:52:cz.msebera.android.httpclient.conn.scheme.SchemeRegistry createDefault() -> createDefault
cz.msebera.android.httpclient.impl.conn.SystemDefaultDnsResolver -> cz.msebera.android.httpclient.impl.conn.SystemDefaultDnsResolver:
    41:41:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    45:45:java.net.InetAddress[] resolve(java.lang.String) -> resolve
cz.msebera.android.httpclient.impl.conn.Wire -> cz.msebera.android.httpclient.impl.conn.Wire:
    52:54:void <init>(cz.msebera.android.httpclient.extras.HttpClientAndroidLog,java.lang.String) -> <init>
    58:58:void <init>(cz.msebera.android.httpclient.extras.HttpClientAndroidLog) -> <init>
    92:92:boolean enabled() -> enabled
    115:116:void input(byte[],int,int) -> input
    127:128:void input(byte[]) -> input
    138:138:void input(int) -> input
    109:110:void output(byte[],int,int) -> output
    121:122:void output(byte[]) -> output
    133:133:void output(int) -> output
    63:86:void wire(java.lang.String,java.io.InputStream) -> wire
cz.msebera.android.httpclient.impl.conn.tsccm.AbstractConnPool -> cz.msebera.android.httpclient.impl.conn.tsccm.AbstractConnPool:
    90:94:void <init>() -> <init>
cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry -> cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry:
    87:95:void <init>(cz.msebera.android.httpclient.conn.ClientConnectionOperator,cz.msebera.android.httpclient.conn.routing.HttpRoute,long,java.util.concurrent.TimeUnit) -> <init>
    99:99:cz.msebera.android.httpclient.conn.OperatedClientConnection getConnection() -> getConnection
    103:103:cz.msebera.android.httpclient.conn.routing.HttpRoute getPlannedRoute() -> getPlannedRoute
    158:158:boolean isExpired(long) -> isExpired
    112:112:void shutdownEntry() -> shutdownEntry
    144:151:void updateExpiry(long,java.util.concurrent.TimeUnit) -> updateExpiry
cz.msebera.android.httpclient.impl.conn.tsccm.BasicPooledConnAdapter -> cz.msebera.android.httpclient.impl.conn.tsccm.BasicPooledConnAdapter:
    53:54:void <init>(cz.msebera.android.httpclient.impl.conn.tsccm.ThreadSafeClientConnManager,cz.msebera.android.httpclient.impl.conn.AbstractPoolEntry) -> <init>
    72:72:void detach() -> detach
    60:60:cz.msebera.android.httpclient.conn.ClientConnectionManager getManager() -> getManager
    66:66:cz.msebera.android.httpclient.impl.conn.AbstractPoolEntry getPoolEntry() -> getPoolEntry
cz.msebera.android.httpclient.impl.conn.tsccm.ConnPoolByRoute -> cz.msebera.android.httpclient.impl.conn.tsccm.ConnPoolByRoute:
    114:114:void <init>(cz.msebera.android.httpclient.conn.ClientConnectionOperator,cz.msebera.android.httpclient.conn.params.ConnPerRoute,int) -> <init>
    126:138:void <init>(cz.msebera.android.httpclient.conn.ClientConnectionOperator,cz.msebera.android.httpclient.conn.params.ConnPerRoute,int,long,java.util.concurrent.TimeUnit) -> <init>
    153:152:void <init>(cz.msebera.android.httpclient.conn.ClientConnectionOperator,cz.msebera.android.httpclient.params.HttpParams) -> <init>
    71:71:java.util.concurrent.locks.Lock access$000(cz.msebera.android.httpclient.impl.conn.tsccm.ConnPoolByRoute) -> access$000
    216:221:void closeConnection(cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry) -> closeConnection
    545:558:cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry createEntry(cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool,cz.msebera.android.httpclient.conn.ClientConnectionOperator) -> createEntry
    164:164:java.util.Queue createFreeConnQueue() -> createFreeConnQueue
    184:184:java.util.Map createRouteToPoolMap() -> createRouteToPoolMap
    174:174:java.util.Queue createWaitingThreadQueue() -> createWaitingThreadQueue
    578:598:void deleteEntry(cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    608:620:void deleteLeastUsedEntry() -> deleteLeastUsedEntry
    427:470:void freeEntry(cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    330:419:cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThreadAborter) -> getEntryBlocking
    485:526:cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry getFreeEntry(cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool,java.lang.Object) -> getFreeEntry
    238:249:cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool getRoutePool(cz.msebera.android.httpclient.conn.routing.HttpRoute,boolean) -> getRoutePool
    197:197:cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> newRouteSpecificPool
    212:212:cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition,cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool) -> newWaitingThread
    661:684:void notifyWaitingThread(cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool) -> notifyWaitingThread
    281:283:cz.msebera.android.httpclient.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    765:804:void shutdown() -> shutdown
cz.msebera.android.httpclient.impl.conn.tsccm.ConnPoolByRoute$1 -> cz.msebera.android.httpclient.impl.conn.tsccm.ConnPoolByRoute$1:
    283:283:void <init>(cz.msebera.android.httpclient.impl.conn.tsccm.ConnPoolByRoute,cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThreadAborter,cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> <init>
    286:290:void abortRequest() -> abortRequest
    298:298:cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool -> cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool:
    103:109:void <init>(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.conn.params.ConnPerRoute) -> <init>
    174:191:cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object) -> allocEntry
    227:228:void createdEntry(cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry) -> createdEntry
    244:246:boolean deleteEntry(cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    259:260:void dropEntry() -> dropEntry
    206:207:void freeEntry(cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry) -> freeEntry
    152:152:int getCapacity() -> getCapacity
    129:129:int getMaxEntries() -> getMaxEntries
    119:119:cz.msebera.android.httpclient.conn.routing.HttpRoute getRoute() -> getRoute
    285:285:boolean hasThread() -> hasThread
    142:142:boolean isUnused() -> isUnused
    295:295:cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThread nextThread() -> nextThread
    273:274:void queueThread(cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThread) -> queueThread
    309:309:void removeThread(cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThread) -> removeThread
cz.msebera.android.httpclient.impl.conn.tsccm.ThreadSafeClientConnManager -> cz.msebera.android.httpclient.impl.conn.tsccm.ThreadSafeClientConnManager:
    152:159:void <init>(cz.msebera.android.httpclient.params.HttpParams,cz.msebera.android.httpclient.conn.scheme.SchemeRegistry) -> <init>
    209:209:cz.msebera.android.httpclient.conn.ClientConnectionOperator createConnectionOperator(cz.msebera.android.httpclient.conn.scheme.SchemeRegistry) -> createConnectionOperator
    180:180:cz.msebera.android.httpclient.impl.conn.tsccm.AbstractConnPool createConnectionPool(cz.msebera.android.httpclient.params.HttpParams) -> createConnectionPool
    165:167:void finalize() -> finalize
    213:213:cz.msebera.android.httpclient.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    247:288:void releaseConnection(cz.msebera.android.httpclient.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    220:223:cz.msebera.android.httpclient.conn.ClientConnectionRequest requestConnection(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    292:293:void shutdown() -> shutdown
cz.msebera.android.httpclient.impl.conn.tsccm.ThreadSafeClientConnManager$1 -> cz.msebera.android.httpclient.impl.conn.tsccm.ThreadSafeClientConnManager$1:
    223:223:void <init>(cz.msebera.android.httpclient.impl.conn.tsccm.ThreadSafeClientConnManager,cz.msebera.android.httpclient.impl.conn.tsccm.PoolEntryRequest,cz.msebera.android.httpclient.conn.routing.HttpRoute) -> <init>
    226:226:void abortRequest() -> abortRequest
    232:239:cz.msebera.android.httpclient.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThread -> cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThread:
    76:81:void <init>(java.util.concurrent.locks.Condition,cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool) -> <init>
    144:147:boolean await(java.util.Date) -> await
    197:198:void interrupt() -> interrupt
    186:187:void wakeup() -> wakeup
cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThreadAborter -> cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThreadAborter:
    39:39:void <init>() -> <init>
    48:51:void abort() -> abort
    63:65:void setWaitingThread(cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThread) -> setWaitingThread
cz.msebera.android.httpclient.impl.cookie.AbstractCookieAttributeHandler -> cz.msebera.android.httpclient.impl.cookie.AbstractCookieAttributeHandler:
    40:40:void <init>() -> <init>
cz.msebera.android.httpclient.impl.cookie.AbstractCookieSpec -> cz.msebera.android.httpclient.impl.cookie.AbstractCookieSpec:
    62:63:void <init>() -> <init>
    79:82:void <init>(cz.msebera.android.httpclient.cookie.CommonCookieAttributeHandler[]) -> <init>
    108:108:cz.msebera.android.httpclient.cookie.CookieAttributeHandler findAttribHandler(java.lang.String) -> findAttribHandler
    127:127:java.util.Collection getAttribHandlers() -> getAttribHandlers
cz.msebera.android.httpclient.impl.cookie.BasicClientCookie -> cz.msebera.android.httpclient.impl.cookie.BasicClientCookie:
    58:62:void <init>(java.lang.String,java.lang.String) -> <init>
    344:345:java.lang.Object clone() -> clone
    332:332:boolean containsAttribute(java.lang.String) -> containsAttribute
    327:327:java.lang.String getAttribute(java.lang.String) -> getAttribute
    186:186:java.lang.String getDomain() -> getDomain
    144:144:java.util.Date getExpiryDate() -> getExpiryDate
    72:72:java.lang.String getName() -> getName
    215:215:java.lang.String getPath() -> getPath
    82:82:java.lang.String getValue() -> getValue
    278:278:int getVersion() -> getVersion
    302:304:boolean isExpired(java.util.Date) -> isExpired
    237:237:boolean isSecure() -> isSecure
    322:322:void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    118:118:void setComment(java.lang.String) -> setComment
    199:201:void setDomain(java.lang.String) -> setDomain
    160:160:void setExpiryDate(java.util.Date) -> setExpiryDate
    228:228:void setPath(java.lang.String) -> setPath
    254:254:void setSecure(boolean) -> setSecure
    291:291:void setVersion(int) -> setVersion
    351:370:java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.cookie.BasicClientCookie2 -> cz.msebera.android.httpclient.impl.cookie.BasicClientCookie2:
    56:56:void <init>(java.lang.String,java.lang.String) -> <init>
    96:98:java.lang.Object clone() -> clone
    61:61:int[] getPorts() -> getPorts
    91:91:boolean isExpired(java.util.Date) -> isExpired
    76:76:void setCommentURL(java.lang.String) -> setCommentURL
    81:81:void setDiscard(boolean) -> setDiscard
    66:66:void setPorts(int[]) -> setPorts
cz.msebera.android.httpclient.impl.cookie.BasicCommentHandler -> cz.msebera.android.httpclient.impl.cookie.BasicCommentHandler:
    44:44:void <init>() -> <init>
    50:51:void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
cz.msebera.android.httpclient.impl.cookie.BasicDomainHandler -> cz.msebera.android.httpclient.impl.cookie.BasicDomainHandler:
    51:51:void <init>() -> <init>
    95:105:boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    114:130:boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
    57:59:void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    76:86:void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
cz.msebera.android.httpclient.impl.cookie.BasicExpiresHandler -> cz.msebera.android.httpclient.impl.cookie.BasicExpiresHandler:
    49:51:void <init>(java.lang.String[]) -> <init>
    57:59:void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
cz.msebera.android.httpclient.impl.cookie.BasicMaxAgeHandler -> cz.msebera.android.httpclient.impl.cookie.BasicMaxAgeHandler:
    46:46:void <init>() -> <init>
    52:54:void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
cz.msebera.android.httpclient.impl.cookie.BasicPathHandler -> cz.msebera.android.httpclient.impl.cookie.BasicPathHandler:
    48:48:void <init>() -> <init>
    92:94:boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
    54:55:void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    73:83:boolean pathMatch(java.lang.String,java.lang.String) -> pathMatch
    61:64:void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
cz.msebera.android.httpclient.impl.cookie.BasicSecureHandler -> cz.msebera.android.httpclient.impl.cookie.BasicSecureHandler:
    46:46:void <init>() -> <init>
    58:60:boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
    52:53:void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
cz.msebera.android.httpclient.impl.cookie.BestMatchSpec -> cz.msebera.android.httpclient.impl.cookie.BestMatchSpec:
    45:45:void <init>(java.lang.String[],boolean) -> <init>
    49:49:void <init>() -> <init>
cz.msebera.android.httpclient.impl.cookie.BestMatchSpecFactory -> cz.msebera.android.httpclient.impl.cookie.BestMatchSpecFactory:
    56:57:void <init>(java.lang.String[],boolean) -> <init>
    61:61:void <init>() -> <init>
    86:86:cz.msebera.android.httpclient.cookie.CookieSpec create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
    69:80:cz.msebera.android.httpclient.cookie.CookieSpec newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpec -> cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpec:
    67:67:void <clinit>() -> <clinit>
    86:86:void <init>(java.lang.String[],cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory$SecurityLevel) -> <init>
    189:215:java.util.List formatCookies(java.util.List) -> formatCookies
    184:184:boolean isQuoteEnclosed(java.lang.String) -> isQuoteEnclosed
    114:119:java.util.List parse(cz.msebera.android.httpclient.Header,cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpec$1 -> cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpec$1:
    89:89:void <init>() -> <init>
cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory -> cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory:
    62:64:void <init>(java.lang.String[],cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory$SecurityLevel) -> <init>
    72:72:void <init>() -> <init>
    94:94:cz.msebera.android.httpclient.cookie.CookieSpec create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
    80:88:cz.msebera.android.httpclient.cookie.CookieSpec newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory$SecurityLevel -> cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory$SecurityLevel:
    54:53:void <clinit>() -> <clinit>
    53:53:void <init>(java.lang.String,int) -> <init>
    53:53:cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory$SecurityLevel valueOf(java.lang.String) -> valueOf
    53:53:cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory$SecurityLevel[] values() -> values
cz.msebera.android.httpclient.impl.cookie.BrowserCompatVersionAttributeHandler -> cz.msebera.android.httpclient.impl.cookie.BrowserCompatVersionAttributeHandler:
    49:49:void <init>() -> <init>
    58:60:void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
cz.msebera.android.httpclient.impl.cookie.CookieSpecBase -> cz.msebera.android.httpclient.impl.cookie.CookieSpecBase:
    54:54:void <init>() -> <init>
    68:68:void <init>(cz.msebera.android.httpclient.cookie.CommonCookieAttributeHandler[]) -> <init>
    85:85:java.lang.String getDefaultDomain(cz.msebera.android.httpclient.cookie.CookieOrigin) -> getDefaultDomain
    72:79:java.lang.String getDefaultPath(cz.msebera.android.httpclient.cookie.CookieOrigin) -> getDefaultPath
    132:135:boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
    90:95:java.util.List parse(cz.msebera.android.httpclient.HeaderElement[],cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
    123:126:void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
cz.msebera.android.httpclient.impl.cookie.DefaultCookieSpec -> cz.msebera.android.httpclient.impl.cookie.DefaultCookieSpec:
    71:95:void <init>(java.lang.String[],boolean) -> <init>
    184:202:java.util.List formatCookies(java.util.List) -> formatCookies
    208:208:int getVersion() -> getVersion
    169:178:boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
    106:133:java.util.List parse(cz.msebera.android.httpclient.Header,cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
    154:163:void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
cz.msebera.android.httpclient.impl.cookie.IgnoreSpec -> cz.msebera.android.httpclient.impl.cookie.IgnoreSpec:
    45:45:void <init>() -> <init>
    60:60:java.util.List formatCookies(java.util.List) -> formatCookies
    55:55:java.util.List parse(cz.msebera.android.httpclient.Header,cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
cz.msebera.android.httpclient.impl.cookie.IgnoreSpecFactory -> cz.msebera.android.httpclient.impl.cookie.IgnoreSpecFactory:
    49:49:void <init>() -> <init>
    59:59:cz.msebera.android.httpclient.cookie.CookieSpec create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
    54:54:cz.msebera.android.httpclient.cookie.CookieSpec newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
cz.msebera.android.httpclient.impl.cookie.NetscapeDomainHandler -> cz.msebera.android.httpclient.impl.cookie.NetscapeDomainHandler:
    50:50:void <init>() -> <init>
    98:105:boolean isSpecialDomain(java.lang.String) -> isSpecialDomain
    110:117:boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
    55:57:void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    65:83:void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
cz.msebera.android.httpclient.impl.cookie.NetscapeDraftHeaderParser -> cz.msebera.android.httpclient.impl.cookie.NetscapeDraftHeaderParser:
    52:59:void <clinit>() -> <clinit>
    64:65:void <init>() -> <init>
    71:81:cz.msebera.android.httpclient.HeaderElement parseHeader(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseHeader
    86:99:cz.msebera.android.httpclient.NameValuePair parseNameValuePair(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseNameValuePair
cz.msebera.android.httpclient.impl.cookie.NetscapeDraftSpec -> cz.msebera.android.httpclient.impl.cookie.NetscapeDraftSpec:
    67:67:void <init>(java.lang.String[]) -> <init>
    76:76:void <init>(cz.msebera.android.httpclient.cookie.CommonCookieAttributeHandler[]) -> <init>
    80:80:void <init>() -> <init>
    138:155:java.util.List formatCookies(java.util.List) -> formatCookies
    110:114:java.util.List parse(cz.msebera.android.httpclient.Header,cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
cz.msebera.android.httpclient.impl.cookie.NetscapeDraftSpecFactory -> cz.msebera.android.httpclient.impl.cookie.NetscapeDraftSpecFactory:
    56:57:void <init>(java.lang.String[]) -> <init>
    61:61:void <init>() -> <init>
    83:83:cz.msebera.android.httpclient.cookie.CookieSpec create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
    69:77:cz.msebera.android.httpclient.cookie.CookieSpec newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
cz.msebera.android.httpclient.impl.cookie.RFC2109DomainHandler -> cz.msebera.android.httpclient.impl.cookie.RFC2109DomainHandler:
    49:49:void <init>() -> <init>
    114:121:boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
    55:57:void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    68:73:void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
cz.msebera.android.httpclient.impl.cookie.RFC2109Spec -> cz.msebera.android.httpclient.impl.cookie.RFC2109Spec:
    63:63:void <clinit>() -> <clinit>
    73:81:void <init>(java.lang.String[],boolean) -> <init>
    86:86:void <init>() -> <init>
    91:92:void <init>(boolean,cz.msebera.android.httpclient.cookie.CommonCookieAttributeHandler[]) -> <init>
    164:173:java.util.List doFormatManyHeaders(java.util.List) -> doFormatManyHeaders
    143:159:java.util.List doFormatOneHeader(java.util.List) -> doFormatOneHeader
    211:223:void formatCookieAsVer(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.cookie.Cookie,int) -> formatCookieAsVer
    124:136:java.util.List formatCookies(java.util.List) -> formatCookies
    189:197:void formatParamAsVer(cz.msebera.android.httpclient.util.CharArrayBuffer,java.lang.String,java.lang.String,int) -> formatParamAsVer
    98:102:java.util.List parse(cz.msebera.android.httpclient.Header,cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
    111:114:void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
cz.msebera.android.httpclient.impl.cookie.RFC2109SpecFactory -> cz.msebera.android.httpclient.impl.cookie.RFC2109SpecFactory:
    56:57:void <init>(java.lang.String[],boolean) -> <init>
    61:61:void <init>() -> <init>
    86:86:cz.msebera.android.httpclient.cookie.CookieSpec create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
    69:80:cz.msebera.android.httpclient.cookie.CookieSpec newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
cz.msebera.android.httpclient.impl.cookie.RFC2109VersionHandler -> cz.msebera.android.httpclient.impl.cookie.RFC2109VersionHandler:
    47:47:void <init>() -> <init>
    53:55:void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    71:73:void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
cz.msebera.android.httpclient.impl.cookie.RFC2965CommentUrlAttributeHandler -> cz.msebera.android.httpclient.impl.cookie.RFC2965CommentUrlAttributeHandler:
    48:48:void <init>() -> <init>
    54:56:void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
cz.msebera.android.httpclient.impl.cookie.RFC2965DiscardAttributeHandler -> cz.msebera.android.httpclient.impl.cookie.RFC2965DiscardAttributeHandler:
    48:48:void <init>() -> <init>
    54:56:void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
cz.msebera.android.httpclient.impl.cookie.RFC2965DomainAttributeHandler -> cz.msebera.android.httpclient.impl.cookie.RFC2965DomainAttributeHandler:
    52:52:void <init>() -> <init>
    100:101:boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    173:186:boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
    61:63:void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    112:116:void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
cz.msebera.android.httpclient.impl.cookie.RFC2965PortAttributeHandler -> cz.msebera.android.httpclient.impl.cookie.RFC2965PortAttributeHandler:
    52:52:void <init>() -> <init>
    147:156:boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
    110:115:void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    66:79:int[] parsePortAttribute(java.lang.String) -> parsePortAttribute
    95:95:boolean portMatch(int,int[]) -> portMatch
    127:133:void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
cz.msebera.android.httpclient.impl.cookie.RFC2965Spec -> cz.msebera.android.httpclient.impl.cookie.RFC2965Spec:
    68:68:void <init>() -> <init>
    72:72:void <init>(java.lang.String[],boolean) -> <init>
    88:88:void <init>(boolean,cz.msebera.android.httpclient.cookie.CommonCookieAttributeHandler[]) -> <init>
    211:229:cz.msebera.android.httpclient.cookie.CookieOrigin adjustEffectiveHost(cz.msebera.android.httpclient.cookie.CookieOrigin) -> adjustEffectiveHost
    115:120:java.util.List createCookies(cz.msebera.android.httpclient.HeaderElement[],cz.msebera.android.httpclient.cookie.CookieOrigin) -> createCookies
    175:195:void formatCookieAsVer(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.cookie.Cookie,int) -> formatCookieAsVer
    242:247:cz.msebera.android.httpclient.Header getVersionHeader() -> getVersionHeader
    164:166:boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
    95:99:java.util.List parse(cz.msebera.android.httpclient.Header,cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
    109:109:java.util.List parse(cz.msebera.android.httpclient.HeaderElement[],cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
    157:159:void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
cz.msebera.android.httpclient.impl.cookie.RFC2965SpecFactory -> cz.msebera.android.httpclient.impl.cookie.RFC2965SpecFactory:
    56:57:void <init>(java.lang.String[],boolean) -> <init>
    61:61:void <init>() -> <init>
    86:86:cz.msebera.android.httpclient.cookie.CookieSpec create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
    69:80:cz.msebera.android.httpclient.cookie.CookieSpec newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
cz.msebera.android.httpclient.impl.cookie.RFC2965VersionAttributeHandler -> cz.msebera.android.httpclient.impl.cookie.RFC2965VersionAttributeHandler:
    50:50:void <init>() -> <init>
    59:61:void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    82:86:void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
cz.msebera.android.httpclient.impl.entity.EntityDeserializer -> cz.msebera.android.httpclient.impl.entity.EntityDeserializer:
    71:72:void <init>(cz.msebera.android.httpclient.entity.ContentLengthStrategy) -> <init>
    138:140:cz.msebera.android.httpclient.HttpEntity deserialize(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.HttpMessage) -> deserialize
    93:116:cz.msebera.android.httpclient.entity.BasicHttpEntity doDeserialize(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.HttpMessage) -> doDeserialize
cz.msebera.android.httpclient.impl.entity.EntitySerializer -> cz.msebera.android.httpclient.impl.entity.EntitySerializer:
    68:69:void <init>(cz.msebera.android.httpclient.entity.ContentLengthStrategy) -> <init>
    89:95:java.io.OutputStream doSerialize(cz.msebera.android.httpclient.io.SessionOutputBuffer,cz.msebera.android.httpclient.HttpMessage) -> doSerialize
    113:118:void serialize(cz.msebera.android.httpclient.io.SessionOutputBuffer,cz.msebera.android.httpclient.HttpMessage,cz.msebera.android.httpclient.HttpEntity) -> serialize
cz.msebera.android.httpclient.impl.entity.LaxContentLengthStrategy -> cz.msebera.android.httpclient.impl.entity.LaxContentLengthStrategy:
    53:53:void <clinit>() -> <clinit>
    66:67:void <init>(int) -> <init>
    75:75:void <init>() -> <init>
    80:124:long determineLength(cz.msebera.android.httpclient.HttpMessage) -> determineLength
cz.msebera.android.httpclient.impl.entity.StrictContentLengthStrategy -> cz.msebera.android.httpclient.impl.entity.StrictContentLengthStrategy:
    53:53:void <clinit>() -> <clinit>
    66:67:void <init>(int) -> <init>
    75:75:void <init>() -> <init>
    80:114:long determineLength(cz.msebera.android.httpclient.HttpMessage) -> determineLength
cz.msebera.android.httpclient.impl.io.AbstractMessageParser -> cz.msebera.android.httpclient.impl.io.AbstractMessageParser:
    87:94:void <init>(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.message.LineParser,cz.msebera.android.httpclient.params.HttpParams) -> <init>
    257:263:cz.msebera.android.httpclient.HttpMessage parse() -> parse
    144:145:cz.msebera.android.httpclient.Header[] parseHeaders(cz.msebera.android.httpclient.io.SessionInputBuffer,int,int,cz.msebera.android.httpclient.message.LineParser) -> parseHeaders
    180:232:cz.msebera.android.httpclient.Header[] parseHeaders(cz.msebera.android.httpclient.io.SessionInputBuffer,int,int,cz.msebera.android.httpclient.message.LineParser,java.util.List) -> parseHeaders
cz.msebera.android.httpclient.impl.io.AbstractMessageWriter -> cz.msebera.android.httpclient.impl.io.AbstractMessageWriter:
    73:77:void <init>(cz.msebera.android.httpclient.io.SessionOutputBuffer,cz.msebera.android.httpclient.message.LineFormatter,cz.msebera.android.httpclient.params.HttpParams) -> <init>
    109:117:void write(cz.msebera.android.httpclient.HttpMessage) -> write
cz.msebera.android.httpclient.impl.io.AbstractSessionInputBuffer -> cz.msebera.android.httpclient.impl.io.AbstractSessionInputBuffer:
    85:85:void <init>() -> <init>
    348:367:int appendDecoded(cz.msebera.android.httpclient.util.CharArrayBuffer,java.nio.ByteBuffer) -> appendDecoded
    123:123:cz.msebera.android.httpclient.impl.io.HttpTransportMetricsImpl createTransportMetrics() -> createTransportMetrics
    149:165:int fillBuffer() -> fillBuffer
    398:398:cz.msebera.android.httpclient.io.HttpTransportMetrics getMetrics() -> getMetrics
    375:383:int handleDecodingResult(java.nio.charset.CoderResult,cz.msebera.android.httpclient.util.CharArrayBuffer,java.nio.ByteBuffer) -> handleDecodingResult
    171:171:boolean hasBufferedData() -> hasBufferedData
    96:116:void init(java.io.InputStream,int,cz.msebera.android.httpclient.params.HttpParams) -> init
    137:137:int length() -> length
    305:323:int lineFromLineBuffer(cz.msebera.android.httpclient.util.CharArrayBuffer) -> lineFromLineBuffer
    329:341:int lineFromReadBuffer(cz.msebera.android.httpclient.util.CharArrayBuffer,int) -> lineFromReadBuffer
    226:227:int locateLF() -> locateLF
    176:182:int read() -> read
    189:213:int read(byte[],int,int) -> read
    250:286:int readLine(cz.msebera.android.httpclient.util.CharArrayBuffer) -> readLine
cz.msebera.android.httpclient.impl.io.AbstractSessionOutputBuffer -> cz.msebera.android.httpclient.impl.io.AbstractSessionOutputBuffer:
    68:68:void <clinit>() -> <clinit>
    105:105:void <init>() -> <init>
    132:132:cz.msebera.android.httpclient.impl.io.HttpTransportMetricsImpl createTransportMetrics() -> createTransportMetrics
    166:167:void flush() -> flush
    157:161:void flushBuffer() -> flushBuffer
    304:304:cz.msebera.android.httpclient.io.HttpTransportMetrics getMetrics() -> getMetrics
    293:300:void handleEncodingResult(java.nio.charset.CoderResult) -> handleEncodingResult
    109:125:void init(java.io.OutputStream,int,cz.msebera.android.httpclient.params.HttpParams) -> init
    146:146:int length() -> length
    177:182:void write(byte[],int,int) -> write
    199:199:void write(byte[]) -> write
    203:206:void write(int) -> write
    271:289:void writeEncoded(java.nio.CharBuffer) -> writeEncoded
    222:232:void writeLine(java.lang.String) -> writeLine
    248:267:void writeLine(cz.msebera.android.httpclient.util.CharArrayBuffer) -> writeLine
cz.msebera.android.httpclient.impl.io.ChunkedInputStream -> cz.msebera.android.httpclient.impl.io.ChunkedInputStream:
    102:107:void <init>(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.config.MessageConstraints) -> <init>
    116:116:void <init>(cz.msebera.android.httpclient.io.SessionInputBuffer) -> <init>
    121:123:int available() -> available
    311:321:void close() -> close
    249:268:int getChunkSize() -> getChunkSize
    223:224:void nextChunk() -> nextChunk
    291:299:void parseTrailerHeaders() -> parseTrailerHeaders
    143:144:int read() -> read
    178:179:int read(byte[],int,int) -> read
    215:215:int read(byte[]) -> read
cz.msebera.android.httpclient.impl.io.ChunkedOutputStream -> cz.msebera.android.httpclient.impl.io.ChunkedOutputStream:
    90:90:void <init>(cz.msebera.android.httpclient.io.SessionOutputBuffer) -> <init>
    100:102:void <init>(int,cz.msebera.android.httpclient.io.SessionOutputBuffer) -> <init>
    202:205:void close() -> close
    142:145:void finish() -> finish
    193:194:void flush() -> flush
    109:113:void flushCache() -> flushCache
    122:126:void flushCacheWithAppend(byte[],int,int) -> flushCacheWithAppend
    152:153:void write(int) -> write
    168:168:void write(byte[]) -> write
    177:178:void write(byte[],int,int) -> write
    131:132:void writeClosingChunk() -> writeClosingChunk
cz.msebera.android.httpclient.impl.io.ContentLengthInputStream -> cz.msebera.android.httpclient.impl.io.ContentLengthInputStream:
    85:87:void <init>(cz.msebera.android.httpclient.io.SessionInputBuffer,long) -> <init>
    116:118:int available() -> available
    99:109:void close() -> close
    132:133:int read() -> read
    166:167:int read(byte[],int,int) -> read
    200:200:int read(byte[]) -> read
    216:223:long skip(long) -> skip
cz.msebera.android.httpclient.impl.io.ContentLengthOutputStream -> cz.msebera.android.httpclient.impl.io.ContentLengthOutputStream:
    81:83:void <init>(cz.msebera.android.httpclient.io.SessionOutputBuffer,long) -> <init>
    93:95:void close() -> close
    101:101:void flush() -> flush
    106:107:void write(byte[],int,int) -> write
    122:122:void write(byte[]) -> write
    127:128:void write(int) -> write
cz.msebera.android.httpclient.impl.io.EmptyInputStream -> cz.msebera.android.httpclient.impl.io.EmptyInputStream:
    37:37:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
cz.msebera.android.httpclient.impl.io.HttpRequestWriter -> cz.msebera.android.httpclient.impl.io.HttpRequestWriter:
    53:53:void <init>(cz.msebera.android.httpclient.io.SessionOutputBuffer,cz.msebera.android.httpclient.message.LineFormatter,cz.msebera.android.httpclient.params.HttpParams) -> <init>
    46:46:void writeHeadLine(cz.msebera.android.httpclient.HttpMessage) -> writeHeadLine
    58:59:void writeHeadLine(cz.msebera.android.httpclient.HttpRequest) -> writeHeadLine
cz.msebera.android.httpclient.impl.io.HttpTransportMetricsImpl -> cz.msebera.android.httpclient.impl.io.HttpTransportMetricsImpl:
    44:41:void <init>() -> <init>
    57:57:void incrementBytesTransferred(long) -> incrementBytesTransferred
cz.msebera.android.httpclient.impl.io.IdentityInputStream -> cz.msebera.android.httpclient.impl.io.IdentityInputStream:
    63:64:void <init>(cz.msebera.android.httpclient.io.SessionInputBuffer) -> <init>
    69:70:int available() -> available
    78:78:void close() -> close
    83:86:int read() -> read
    92:95:int read(byte[],int,int) -> read
cz.msebera.android.httpclient.impl.io.IdentityOutputStream -> cz.msebera.android.httpclient.impl.io.IdentityOutputStream:
    61:62:void <init>(cz.msebera.android.httpclient.io.SessionOutputBuffer) -> <init>
    72:74:void close() -> close
    80:80:void flush() -> flush
    85:86:void write(byte[],int,int) -> write
    93:93:void write(byte[]) -> write
    98:99:void write(int) -> write
cz.msebera.android.httpclient.impl.io.SocketInputBuffer -> cz.msebera.android.httpclient.impl.io.SocketInputBuffer:
    68:79:void <init>(java.net.Socket,int,cz.msebera.android.httpclient.params.HttpParams) -> <init>
    84:85:int fillBuffer() -> fillBuffer
    90:98:boolean isDataAvailable(int) -> isDataAvailable
    105:105:boolean isEof() -> isEof
cz.msebera.android.httpclient.impl.io.SocketOutputBuffer -> cz.msebera.android.httpclient.impl.io.SocketOutputBuffer:
    63:72:void <init>(java.net.Socket,int,cz.msebera.android.httpclient.params.HttpParams) -> <init>
cz.msebera.android.httpclient.message.AbstractHttpMessage -> cz.msebera.android.httpclient.message.AbstractHttpMessage:
    57:59:void <init>(cz.msebera.android.httpclient.params.HttpParams) -> <init>
    63:63:void <init>() -> <init>
    99:99:void addHeader(cz.msebera.android.httpclient.Header) -> addHeader
    105:106:void addHeader(java.lang.String,java.lang.String) -> addHeader
    69:69:boolean containsHeader(java.lang.String) -> containsHeader
    93:93:cz.msebera.android.httpclient.Header[] getAllHeaders() -> getAllHeaders
    81:81:cz.msebera.android.httpclient.Header getFirstHeader(java.lang.String) -> getFirstHeader
    75:75:cz.msebera.android.httpclient.Header[] getHeaders(java.lang.String) -> getHeaders
    166:169:cz.msebera.android.httpclient.params.HttpParams getParams() -> getParams
    151:151:cz.msebera.android.httpclient.HeaderIterator headerIterator() -> headerIterator
    157:157:cz.msebera.android.httpclient.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    131:131:void removeHeader(cz.msebera.android.httpclient.Header) -> removeHeader
    140:143:void removeHeaders(java.lang.String) -> removeHeaders
    118:119:void setHeader(java.lang.String,java.lang.String) -> setHeader
    125:125:void setHeaders(cz.msebera.android.httpclient.Header[]) -> setHeaders
    178:178:void setParams(cz.msebera.android.httpclient.params.HttpParams) -> setParams
cz.msebera.android.httpclient.message.BasicHeader -> cz.msebera.android.httpclient.message.BasicHeader:
    58:60:void <init>(java.lang.String,java.lang.String) -> <init>
    91:91:java.lang.Object clone() -> clone
    81:85:cz.msebera.android.httpclient.HeaderElement[] getElements() -> getElements
    65:65:java.lang.String getName() -> getName
    70:70:java.lang.String getValue() -> getValue
    76:76:java.lang.String toString() -> toString
cz.msebera.android.httpclient.message.BasicHeaderElement -> cz.msebera.android.httpclient.message.BasicHeaderElement:
    60:66:void <init>(java.lang.String,java.lang.String,cz.msebera.android.httpclient.NameValuePair[]) -> <init>
    77:77:void <init>(java.lang.String,java.lang.String) -> <init>
    164:164:java.lang.Object clone() -> clone
    124:128:boolean equals(java.lang.Object) -> equals
    82:82:java.lang.String getName() -> getName
    103:103:cz.msebera.android.httpclient.NameValuePair getParameter(int) -> getParameter
    108:111:cz.msebera.android.httpclient.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    97:97:int getParameterCount() -> getParameterCount
    92:92:cz.msebera.android.httpclient.NameValuePair[] getParameters() -> getParameters
    87:87:java.lang.String getValue() -> getValue
    137:140:int hashCode() -> hashCode
    147:157:java.lang.String toString() -> toString
cz.msebera.android.httpclient.message.BasicHeaderElementIterator -> cz.msebera.android.httpclient.message.BasicHeaderElementIterator:
    61:63:void <init>(cz.msebera.android.httpclient.HeaderIterator,cz.msebera.android.httpclient.message.HeaderValueParser) -> <init>
    68:68:void <init>(cz.msebera.android.httpclient.HeaderIterator) -> <init>
    73:87:void bufferHeaderValue() -> bufferHeaderValue
    124:127:boolean hasNext() -> hasNext
    147:147:java.lang.Object next() -> next
    132:137:cz.msebera.android.httpclient.HeaderElement nextElement() -> nextElement
    96:116:void parseNextElement() -> parseNextElement
    152:152:void remove() -> remove
cz.msebera.android.httpclient.message.BasicHeaderIterator -> cz.msebera.android.httpclient.message.BasicHeaderIterator:
    77:80:void <init>(cz.msebera.android.httpclient.Header[],java.lang.String) -> <init>
    118:119:boolean filterHeader(int) -> filterHeader
    99:103:int findNext(int) -> findNext
    126:126:boolean hasNext() -> hasNext
    163:163:java.lang.Object next() -> next
    141:143:cz.msebera.android.httpclient.Header nextHeader() -> nextHeader
    176:176:void remove() -> remove
cz.msebera.android.httpclient.message.BasicHeaderValueFormatter -> cz.msebera.android.httpclient.message.BasicHeaderValueFormatter:
    56:58:void <clinit>() -> <clinit>
    74:74:void <init>() -> <init>
    379:395:void doFormatValue(cz.msebera.android.httpclient.util.CharArrayBuffer,java.lang.String,boolean) -> doFormatValue
    209:220:int estimateHeaderElementLen(cz.msebera.android.httpclient.HeaderElement) -> estimateHeaderElementLen
    353:357:int estimateNameValuePairLen(cz.msebera.android.httpclient.NameValuePair) -> estimateNameValuePairLen
    283:289:int estimateParametersLen(cz.msebera.android.httpclient.NameValuePair[]) -> estimateParametersLen
    169:189:cz.msebera.android.httpclient.util.CharArrayBuffer formatHeaderElement(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.HeaderElement,boolean) -> formatHeaderElement
    321:334:cz.msebera.android.httpclient.util.CharArrayBuffer formatNameValuePair(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.NameValuePair,boolean) -> formatNameValuePair
    255:268:cz.msebera.android.httpclient.util.CharArrayBuffer formatParameters(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.NameValuePair[],boolean) -> formatParameters
    409:409:boolean isSeparator(char) -> isSeparator
    422:422:boolean isUnsafe(char) -> isUnsafe
cz.msebera.android.httpclient.message.BasicHeaderValueParser -> cz.msebera.android.httpclient.message.BasicHeaderValueParser:
    61:71:void <clinit>() -> <clinit>
    75:76:void <init>() -> <init>
    167:167:cz.msebera.android.httpclient.HeaderElement createHeaderElement(java.lang.String,java.lang.String,cz.msebera.android.httpclient.NameValuePair[]) -> createHeaderElement
    300:300:cz.msebera.android.httpclient.NameValuePair createNameValuePair(java.lang.String,java.lang.String) -> createNameValuePair
    91:97:cz.msebera.android.httpclient.HeaderElement[] parseElements(java.lang.String,cz.msebera.android.httpclient.message.HeaderValueParser) -> parseElements
    105:114:cz.msebera.android.httpclient.HeaderElement[] parseElements(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseElements
    143:153:cz.msebera.android.httpclient.HeaderElement parseHeaderElement(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseHeaderElement
    237:253:cz.msebera.android.httpclient.NameValuePair parseNameValuePair(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseNameValuePair
    197:209:cz.msebera.android.httpclient.NameValuePair[] parseParameters(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseParameters
cz.msebera.android.httpclient.message.BasicHttpRequest -> cz.msebera.android.httpclient.message.BasicHttpRequest:
    73:73:void <init>(java.lang.String,java.lang.String,cz.msebera.android.httpclient.ProtocolVersion) -> <init>
    82:85:void <init>(cz.msebera.android.httpclient.RequestLine) -> <init>
    95:95:cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    105:108:cz.msebera.android.httpclient.RequestLine getRequestLine() -> getRequestLine
    113:113:java.lang.String toString() -> toString
cz.msebera.android.httpclient.message.BasicHttpResponse -> cz.msebera.android.httpclient.message.BasicHttpResponse:
    73:79:void <init>(cz.msebera.android.httpclient.StatusLine,cz.msebera.android.httpclient.ReasonPhraseCatalog,java.util.Locale) -> <init>
    144:144:cz.msebera.android.httpclient.HttpEntity getEntity() -> getEntity
    126:126:cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    220:220:java.lang.String getReason(int) -> getReason
    132:138:cz.msebera.android.httpclient.StatusLine getStatusLine() -> getStatusLine
    201:201:void setEntity(cz.msebera.android.httpclient.HttpEntity) -> setEntity
    226:234:java.lang.String toString() -> toString
cz.msebera.android.httpclient.message.BasicLineFormatter -> cz.msebera.android.httpclient.message.BasicLineFormatter:
    63:65:void <clinit>() -> <clinit>
    68:68:void <init>() -> <init>
    112:126:cz.msebera.android.httpclient.util.CharArrayBuffer appendProtocolVersion(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.ProtocolVersion) -> appendProtocolVersion
    306:318:void doFormatHeader(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.Header) -> doFormatHeader
    185:197:void doFormatRequestLine(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.RequestLine) -> doFormatRequestLine
    242:255:void doFormatStatusLine(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.StatusLine) -> doFormatStatusLine
    142:142:int estimateProtocolVersionLen(cz.msebera.android.httpclient.ProtocolVersion) -> estimateProtocolVersionLen
    281:289:cz.msebera.android.httpclient.util.CharArrayBuffer formatHeader(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.Header) -> formatHeader
    167:169:cz.msebera.android.httpclient.util.CharArrayBuffer formatRequestLine(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.RequestLine) -> formatRequestLine
    223:225:cz.msebera.android.httpclient.util.CharArrayBuffer formatStatusLine(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.StatusLine) -> formatStatusLine
    82:84:cz.msebera.android.httpclient.util.CharArrayBuffer initBuffer(cz.msebera.android.httpclient.util.CharArrayBuffer) -> initBuffer
cz.msebera.android.httpclient.message.BasicLineParser -> cz.msebera.android.httpclient.message.BasicLineParser:
    71:73:void <clinit>() -> <clinit>
    89:90:void <init>(cz.msebera.android.httpclient.ProtocolVersion) -> <init>
    98:98:void <init>() -> <init>
    200:200:cz.msebera.android.httpclient.ProtocolVersion createProtocolVersion(int,int) -> createProtocolVersion
    421:421:cz.msebera.android.httpclient.StatusLine createStatusLine(cz.msebera.android.httpclient.ProtocolVersion,int,java.lang.String) -> createStatusLine
    209:245:boolean hasProtocolVersion(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> hasProtocolVersion
    444:444:cz.msebera.android.httpclient.Header parseHeader(cz.msebera.android.httpclient.util.CharArrayBuffer) -> parseHeader
    119:135:cz.msebera.android.httpclient.ProtocolVersion parseProtocolVersion(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseProtocolVersion
    358:403:cz.msebera.android.httpclient.StatusLine parseStatusLine(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseStatusLine
    452:458:void skipWhitespace(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> skipWhitespace
cz.msebera.android.httpclient.message.BasicListHeaderIterator -> cz.msebera.android.httpclient.message.BasicListHeaderIterator:
    85:89:void <init>(java.util.List,java.lang.String) -> <init>
    127:134:boolean filterHeader(int) -> filterHeader
    108:112:int findNext(int) -> findNext
    141:141:boolean hasNext() -> hasNext
    179:179:java.lang.Object next() -> next
    156:158:cz.msebera.android.httpclient.Header nextHeader() -> nextHeader
    189:192:void remove() -> remove
cz.msebera.android.httpclient.message.BasicNameValuePair -> cz.msebera.android.httpclient.message.BasicNameValuePair:
    57:59:void <init>(java.lang.String,java.lang.String) -> <init>
    110:110:java.lang.Object clone() -> clone
    92:95:boolean equals(java.lang.Object) -> equals
    64:64:java.lang.String getName() -> getName
    69:69:java.lang.String getValue() -> getValue
    103:104:int hashCode() -> hashCode
    76:84:java.lang.String toString() -> toString
cz.msebera.android.httpclient.message.BasicRequestLine -> cz.msebera.android.httpclient.message.BasicRequestLine:
    54:57:void <init>(java.lang.String,java.lang.String,cz.msebera.android.httpclient.ProtocolVersion) -> <init>
    83:83:java.lang.Object clone() -> clone
    62:62:java.lang.String getMethod() -> getMethod
    67:67:cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    72:72:java.lang.String getUri() -> getUri
    78:78:java.lang.String toString() -> toString
cz.msebera.android.httpclient.message.BasicStatusLine -> cz.msebera.android.httpclient.message.BasicStatusLine:
    69:72:void <init>(cz.msebera.android.httpclient.ProtocolVersion,int,java.lang.String) -> <init>
    100:100:java.lang.Object clone() -> clone
    84:84:cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    89:89:java.lang.String getReasonPhrase() -> getReasonPhrase
    79:79:int getStatusCode() -> getStatusCode
    95:95:java.lang.String toString() -> toString
cz.msebera.android.httpclient.message.BasicTokenIterator -> cz.msebera.android.httpclient.message.BasicTokenIterator:
    84:86:void <init>(cz.msebera.android.httpclient.HeaderIterator) -> <init>
    215:215:java.lang.String createToken(java.lang.String,int,int) -> createToken
    171:188:int findNext(int) -> findNext
    318:321:int findTokenEnd(int) -> findTokenEnd
    282:296:int findTokenSeparator(int) -> findTokenSeparator
    230:255:int findTokenStart(int) -> findTokenStart
    93:93:boolean hasNext() -> hasNext
    414:414:boolean isHttpSeparator(char) -> isHttpSeparator
    379:389:boolean isTokenChar(char) -> isTokenChar
    360:360:boolean isWhitespace(char) -> isWhitespace
    133:133:java.lang.Object next() -> next
    109:110:java.lang.String nextToken() -> nextToken
    146:146:void remove() -> remove
cz.msebera.android.httpclient.message.BufferedHeader -> cz.msebera.android.httpclient.message.BufferedHeader:
    78:83:void <init>(cz.msebera.android.httpclient.util.CharArrayBuffer) -> <init>
    132:132:java.lang.Object clone() -> clone
    120:120:cz.msebera.android.httpclient.util.CharArrayBuffer getBuffer() -> getBuffer
    108:110:cz.msebera.android.httpclient.HeaderElement[] getElements() -> getElements
    98:98:java.lang.String getName() -> getName
    103:103:java.lang.String getValue() -> getValue
    115:115:int getValuePos() -> getValuePos
    125:125:java.lang.String toString() -> toString
cz.msebera.android.httpclient.message.HeaderGroup -> cz.msebera.android.httpclient.message.HeaderGroup:
    62:63:void <init>() -> <init>
    83:83:void addHeader(cz.msebera.android.httpclient.Header) -> addHeader
    70:70:void clear() -> clear
    307:307:java.lang.Object clone() -> clone
    257:259:boolean containsHeader(java.lang.String) -> containsHeader
    241:241:cz.msebera.android.httpclient.Header[] getAllHeaders() -> getAllHeaders
    206:208:cz.msebera.android.httpclient.Header getFirstHeader(java.lang.String) -> getFirstHeader
    182:191:cz.msebera.android.httpclient.Header[] getHeaders(java.lang.String) -> getHeaders
    275:275:cz.msebera.android.httpclient.HeaderIterator iterator() -> iterator
    289:289:cz.msebera.android.httpclient.HeaderIterator iterator(java.lang.String) -> iterator
    95:95:void removeHeader(cz.msebera.android.httpclient.Header) -> removeHeader
    130:134:void setHeaders(cz.msebera.android.httpclient.Header[]) -> setHeaders
    312:312:java.lang.String toString() -> toString
    112:119:void updateHeader(cz.msebera.android.httpclient.Header) -> updateHeader
cz.msebera.android.httpclient.message.ParserCursor -> cz.msebera.android.httpclient.message.ParserCursor:
    49:51:void <init>(int,int) -> <init>
    84:84:boolean atEnd() -> atEnd
    70:70:int getPos() -> getPos
    66:66:int getUpperBound() -> getUpperBound
    89:97:java.lang.String toString() -> toString
    74:75:void updatePos(int) -> updatePos
cz.msebera.android.httpclient.message.TokenParser -> cz.msebera.android.httpclient.message.TokenParser:
    76:76:void <clinit>() -> <clinit>
    44:44:void <init>() -> <init>
    47:49:java.util.BitSet INIT_BITSET(int[]) -> INIT_BITSET
    179:191:void copyContent(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor,java.util.BitSet,java.lang.StringBuilder) -> copyContent
    231:264:void copyQuotedContent(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor,java.lang.StringBuilder) -> copyQuotedContent
    206:219:void copyUnquotedContent(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor,java.util.BitSet,java.lang.StringBuilder) -> copyUnquotedContent
    88:105:java.lang.String parseToken(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor,java.util.BitSet) -> parseToken
    119:142:java.lang.String parseValue(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor,java.util.BitSet) -> parseValue
    153:164:void skipWhiteSpace(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> skipWhiteSpace
cz.msebera.android.httpclient.params.AbstractHttpParams -> cz.msebera.android.httpclient.params.AbstractHttpParams:
    49:49:void <init>() -> <init>
    99:103:boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    69:73:int getIntParameter(java.lang.String,int) -> getIntParameter
    54:58:long getLongParameter(java.lang.String,long) -> getLongParameter
    119:119:boolean isParameterFalse(java.lang.String) -> isParameterFalse
    114:114:boolean isParameterTrue(java.lang.String) -> isParameterTrue
    108:108:cz.msebera.android.httpclient.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    78:78:cz.msebera.android.httpclient.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    63:63:cz.msebera.android.httpclient.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
cz.msebera.android.httpclient.params.BasicHttpParams -> cz.msebera.android.httpclient.params.BasicHttpParams:
    59:56:void <init>() -> <init>
    163:164:java.lang.Object clone() -> clone
    176:177:void copyParams(cz.msebera.android.httpclient.params.HttpParams) -> copyParams
    64:64:java.lang.Object getParameter(java.lang.String) -> getParameter
    73:75:cz.msebera.android.httpclient.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
cz.msebera.android.httpclient.params.HttpConnectionParams -> cz.msebera.android.httpclient.params.HttpConnectionParams:
    176:177:int getConnectionTimeout(cz.msebera.android.httpclient.params.HttpParams) -> getConnectionTimeout
    153:154:int getLinger(cz.msebera.android.httpclient.params.HttpParams) -> getLinger
    81:82:boolean getSoReuseaddr(cz.msebera.android.httpclient.params.HttpParams) -> getSoReuseaddr
    55:56:int getSoTimeout(cz.msebera.android.httpclient.params.HttpParams) -> getSoTimeout
    106:107:boolean getTcpNoDelay(cz.msebera.android.httpclient.params.HttpParams) -> getTcpNoDelay
    200:201:boolean isStaleCheckingEnabled(cz.msebera.android.httpclient.params.HttpParams) -> isStaleCheckingEnabled
    188:189:void setConnectionTimeout(cz.msebera.android.httpclient.params.HttpParams,int) -> setConnectionTimeout
    66:67:void setSoTimeout(cz.msebera.android.httpclient.params.HttpParams,int) -> setSoTimeout
    141:142:void setSocketBufferSize(cz.msebera.android.httpclient.params.HttpParams,int) -> setSocketBufferSize
    117:118:void setTcpNoDelay(cz.msebera.android.httpclient.params.HttpParams,boolean) -> setTcpNoDelay
cz.msebera.android.httpclient.params.HttpParamConfig -> cz.msebera.android.httpclient.params.HttpParamConfig:
    59:62:cz.msebera.android.httpclient.config.MessageConstraints getMessageConstraints(cz.msebera.android.httpclient.params.HttpParams) -> getMessageConstraints
cz.msebera.android.httpclient.params.HttpProtocolParams -> cz.msebera.android.httpclient.params.HttpProtocolParams:
    60:64:java.lang.String getHttpElementCharset(cz.msebera.android.httpclient.params.HttpParams) -> getHttpElementCharset
    116:122:cz.msebera.android.httpclient.ProtocolVersion getVersion(cz.msebera.android.httpclient.params.HttpParams) -> getVersion
    104:105:void setContentCharset(cz.msebera.android.httpclient.params.HttpParams,java.lang.String) -> setContentCharset
    155:156:void setUserAgent(cz.msebera.android.httpclient.params.HttpParams,java.lang.String) -> setUserAgent
    132:133:void setVersion(cz.msebera.android.httpclient.params.HttpParams,cz.msebera.android.httpclient.ProtocolVersion) -> setVersion
cz.msebera.android.httpclient.params.SyncBasicHttpParams -> cz.msebera.android.httpclient.params.SyncBasicHttpParams:
    46:46:void <init>() -> <init>
    86:86:java.lang.Object clone() -> clone
    61:61:java.lang.Object getParameter(java.lang.String) -> getParameter
    56:56:cz.msebera.android.httpclient.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
cz.msebera.android.httpclient.pool.PoolEntry -> cz.msebera.android.httpclient.pool.PoolEntry:
    80:93:void <init>(java.lang.String,java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit) -> <init>
    116:116:java.lang.Object getConnection() -> getConnection
    151:151:long getExpiry() -> getExpiry
    112:112:java.lang.Object getRoute() -> getRoute
    167:167:boolean isExpired(long) -> isExpired
    143:143:void setState(java.lang.Object) -> setState
    183:191:java.lang.String toString() -> toString
    155:163:void updateExpiry(long,java.util.concurrent.TimeUnit) -> updateExpiry
cz.msebera.android.httpclient.protocol.BasicHttpContext -> cz.msebera.android.httpclient.protocol.BasicHttpContext:
    51:51:void <init>() -> <init>
    55:57:void <init>(cz.msebera.android.httpclient.protocol.HttpContext) -> <init>
    62:65:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    72:76:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    95:95:java.lang.String toString() -> toString
cz.msebera.android.httpclient.protocol.BasicHttpProcessor -> cz.msebera.android.httpclient.protocol.BasicHttpProcessor:
    55:60:void <init>() -> <init>
    106:106:void addInterceptor(cz.msebera.android.httpclient.HttpRequestInterceptor) -> addInterceptor
    110:110:void addInterceptor(cz.msebera.android.httpclient.HttpRequestInterceptor,int) -> addInterceptor
    136:136:void addInterceptor(cz.msebera.android.httpclient.HttpResponseInterceptor) -> addInterceptor
    66:66:void addRequestInterceptor(cz.msebera.android.httpclient.HttpRequestInterceptor) -> addRequestInterceptor
    74:74:void addRequestInterceptor(cz.msebera.android.httpclient.HttpRequestInterceptor,int) -> addRequestInterceptor
    132:132:void addResponseInterceptor(cz.msebera.android.httpclient.HttpResponseInterceptor) -> addResponseInterceptor
    241:242:java.lang.Object clone() -> clone
    222:225:void copyInterceptors(cz.msebera.android.httpclient.protocol.BasicHttpProcessor) -> copyInterceptors
    118:121:cz.msebera.android.httpclient.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    114:114:int getRequestInterceptorCount() -> getRequestInterceptorCount
    148:151:cz.msebera.android.httpclient.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    144:144:int getResponseInterceptorCount() -> getResponseInterceptorCount
    201:202:void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
    210:211:void process(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.DefaultedHttpContext -> cz.msebera.android.httpclient.protocol.DefaultedHttpContext:
    49:51:void <init>(cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.protocol.HttpContext) -> <init>
    55:57:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    68:68:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    77:81:java.lang.String toString() -> toString
cz.msebera.android.httpclient.protocol.HTTP -> cz.msebera.android.httpclient.protocol.HTTP:
    69:70:void <clinit>() -> <clinit>
cz.msebera.android.httpclient.protocol.HttpCoreContext -> cz.msebera.android.httpclient.protocol.HttpCoreContext:
    93:94:void <init>(cz.msebera.android.httpclient.protocol.HttpContext) -> <init>
    98:99:void <init>() -> <init>
    82:86:cz.msebera.android.httpclient.protocol.HttpCoreContext adapt(cz.msebera.android.httpclient.protocol.HttpContext) -> adapt
    104:104:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    118:123:java.lang.Object getAttribute(java.lang.String,java.lang.Class) -> getAttribute
    131:131:cz.msebera.android.httpclient.HttpConnection getConnection() -> getConnection
    135:135:cz.msebera.android.httpclient.HttpRequest getRequest() -> getRequest
    152:152:cz.msebera.android.httpclient.HttpHost getTargetHost() -> getTargetHost
    139:140:boolean isRequestSent() -> isRequestSent
    109:109:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
cz.msebera.android.httpclient.protocol.HttpRequestExecutor -> cz.msebera.android.httpclient.protocol.HttpRequestExecutor:
    70:71:void <init>(int) -> <init>
    75:75:void <init>() -> <init>
    92:95:boolean canResponseHaveBody(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse) -> canResponseHaveBody
    141:141:void closeConnection(cz.msebera.android.httpclient.HttpClientConnection) -> closeConnection
    264:276:cz.msebera.android.httpclient.HttpResponse doReceiveResponse(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.protocol.HttpContext) -> doReceiveResponse
    195:241:cz.msebera.android.httpclient.HttpResponse doSendRequest(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.protocol.HttpContext) -> doSendRequest
    118:129:cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    305:309:void postProcess(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpProcessor,cz.msebera.android.httpclient.protocol.HttpContext) -> postProcess
    162:166:void preProcess(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpProcessor,cz.msebera.android.httpclient.protocol.HttpContext) -> preProcess
cz.msebera.android.httpclient.protocol.ImmutableHttpProcessor -> cz.msebera.android.httpclient.protocol.ImmutableHttpProcessor:
    53:66:void <init>(cz.msebera.android.httpclient.HttpRequestInterceptor[],cz.msebera.android.httpclient.HttpResponseInterceptor[]) -> <init>
    131:132:void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
    140:141:void process(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.RequestContent -> cz.msebera.android.httpclient.protocol.RequestContent:
    64:64:void <init>() -> <init>
    79:80:void <init>(boolean) -> <init>
    86:93:void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.RequestExpectContinue -> cz.msebera.android.httpclient.protocol.RequestExpectContinue:
    61:61:void <init>() -> <init>
    68:69:void <init>(boolean) -> <init>
    75:87:void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.RequestTargetHost -> cz.msebera.android.httpclient.protocol.RequestTargetHost:
    55:55:void <init>() -> <init>
    61:92:void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.RequestUserAgent -> cz.msebera.android.httpclient.protocol.RequestUserAgent:
    53:54:void <init>(java.lang.String) -> <init>
    58:58:void <init>() -> <init>
    64:75:void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.SyncBasicHttpContext -> cz.msebera.android.httpclient.protocol.SyncBasicHttpContext:
    41:41:void <init>(cz.msebera.android.httpclient.protocol.HttpContext) -> <init>
    53:53:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    58:58:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
cz.msebera.android.httpclient.util.Args -> cz.msebera.android.httpclient.util.Args:
    36:36:void check(boolean,java.lang.String) -> check
    42:42:void check(boolean,java.lang.String,java.lang.Object[]) -> check
    83:81:java.lang.CharSequence containsNoBlanks(java.lang.CharSequence,java.lang.String) -> containsNoBlanks
    73:71:java.lang.CharSequence notBlank(java.lang.CharSequence,java.lang.String) -> notBlank
    63:61:java.lang.CharSequence notEmpty(java.lang.CharSequence,java.lang.String) -> notEmpty
    93:91:java.util.Collection notEmpty(java.util.Collection,java.lang.String) -> notEmpty
    115:115:int notNegative(int,java.lang.String) -> notNegative
    122:122:long notNegative(long,java.lang.String) -> notNegative
    54:54:java.lang.Object notNull(java.lang.Object,java.lang.String) -> notNull
    101:101:int positive(int,java.lang.String) -> positive
cz.msebera.android.httpclient.util.Asserts -> cz.msebera.android.httpclient.util.Asserts:
    34:34:void check(boolean,java.lang.String) -> check
    52:52:void notNull(java.lang.Object,java.lang.String) -> notNull
cz.msebera.android.httpclient.util.ByteArrayBuffer -> cz.msebera.android.httpclient.util.ByteArrayBuffer:
    54:56:void <init>(int) -> <init>
    81:83:void append(byte[],int,int) -> append
    103:108:void append(int) -> append
    129:131:void append(char[],int,int) -> append
    166:166:void append(cz.msebera.android.httpclient.util.CharArrayBuffer,int,int) -> append
    249:249:byte[] buffer() -> buffer
    200:200:int byteAt(int) -> byteAt
    211:211:int capacity() -> capacity
    173:173:void clear() -> clear
    60:62:void expand(int) -> expand
    276:276:boolean isEmpty() -> isEmpty
    286:286:boolean isFull() -> isFull
    220:220:int length() -> length
    182:184:byte[] toByteArray() -> toByteArray
cz.msebera.android.httpclient.util.CharArrayBuffer -> cz.msebera.android.httpclient.util.CharArrayBuffer:
    56:58:void <init>(int) -> <init>
    83:85:void append(char[],int,int) -> append
    106:112:void append(java.lang.String) -> append
    132:132:void append(cz.msebera.android.httpclient.util.CharArrayBuffer,int,int) -> append
    156:161:void append(char) -> append
    182:184:void append(byte[],int,int) -> append
    218:218:void append(cz.msebera.android.httpclient.util.ByteArrayBuffer,int,int) -> append
    272:272:char[] buffer() -> buffer
    263:263:char charAt(int) -> charAt
    236:236:void clear() -> clear
    307:309:void ensureCapacity(int) -> ensureCapacity
    62:64:void expand(int) -> expand
    377:384:int indexOf(int,int,int) -> indexOf
    402:402:int indexOf(int) -> indexOf
    337:337:boolean isEmpty() -> isEmpty
    292:292:int length() -> length
    478:476:java.lang.CharSequence subSequence(int,int) -> subSequence
    423:421:java.lang.String substring(int,int) -> substring
    452:450:java.lang.String substringTrimmed(int,int) -> substringTrimmed
    489:489:java.lang.String toString() -> toString
cz.msebera.android.httpclient.util.CharsetUtils -> cz.msebera.android.httpclient.util.CharsetUtils:
    41:41:java.nio.charset.Charset lookup(java.lang.String) -> lookup
cz.msebera.android.httpclient.util.EncodingUtils -> cz.msebera.android.httpclient.util.EncodingUtils:
    106:107:byte[] getAsciiBytes(java.lang.String) -> getAsciiBytes
    90:95:byte[] getBytes(java.lang.String,java.lang.String) -> getBytes
cz.msebera.android.httpclient.util.EntityUtils -> cz.msebera.android.httpclient.util.EntityUtils:
    85:88:void consume(cz.msebera.android.httpclient.HttpEntity) -> consume
    121:141:byte[] toByteArray(cz.msebera.android.httpclient.HttpEntity) -> toByteArray
cz.msebera.android.httpclient.util.LangUtils -> cz.msebera.android.httpclient.util.LangUtils:
    66:66:boolean equals(java.lang.Object,java.lang.Object) -> equals
    87:89:boolean equals(java.lang.Object[],java.lang.Object[]) -> equals
    51:51:int hashCode(int,boolean) -> hashCode
    55:55:int hashCode(int,java.lang.Object) -> hashCode
cz.msebera.android.httpclient.util.TextUtils -> cz.msebera.android.httpclient.util.TextUtils:
    67:68:boolean containsBlanks(java.lang.CharSequence) -> containsBlanks
    52:53:boolean isBlank(java.lang.CharSequence) -> isBlank
    42:42:boolean isEmpty(java.lang.CharSequence) -> isEmpty
cz.msebera.android.httpclient.util.VersionInfo -> cz.msebera.android.httpclient.util.VersionInfo:
    90:96:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    269:300:cz.msebera.android.httpclient.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader) -> fromMap
    127:127:java.lang.String getRelease() -> getRelease
    319:323:java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class) -> getUserAgent
    226:250:cz.msebera.android.httpclient.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader) -> loadVersionInfo
    160:183:java.lang.String toString() -> toString
org.cocos2dx.lib.BuildConfig -> org.cocos2dx.lib.BuildConfig:
    6:6:void <init>() -> <init>
org.cocos2dx.lib.Cocos2dxAccelerometer -> org.cocos2dx.lib.Cocos2dxAccelerometer:
    61:69:void <init>(android.content.Context) -> <init>
    95:95:void disable() -> disable
    81:81:void enableAccel() -> enableAccel
    77:77:void enableCompass() -> enableCompass
    103:150:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    86:90:void setInterval(float) -> setInterval
org.cocos2dx.lib.Cocos2dxActivity -> org.cocos2dx.lib.Cocos2dxActivity:
    54:256:void <init>() -> <init>
    54:54:org.cocos2dx.lib.Cocos2dxGLSurfaceView access$000(org.cocos2dx.lib.Cocos2dxActivity) -> access$000
    82:82:android.content.Context getContext() -> getContext
    78:78:org.cocos2dx.lib.Cocos2dxGLSurfaceView getGLSurfaceView() -> getGLSurfaceView
    314:343:void hideVirtualButton() -> hideVirtualButton
    263:297:void init() -> init
    349:357:boolean isAndroidEmulator() -> isAndroidEmulator
    368:375:boolean isDeviceAsleep() -> isDeviceAsleep
    362:363:boolean isDeviceLocked() -> isDeviceLocked
    248:252:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    128:168:void onCreate(android.os.Bundle) -> onCreate
    302:308:org.cocos2dx.lib.Cocos2dxGLSurfaceView onCreateView() -> onCreateView
    227:229:void onDestroy() -> onDestroy
    113:118:void onLoadNativeLibraries() -> onLoadNativeLibraries
    216:222:void onPause() -> onPause
    184:190:void onResume() -> onResume
    195:199:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    205:210:void resumeIfHasFocus() -> resumeIfHasFocus
    242:242:void runOnGLThread(java.lang.Runnable) -> runOnGLThread
    100:107:void setEnableAudioFocusGain(boolean) -> setEnableAudioFocusGain
    96:96:void setEnableVirtualButton(boolean) -> setEnableVirtualButton
    87:87:void setKeepScreenOn(boolean) -> setKeepScreenOn
    234:237:void showDialog(java.lang.String,java.lang.String) -> showDialog
org.cocos2dx.lib.Cocos2dxActivity$1 -> org.cocos2dx.lib.Cocos2dxActivity$1:
    87:87:void <init>(org.cocos2dx.lib.Cocos2dxActivity,boolean) -> <init>
    90:90:void run() -> run
org.cocos2dx.lib.Cocos2dxActivity$Cocos2dxEGLConfigChooser -> org.cocos2dx.lib.Cocos2dxActivity$Cocos2dxEGLConfigChooser:
    393:394:void <init>(org.cocos2dx.lib.Cocos2dxActivity,int[]) -> <init>
    400:454:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    459:463:javax.microedition.khronos.egl.EGLConfig doChooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,int[]) -> doChooseConfig
org.cocos2dx.lib.Cocos2dxAudioFocusManager -> org.cocos2dx.lib.Cocos2dxAudioFocusManager:
    41:41:void <clinit>() -> <clinit>
    32:32:void access$000(int) -> access$000
    95:109:boolean registerAudioFocusListener(android.content.Context) -> registerAudioFocusListener
    114:122:void unregisterAudioFocusListener(android.content.Context) -> unregisterAudioFocusListener
org.cocos2dx.lib.Cocos2dxAudioFocusManager$1 -> org.cocos2dx.lib.Cocos2dxAudioFocusManager$1:
    42:42:void <init>() -> <init>
    45:83:void onAudioFocusChange(int) -> onAudioFocusChange
org.cocos2dx.lib.Cocos2dxAudioFocusManager$1$1 -> org.cocos2dx.lib.Cocos2dxAudioFocusManager$1$1:
    51:51:void <init>(org.cocos2dx.lib.Cocos2dxAudioFocusManager$1) -> <init>
    54:55:void run() -> run
org.cocos2dx.lib.Cocos2dxAudioFocusManager$1$2 -> org.cocos2dx.lib.Cocos2dxAudioFocusManager$1$2:
    62:62:void <init>(org.cocos2dx.lib.Cocos2dxAudioFocusManager$1) -> <init>
    65:66:void run() -> run
org.cocos2dx.lib.Cocos2dxAudioFocusManager$1$3 -> org.cocos2dx.lib.Cocos2dxAudioFocusManager$1$3:
    72:72:void <init>(org.cocos2dx.lib.Cocos2dxAudioFocusManager$1) -> <init>
    75:76:void run() -> run
org.cocos2dx.lib.Cocos2dxAudioFocusManager$1$4 -> org.cocos2dx.lib.Cocos2dxAudioFocusManager$1$4:
    83:83:void <init>(org.cocos2dx.lib.Cocos2dxAudioFocusManager$1) -> <init>
    86:87:void run() -> run
org.cocos2dx.lib.Cocos2dxAudioFocusManager$2 -> org.cocos2dx.lib.Cocos2dxAudioFocusManager$2:
    122:122:void <init>() -> <init>
    125:126:void run() -> run
org.cocos2dx.lib.Cocos2dxBitmap -> org.cocos2dx.lib.Cocos2dxBitmap:
    45:45:void <init>() -> <init>
    123:113:android.graphics.Typeface calculateShrinkTypeFace(java.lang.String,int,int,android.text.Layout$Alignment,float,android.text.TextPaint,boolean) -> calculateShrinkTypeFace
    158:260:boolean createTextBitmapShadowStroke(byte[],java.lang.String,int,int,int,int,int,int,int,int,float,boolean,float,float,float,float,boolean,int,int,int,int,float,boolean,int) -> createTextBitmapShadowStroke
    313:327:int getFontSizeAccordingHeight(int) -> getFontSizeAccordingHeight
    301:305:byte[] getPixels(android.graphics.Bitmap) -> getPixels
    336:345:java.lang.String getStringWithEllipsis(java.lang.String,float,float) -> getStringWithEllipsis
    85:107:int getTextHeight(java.lang.String,int,float,android.graphics.Typeface) -> getTextHeight
    290:295:void initNativeObject(android.graphics.Bitmap) -> initNativeObject
    265:283:android.text.TextPaint newPaint(java.lang.String,int) -> newPaint
    69:69:void setContext(android.content.Context) -> setContext
org.cocos2dx.lib.Cocos2dxDataManager -> org.cocos2dx.lib.Cocos2dxDataManager:
    33:33:void <init>() -> <init>
    46:46:void onSceneLoaderBegin() -> onSceneLoaderBegin
    49:49:void onSceneLoaderEnd() -> onSceneLoaderEnd
    52:52:void onShaderLoaderBegin() -> onShaderLoaderBegin
    55:55:void onShaderLoaderEnd() -> onShaderLoaderEnd
    43:43:void setFrameSize(int,int) -> setFrameSize
    35:36:void setOptimise(java.lang.String,float) -> setOptimise
    40:40:void setProcessID(int) -> setProcessID
org.cocos2dx.lib.Cocos2dxDownloader -> org.cocos2dx.lib.Cocos2dxDownloader:
    259:259:void <clinit>() -> <clinit>
    251:258:void <init>() -> <init>
    251:251:int access$000(org.cocos2dx.lib.Cocos2dxDownloader) -> access$000
    251:251:com.loopj.android.http.AsyncHttpClient access$100(org.cocos2dx.lib.Cocos2dxDownloader) -> access$100
    251:251:java.util.HashMap access$200() -> access$200
    251:251:java.lang.String access$300(org.cocos2dx.lib.Cocos2dxDownloader) -> access$300
    251:251:java.util.HashMap access$400(org.cocos2dx.lib.Cocos2dxDownloader) -> access$400
    408:408:void cancelAllRequests(org.cocos2dx.lib.Cocos2dxDownloader) -> cancelAllRequests
    300:315:org.cocos2dx.lib.Cocos2dxDownloader createDownloader(int,int,java.lang.String,int) -> createDownloader
    324:404:void createTask(org.cocos2dx.lib.Cocos2dxDownloader,int,java.lang.String,java.lang.String) -> createTask
    428:435:void enqueueTask(java.lang.Runnable) -> enqueueTask
    284:287:void onFinish(int,int,java.lang.String,byte[]) -> onFinish
    262:268:void onProgress(int,long,long,long) -> onProgress
    277:279:void onStart(int) -> onStart
    439:446:void runNextTaskIfExists() -> runNextTaskIfExists
    296:296:void setResumingSupport(java.lang.String,java.lang.Boolean) -> setResumingSupport
org.cocos2dx.lib.Cocos2dxDownloader$1 -> org.cocos2dx.lib.Cocos2dxDownloader$1:
    268:268:void <init>(org.cocos2dx.lib.Cocos2dxDownloader,int,long,long,long) -> <init>
    271:271:void run() -> run
org.cocos2dx.lib.Cocos2dxDownloader$2 -> org.cocos2dx.lib.Cocos2dxDownloader$2:
    287:287:void <init>(org.cocos2dx.lib.Cocos2dxDownloader,int,int,java.lang.String,byte[]) -> <init>
    290:290:void run() -> run
org.cocos2dx.lib.Cocos2dxDownloader$3 -> org.cocos2dx.lib.Cocos2dxDownloader$3:
    324:324:void <init>(java.lang.String,org.cocos2dx.lib.Cocos2dxDownloader,int,java.lang.String) -> <init>
    327:400:void run() -> run
org.cocos2dx.lib.Cocos2dxDownloader$3$1 -> org.cocos2dx.lib.Cocos2dxDownloader$3$1:
    393:393:void <init>(org.cocos2dx.lib.Cocos2dxDownloader$3,java.lang.String) -> <init>
    396:396:void run() -> run
org.cocos2dx.lib.Cocos2dxDownloader$4 -> org.cocos2dx.lib.Cocos2dxDownloader$4:
    408:408:void <init>(org.cocos2dx.lib.Cocos2dxDownloader) -> <init>
    413:419:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBox -> org.cocos2dx.lib.Cocos2dxEditBox:
    149:145:void <init>(android.content.Context) -> <init>
    132:132:java.lang.Boolean getChangedTextProgrammatically() -> getChangedTextProgrammatically
    164:164:float getOpenGLViewScaleX() -> getOpenGLViewScaleX
    295:292:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    301:301:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    136:136:void setChangedTextProgrammatically(java.lang.Boolean) -> setChangedTextProgrammatically
    153:160:void setEditBoxViewRect(int,int,int,int) -> setEditBoxViewRect
    325:331:void setInputFlag(int) -> setInputFlag
    253:283:void setInputMode(int) -> setInputMode
    173:175:void setMaxLength(int) -> setMaxLength
    179:179:void setMultilineEnabled(boolean) -> setMultilineEnabled
    168:168:void setOpenGLViewScaleX(float) -> setOpenGLViewScaleX
    203:185:void setReturnType(int) -> setReturnType
    209:224:void setTextHorizontalAlignment(int) -> setTextHorizontalAlignment
    228:249:void setTextVerticalAlignment(int) -> setTextVerticalAlignment
org.cocos2dx.lib.Cocos2dxEditBoxHelper -> org.cocos2dx.lib.Cocos2dxEditBoxHelper:
    73:77:void <init>(org.cocos2dx.lib.ResizeLayout) -> <init>
    64:64:void __editBoxEditingChanged(int,java.lang.String) -> __editBoxEditingChanged
    59:59:void __editBoxEditingDidBegin(int) -> __editBoxEditingDidBegin
    69:69:void __editBoxEditingDidEnd(int,java.lang.String,int) -> __editBoxEditingDidEnd
    48:48:org.cocos2dx.lib.Cocos2dxActivity access$000() -> access$000
    48:48:org.cocos2dx.lib.ResizeLayout access$100() -> access$100
    48:48:java.lang.String access$200() -> access$200
    48:48:void access$300(int) -> access$300
    48:48:android.util.SparseArray access$400() -> access$400
    48:48:void access$500(int) -> access$500
    455:455:void closeKeyboard(int) -> closeKeyboard
    437:449:void closeKeyboardOnUiThread(int) -> closeKeyboardOnUiThread
    85:219:int createEditBox(int,int,int,int,float) -> createEditBox
    81:81:int getPadding(float) -> getPadding
    412:412:void openKeyboard(int) -> openKeyboard
    421:432:void openKeyboardOnUiThread(int) -> openKeyboardOnUiThread
    223:223:void removeEditBox(int) -> removeEditBox
    397:397:void setEditBoxViewRect(int,int,int,int,int) -> setEditBoxViewRect
    237:237:void setFont(int,java.lang.String,float) -> setFont
    272:272:void setFontColor(int,int,int,int,int) -> setFontColor
    384:384:void setInputFlag(int,int) -> setInputFlag
    372:372:void setInputMode(int,int) -> setInputMode
    308:308:void setMaxLength(int,int) -> setMaxLength
    284:284:void setPlaceHolderText(int,java.lang.String) -> setPlaceHolderText
    296:296:void setPlaceHolderTextColor(int,int,int,int,int) -> setPlaceHolderTextColor
    348:348:void setReturnType(int,int) -> setReturnType
    333:333:void setText(int,java.lang.String) -> setText
    360:360:void setTextHorizontalAlignment(int,int) -> setTextHorizontalAlignment
    320:320:void setVisible(int,boolean) -> setVisible
org.cocos2dx.lib.Cocos2dxEditBoxHelper$1 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$1:
    86:86:void <init>(float,int,int,int,int,int) -> <init>
    89:216:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$1 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$1:
    117:117:void <init>(org.cocos2dx.lib.Cocos2dxEditBoxHelper$1,org.cocos2dx.lib.Cocos2dxEditBox) -> <init>
    131:142:void afterTextChanged(android.text.Editable) -> afterTextChanged
org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$1$1 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$1$1:
    133:133:void <init>(org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$1,android.text.Editable) -> <init>
    136:136:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$2 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$2:
    148:148:void <init>(org.cocos2dx.lib.Cocos2dxEditBoxHelper$1,org.cocos2dx.lib.Cocos2dxEditBox) -> <init>
    152:180:void onFocusChange(android.view.View,boolean) -> onFocusChange
org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$2$1 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$2$1:
    155:155:void <init>(org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$2) -> <init>
    158:159:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$2$2 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$2$2:
    171:171:void <init>(org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$2,java.lang.String) -> <init>
    174:175:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$3 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$3:
    185:185:void <init>(org.cocos2dx.lib.Cocos2dxEditBoxHelper$1,org.cocos2dx.lib.Cocos2dxEditBox) -> <init>
    188:192:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$4 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$1$4:
    201:201:void <init>(org.cocos2dx.lib.Cocos2dxEditBoxHelper$1,org.cocos2dx.lib.Cocos2dxEditBox) -> <init>
    205:210:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.cocos2dx.lib.Cocos2dxEditBoxHelper$10 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$10:
    348:348:void <init>(int,int) -> <init>
    351:353:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$11 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$11:
    360:360:void <init>(int,int) -> <init>
    363:365:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$12 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$12:
    372:372:void <init>(int,int) -> <init>
    375:377:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$13 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$13:
    384:384:void <init>(int,int) -> <init>
    387:389:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$14 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$14:
    397:397:void <init>(int,int,int,int,int) -> <init>
    400:402:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$15 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$15:
    412:412:void <init>(int) -> <init>
    415:415:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$16 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$16:
    455:455:void <init>(int) -> <init>
    458:458:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$2 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$2:
    223:223:void <init>(int) -> <init>
    226:230:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$3 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$3:
    237:237:void <init>(int,java.lang.String,float) -> <init>
    240:265:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$4 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$4:
    272:272:void <init>(int,int,int,int,int) -> <init>
    275:277:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$5 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$5:
    284:284:void <init>(int,java.lang.String) -> <init>
    287:289:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$6 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$6:
    296:296:void <init>(int,int,int,int,int) -> <init>
    299:301:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$7 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$7:
    308:308:void <init>(int,int) -> <init>
    311:313:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$8 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$8:
    320:320:void <init>(int,boolean) -> <init>
    323:325:void run() -> run
org.cocos2dx.lib.Cocos2dxEditBoxHelper$9 -> org.cocos2dx.lib.Cocos2dxEditBoxHelper$9:
    333:333:void <init>(int,java.lang.String) -> <init>
    336:341:void run() -> run
org.cocos2dx.lib.Cocos2dxGLSurfaceView -> org.cocos2dx.lib.Cocos2dxGLSurfaceView:
    86:88:void <init>(android.content.Context) -> <init>
    92:94:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:39:org.cocos2dx.lib.Cocos2dxEditBox access$000(org.cocos2dx.lib.Cocos2dxGLSurfaceView) -> access$000
    39:39:org.cocos2dx.lib.Cocos2dxTextInputWrapper access$100() -> access$100
    39:39:org.cocos2dx.lib.Cocos2dxGLSurfaceView access$200() -> access$200
    39:39:org.cocos2dx.lib.Cocos2dxRenderer access$300(org.cocos2dx.lib.Cocos2dxGLSurfaceView) -> access$300
    429:431:void closeIMEKeyboard() -> closeIMEKeyboard
    444:444:void deleteBackward() -> deleteBackward
    453:473:void dumpMotionEvent(android.view.MotionEvent) -> dumpMotionEvent
    166:166:org.cocos2dx.lib.Cocos2dxEditBox getCocos2dxEditText() -> getCocos2dxEditText
    162:162:java.lang.String getContentText() -> getContentText
    144:144:org.cocos2dx.lib.Cocos2dxGLSurfaceView getInstance() -> getInstance
    98:104:void initView() -> initView
    435:435:void insertText(java.lang.String) -> insertText
    74:74:boolean isMultipleTouchEnabled() -> isMultipleTouchEnabled
    66:66:boolean isSoftKeyboardShown() -> isSoftKeyboardShown
    385:377:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    409:401:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    195:202:void onPause() -> onPause
    183:185:void onResume() -> onResume
    359:360:void onSizeChanged(int,int,int,int) -> onSizeChanged
    208:251:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    422:425:void openIMEKeyboard() -> openIMEKeyboard
    148:148:void queueAccelerometer(float,float,float,long) -> queueAccelerometer
    170:173:void setCocos2dxEditText(org.cocos2dx.lib.Cocos2dxEditBox) -> setCocos2dxEditText
    157:158:void setCocos2dxRenderer(org.cocos2dx.lib.Cocos2dxRenderer) -> setCocos2dxRenderer
    78:78:void setMultipleTouchEnabled(boolean) -> setMultipleTouchEnabled
    70:70:void setSoftKeyboardShown(boolean) -> setSoftKeyboardShown
org.cocos2dx.lib.Cocos2dxGLSurfaceView$1 -> org.cocos2dx.lib.Cocos2dxGLSurfaceView$1:
    104:104:void <init>(org.cocos2dx.lib.Cocos2dxGLSurfaceView) -> <init>
    107:118:void handleMessage(android.os.Message) -> handleMessage
org.cocos2dx.lib.Cocos2dxGLSurfaceView$10 -> org.cocos2dx.lib.Cocos2dxGLSurfaceView$10:
    309:309:void <init>(org.cocos2dx.lib.Cocos2dxGLSurfaceView,int,float,float) -> <init>
    312:312:void run() -> run
org.cocos2dx.lib.Cocos2dxGLSurfaceView$11 -> org.cocos2dx.lib.Cocos2dxGLSurfaceView$11:
    325:325:void <init>(org.cocos2dx.lib.Cocos2dxGLSurfaceView,int[],float[],float[]) -> <init>
    328:328:void run() -> run
org.cocos2dx.lib.Cocos2dxGLSurfaceView$12 -> org.cocos2dx.lib.Cocos2dxGLSurfaceView$12:
    335:335:void <init>(org.cocos2dx.lib.Cocos2dxGLSurfaceView,int[],float[],float[]) -> <init>
    338:338:void run() -> run
org.cocos2dx.lib.Cocos2dxGLSurfaceView$13 -> org.cocos2dx.lib.Cocos2dxGLSurfaceView$13:
    377:377:void <init>(org.cocos2dx.lib.Cocos2dxGLSurfaceView,int) -> <init>
    380:380:void run() -> run
org.cocos2dx.lib.Cocos2dxGLSurfaceView$14 -> org.cocos2dx.lib.Cocos2dxGLSurfaceView$14:
    401:401:void <init>(org.cocos2dx.lib.Cocos2dxGLSurfaceView,int) -> <init>
    404:404:void run() -> run
org.cocos2dx.lib.Cocos2dxGLSurfaceView$15 -> org.cocos2dx.lib.Cocos2dxGLSurfaceView$15:
    435:435:void <init>(org.cocos2dx.lib.Cocos2dxGLSurfaceView,java.lang.String) -> <init>
    438:438:void run() -> run
org.cocos2dx.lib.Cocos2dxGLSurfaceView$16 -> org.cocos2dx.lib.Cocos2dxGLSurfaceView$16:
    444:444:void <init>(org.cocos2dx.lib.Cocos2dxGLSurfaceView) -> <init>
    447:447:void run() -> run
org.cocos2dx.lib.Cocos2dxGLSurfaceView$2 -> org.cocos2dx.lib.Cocos2dxGLSurfaceView$2:
    148:148:void <init>(float,float,float,long) -> <init>
    151:151:void run() -> run
org.cocos2dx.lib.Cocos2dxGLSurfaceView$3 -> org.cocos2dx.lib.Cocos2dxGLSurfaceView$3:
    185:185:void <init>(org.cocos2dx.lib.Cocos2dxGLSurfaceView) -> <init>
    188:188:void run() -> run
org.cocos2dx.lib.Cocos2dxGLSurfaceView$4 -> org.cocos2dx.lib.Cocos2dxGLSurfaceView$4:
    195:195:void <init>(org.cocos2dx.lib.Cocos2dxGLSurfaceView) -> <init>
    198:198:void run() -> run
org.cocos2dx.lib.Cocos2dxGLSurfaceView$5 -> org.cocos2dx.lib.Cocos2dxGLSurfaceView$5:
    237:237:void <init>(org.cocos2dx.lib.Cocos2dxGLSurfaceView,int,float,float) -> <init>
    240:240:void run() -> run
org.cocos2dx.lib.Cocos2dxGLSurfaceView$6 -> org.cocos2dx.lib.Cocos2dxGLSurfaceView$6:
    251:251:void <init>(org.cocos2dx.lib.Cocos2dxGLSurfaceView,int,float,float) -> <init>
    254:254:void run() -> run
org.cocos2dx.lib.Cocos2dxGLSurfaceView$7 -> org.cocos2dx.lib.Cocos2dxGLSurfaceView$7:
    267:267:void <init>(org.cocos2dx.lib.Cocos2dxGLSurfaceView,int[],float[],float[]) -> <init>
    270:270:void run() -> run
org.cocos2dx.lib.Cocos2dxGLSurfaceView$8 -> org.cocos2dx.lib.Cocos2dxGLSurfaceView$8:
    277:277:void <init>(org.cocos2dx.lib.Cocos2dxGLSurfaceView,int[],float[],float[]) -> <init>
    280:280:void run() -> run
org.cocos2dx.lib.Cocos2dxGLSurfaceView$9 -> org.cocos2dx.lib.Cocos2dxGLSurfaceView$9:
    295:295:void <init>(org.cocos2dx.lib.Cocos2dxGLSurfaceView,int,float,float) -> <init>
    298:298:void run() -> run
org.cocos2dx.lib.Cocos2dxHandler -> org.cocos2dx.lib.Cocos2dxHandler:
    49:50:void <init>(org.cocos2dx.lib.Cocos2dxActivity) -> <init>
    66:68:void handleMessage(android.os.Message) -> handleMessage
    74:87:void showDialog(android.os.Message) -> showDialog
org.cocos2dx.lib.Cocos2dxHandler$1 -> org.cocos2dx.lib.Cocos2dxHandler$1:
    80:80:void <init>(org.cocos2dx.lib.Cocos2dxHandler) -> <init>
org.cocos2dx.lib.Cocos2dxHandler$DialogMessage -> org.cocos2dx.lib.Cocos2dxHandler$DialogMessage:
    99:101:void <init>(java.lang.String,java.lang.String) -> <init>
org.cocos2dx.lib.Cocos2dxHelper -> org.cocos2dx.lib.Cocos2dxHelper:
    99:231:void <clinit>() -> <clinit>
    77:77:void <init>() -> <init>
    77:77:com.enhance.gameservice.IGameTuningService access$002(com.enhance.gameservice.IGameTuningService) -> access$002
    77:77:android.content.ServiceConnection access$100() -> access$100
    77:77:android.app.Activity access$200() -> access$200
    77:77:void access$300(byte[]) -> access$300
    248:248:void addOnActivityResultListener(android.preference.PreferenceManager$OnActivityResultListener) -> addOnActivityResultListener
    683:686:byte[] conversionEncoding(byte[],java.lang.String,java.lang.String) -> conversionEncoding
    674:677:void deleteValueForKey(java.lang.String) -> deleteValueForKey
    311:312:void disableAccelerometer() -> disableAccelerometer
    297:298:void enableAccelerometer() -> enableAccelerometer
    302:303:void enableCompass() -> enableCompass
    457:458:void end() -> end
    729:734:int fastLoading(int) -> fastLoading
    859:859:float[] getAccelValue() -> getAccelValue
    871:874:org.cocos2dx.lib.Cocos2dxAccelerometer getAccelerometer() -> getAccelerometer
    244:244:android.app.Activity getActivity() -> getActivity
    293:293:android.content.res.AssetManager getAssetManager() -> getAssetManager
    186:208:java.lang.String getAssetsPath() -> getAssetsPath
    400:400:float getBackgroundMusicVolume() -> getBackgroundMusicVolume
    536:556:boolean getBoolForKey(java.lang.String,boolean) -> getBoolForKey
    278:278:java.lang.String getCocos2dxPackageName() -> getCocos2dxPackageName
    281:281:java.lang.String getCocos2dxWritablePath() -> getCocos2dxWritablePath
    863:863:float[] getCompassValue() -> getCompassValue
    285:285:java.lang.String getCurrentLanguage() -> getCurrentLanguage
    514:524:int getDPI() -> getDPI
    289:289:java.lang.String getDeviceModel() -> getDeviceModel
    622:622:double getDoubleForKey(java.lang.String,double) -> getDoubleForKey
    428:428:float getEffectsVolume() -> getEffectsVolume
    593:611:float getFloatForKey(java.lang.String,float) -> getFloatForKey
    565:583:int getIntegerForKey(java.lang.String,int) -> getIntegerForKey
    345:356:long[] getObbAssetFileDescriptor(java.lang.String) -> getObbAssetFileDescriptor
    212:227:com.android.vending.expansion.zipfile.ZipResourceFile getObbFile() -> getObbFile
    252:252:java.util.Set getOnActivityResultListeners() -> getOnActivityResultListeners
    867:867:int getSDKVersion() -> getSDKVersion
    801:813:int[] getSafeInsets() -> getSafeInsets
    878:881:org.cocos2dx.lib.Cocos2dxSound getSound() -> getSound
    626:633:java.lang.String getStringForKey(java.lang.String,java.lang.String) -> getStringForKey
    741:746:int getTemperature() -> getTemperature
    325:325:java.lang.String getVersion() -> getVersion
    832:851:boolean hasSoftKeys() -> hasSoftKeys
    122:177:void init(android.app.Activity) -> init
    256:256:boolean isActivityVisible() -> isActivityVisible
    396:396:boolean isBackgroundMusicPlaying() -> isBackgroundMusicPlaying
    786:788:boolean isCutoutEnabled() -> isCutoutEnabled
    770:771:boolean isScreenRound() -> isScreenRound
    479:480:void onEnterBackground() -> onEnterBackground
    484:485:void onEnterForeground() -> onEnterForeground
    472:474:void onPause() -> onPause
    462:467:void onResume() -> onResume
    335:337:boolean openURL(java.lang.String) -> openURL
    440:440:void pauseAllEffects() -> pauseAllEffects
    380:380:void pauseBackgroundMusic() -> pauseBackgroundMusic
    420:420:void pauseEffect(int) -> pauseEffect
    372:372:void playBackgroundMusic(java.lang.String,boolean) -> playBackgroundMusic
    412:412:int playEffect(java.lang.String,boolean,float,float,float) -> playEffect
    368:368:void preloadBackgroundMusic(java.lang.String) -> preloadBackgroundMusic
    408:408:void preloadEffect(java.lang.String) -> preloadEffect
    444:444:void resumeAllEffects() -> resumeAllEffects
    376:376:void resumeBackgroundMusic() -> resumeBackgroundMusic
    416:416:void resumeEffect(int) -> resumeEffect
    388:388:void rewindBackgroundMusic() -> rewindBackgroundMusic
    117:117:void runOnGLThread(java.lang.Runnable) -> runOnGLThread
    307:307:void setAccelerometerInterval(float) -> setAccelerometerInterval
    452:453:void setAudioFocus(boolean) -> setAudioFocus
    404:404:void setBackgroundMusicVolume(float) -> setBackgroundMusicVolume
    638:641:void setBoolForKey(java.lang.String,boolean) -> setBoolForKey
    660:663:void setDoubleForKey(java.lang.String,double) -> setDoubleForKey
    499:501:void setEditTextDialogResult(java.lang.String) -> setEditTextDialogResult
    432:432:void setEffectsVolume(float) -> setEffectsVolume
    717:722:int setFPS(int) -> setFPS
    652:655:void setFloatForKey(java.lang.String,float) -> setFloatForKey
    645:648:void setIntegerForKey(java.lang.String,int) -> setIntegerForKey
    316:316:void setKeepScreenOn(boolean) -> setKeepScreenOn
    753:758:int setLowPowerMode(boolean) -> setLowPowerMode
    705:710:int setResolutionPercent(int) -> setResolutionPercent
    667:670:void setStringForKey(java.lang.String,java.lang.String) -> setStringForKey
    493:493:void showDialog(java.lang.String,java.lang.String) -> showDialog
    448:448:void stopAllEffects() -> stopAllEffects
    384:384:void stopBackgroundMusic() -> stopBackgroundMusic
    424:424:void stopEffect(int) -> stopEffect
    489:489:void terminateProcess() -> terminateProcess
    436:436:void unloadEffect(java.lang.String) -> unloadEffect
    320:320:void vibrate(float) -> vibrate
    392:392:boolean willPlayBackgroundMusic() -> willPlayBackgroundMusic
org.cocos2dx.lib.Cocos2dxHelper$1 -> org.cocos2dx.lib.Cocos2dxHelper$1:
    191:191:void <init>() -> <init>
    193:193:boolean accept(java.io.File,java.lang.String) -> accept
org.cocos2dx.lib.Cocos2dxHelper$2 -> org.cocos2dx.lib.Cocos2dxHelper$2:
    231:231:void <init>() -> <init>
    233:234:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    238:238:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
org.cocos2dx.lib.Cocos2dxHelper$3 -> org.cocos2dx.lib.Cocos2dxHelper$3:
    501:501:void <init>(byte[]) -> <init>
    504:504:void run() -> run
org.cocos2dx.lib.Cocos2dxHttpURLConnection -> org.cocos2dx.lib.Cocos2dxHttpURLConnection:
    56:56:void <init>() -> <init>
    141:141:void addRequestHeader(java.net.HttpURLConnection,java.lang.String,java.lang.String) -> addRequestHeader
    336:388:java.lang.String combinCookies(java.util.List,java.lang.String) -> combinCookies
    148:151:int connect(java.net.HttpURLConnection) -> connect
    65:71:java.net.HttpURLConnection createHttpURLConnection(java.lang.String) -> createHttpURLConnection
    159:159:void disconnect(java.net.HttpURLConnection) -> disconnect
    297:299:int getResponseCode(java.net.HttpURLConnection) -> getResponseCode
    259:288:byte[] getResponseContent(java.net.HttpURLConnection) -> getResponseContent
    196:210:java.lang.String getResponseHeaderByIdx(java.net.HttpURLConnection,int) -> getResponseHeaderByIdx
    225:237:java.lang.String getResponseHeaderByKey(java.net.HttpURLConnection,java.lang.String) -> getResponseHeaderByKey
    247:252:int getResponseHeaderByKeyInt(java.net.HttpURLConnection,java.lang.String) -> getResponseHeaderByKeyInt
    176:188:java.lang.String getResponseHeaders(java.net.HttpURLConnection) -> getResponseHeaders
    307:310:java.lang.String getResponseMessage(java.net.HttpURLConnection) -> getResponseMessage
    320:332:java.lang.String listToString(java.util.List,java.lang.String) -> listToString
    164:171:void sendRequest(java.net.HttpURLConnection,byte[]) -> sendRequest
    79:80:void setReadAndConnectTimeout(java.net.HttpURLConnection,int,int) -> setReadAndConnectTimeout
    85:90:void setRequestMethod(java.net.HttpURLConnection,java.lang.String) -> setRequestMethod
    96:135:void setVerifySSL(java.net.HttpURLConnection,java.lang.String) -> setVerifySSL
    392:402:java.lang.String str2Seconds(java.lang.String) -> str2Seconds
org.cocos2dx.lib.Cocos2dxJavascriptJavaBridge -> org.cocos2dx.lib.Cocos2dxJavascriptJavaBridge:
    26:26:void <init>() -> <init>
org.cocos2dx.lib.Cocos2dxLocalStorage -> org.cocos2dx.lib.Cocos2dxLocalStorage:
    34:34:void <init>() -> <init>
    34:34:java.lang.String access$000() -> access$000
    34:34:java.lang.String access$100() -> access$100
    107:110:void clear() -> clear
    61:62:void destroy() -> destroy
    78:91:java.lang.String getItem(java.lang.String) -> getItem
    50:54:boolean init(java.lang.String,java.lang.String) -> init
    98:101:void removeItem(java.lang.String) -> removeItem
    68:71:void setItem(java.lang.String,java.lang.String) -> setItem
org.cocos2dx.lib.Cocos2dxLocalStorage$DBOpenHelper -> org.cocos2dx.lib.Cocos2dxLocalStorage$DBOpenHelper:
    121:121:void <init>(android.content.Context) -> <init>
    126:126:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    131:131:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
org.cocos2dx.lib.Cocos2dxLuaJavaBridge -> org.cocos2dx.lib.Cocos2dxLuaJavaBridge:
    28:28:void <init>() -> <init>
org.cocos2dx.lib.Cocos2dxMusic -> org.cocos2dx.lib.Cocos2dxMusic:
    62:65:void <init>(android.content.Context) -> <init>
    275:297:android.media.MediaPlayer createMediaPlayer(java.lang.String) -> createMediaPlayer
    206:210:void end() -> end
    214:215:float getBackgroundVolume() -> getBackgroundVolume
    261:265:void initData() -> initData
    193:199:boolean isBackgroundMusicPlaying() -> isBackgroundMusicPlaying
    238:243:void onEnterBackground() -> onEnterBackground
    249:256:void onEnterForeground() -> onEnterForeground
    153:159:void pauseBackgroundMusic() -> pauseBackgroundMusic
    97:133:void playBackgroundMusic(java.lang.String,boolean) -> playBackgroundMusic
    81:92:void preloadBackgroundMusic(java.lang.String) -> preloadBackgroundMusic
    165:171:void resumeBackgroundMusic() -> resumeBackgroundMusic
    176:177:void rewindBackgroundMusic() -> rewindBackgroundMusic
    304:309:void setAudioFocus(boolean) -> setAudioFocus
    230:232:void setBackgroundVolume(float) -> setBackgroundVolume
    139:147:void stopBackgroundMusic() -> stopBackgroundMusic
    185:187:boolean willPlayBackgroundMusic() -> willPlayBackgroundMusic
org.cocos2dx.lib.Cocos2dxReflectionHelper -> org.cocos2dx.lib.Cocos2dxReflectionHelper:
    33:33:void <init>() -> <init>
    36:38:java.lang.Object getConstantValue(java.lang.Class,java.lang.String) -> getConstantValue
    56:61:java.lang.Object invokeInstanceMethod(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[]) -> invokeInstanceMethod
org.cocos2dx.lib.Cocos2dxRenderer -> org.cocos2dx.lib.Cocos2dxRenderer:
    31:49:void <init>() -> <init>
    182:182:java.lang.String getContentText() -> getContentText
    135:135:void handleActionCancel(int[],float[],float[]) -> handleActionCancel
    127:127:void handleActionDown(int,float,float) -> handleActionDown
    139:139:void handleActionMove(int[],float[],float[]) -> handleActionMove
    131:131:void handleActionUp(int,float,float) -> handleActionUp
    178:178:void handleDeleteBackward() -> handleDeleteBackward
    174:174:void handleInsertText(java.lang.String) -> handleInsertText
    143:143:void handleKeyDown(int) -> handleKeyDown
    147:147:void handleKeyUp(int) -> handleKeyUp
    157:161:void handleOnPause() -> handleOnPause
    165:166:void handleOnResume() -> handleOnResume
    91:107:void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    81:81:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    74:76:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    60:60:void setAnimationInterval(float) -> setAnimationInterval
    64:65:void setScreenWidthAndHeight(int,int) -> setScreenWidthAndHeight
org.cocos2dx.lib.Cocos2dxSound -> org.cocos2dx.lib.Cocos2dxSound:
    84:87:void <init>(android.content.Context) -> <init>
    41:41:java.util.concurrent.ConcurrentHashMap access$000(org.cocos2dx.lib.Cocos2dxSound) -> access$000
    41:41:int access$100(org.cocos2dx.lib.Cocos2dxSound,java.lang.String,int,boolean,float,float,float) -> access$100
    375:375:float clamp(float,float,float) -> clamp
    351:363:int createSoundIDFromAsset(java.lang.String) -> createSoundIDFromAsset
    382:397:int doPlayEffect(java.lang.String,int,boolean,float,float,float) -> doPlayEffect
    334:337:void end() -> end
    289:289:float getEffectsVolume() -> getEffectsVolume
    91:101:void initData() -> initData
    403:403:void onEnterBackground() -> onEnterBackground
    407:407:void onEnterForeground() -> onEnterForeground
    231:241:void pauseAllEffects() -> pauseAllEffects
    216:216:void pauseEffect(int) -> pauseEffect
    159:184:int playEffect(java.lang.String,boolean,float,float,float) -> playEffect
    109:119:int preloadEffect(java.lang.String) -> preloadEffect
    248:260:void resumeAllEffects() -> resumeAllEffects
    224:224:void resumeEffect(int) -> resumeEffect
    415:419:void setAudioFocus(boolean) -> setAudioFocus
    305:310:void setEffectsVolume(float) -> setEffectsVolume
    319:330:void setEffectsVolumeInternal(float,float) -> setEffectsVolumeInternal
    267:281:void stopAllEffects() -> stopAllEffects
    198:208:void stopEffect(int) -> stopEffect
    128:137:void unloadEffect(java.lang.String) -> unloadEffect
org.cocos2dx.lib.Cocos2dxSound$OnLoadCompletedListener -> org.cocos2dx.lib.Cocos2dxSound$OnLoadCompletedListener:
    444:444:void <init>(org.cocos2dx.lib.Cocos2dxSound) -> <init>
    451:457:void onLoadComplete(android.media.SoundPool,int,int) -> onLoadComplete
org.cocos2dx.lib.Cocos2dxSound$SoundInfoForLoadedCompleted -> org.cocos2dx.lib.Cocos2dxSound$SoundInfoForLoadedCompleted:
    434:440:void <init>(org.cocos2dx.lib.Cocos2dxSound,java.lang.String,boolean,float,float,float) -> <init>
org.cocos2dx.lib.Cocos2dxTextInputWrapper -> org.cocos2dx.lib.Cocos2dxTextInputWrapper:
    56:57:void <init>(org.cocos2dx.lib.Cocos2dxGLSurfaceView) -> <init>
    80:103:void afterTextChanged(android.text.Editable) -> afterTextChanged
    108:108:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    65:67:boolean isFullScreenEdit() -> isFullScreenEdit
    118:145:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
    71:71:void setOriginText(java.lang.String) -> setOriginText
org.cocos2dx.lib.Cocos2dxTypefaces -> org.cocos2dx.lib.Cocos2dxTypefaces:
    42:42:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    61:74:android.graphics.Typeface get(android.content.Context,java.lang.String) -> get
org.cocos2dx.lib.Cocos2dxVideoHelper -> org.cocos2dx.lib.Cocos2dxVideoHelper:
    47:52:void <init>(org.cocos2dx.lib.Cocos2dxActivity,android.widget.FrameLayout) -> <init>
    225:232:void _createVideoView(int) -> _createVideoView
    375:377:void _pauseVideo(int) -> _pauseVideo
    243:247:void _removeVideoView(int) -> _removeVideoView
    417:419:void _restartVideo(int) -> _restartVideo
    389:391:void _resumeVideo(int) -> _resumeVideo
    432:434:void _seekVideoTo(int,int) -> _seekVideoTo
    335:337:void _setFullScreenEnabled(int,boolean,int,int) -> _setFullScreenEnabled
    285:287:void _setLooping(int,boolean) -> _setLooping
    300:302:void _setUserInputEnabled(int,boolean) -> _setUserInputEnabled
    476:478:void _setVideoKeepRatio(int,boolean) -> _setVideoKeepRatio
    315:317:void _setVideoRect(int,int,int,int,int) -> _setVideoRect
    261:265:void _setVideoURL(int,int,java.lang.String) -> _setVideoURL
    452:458:void _setVideoVisible(int,boolean) -> _setVideoVisible
    361:363:void _startVideo(int) -> _startVideo
    403:405:void _stopVideo(int) -> _stopVideo
    39:39:void access$000(org.cocos2dx.lib.Cocos2dxVideoHelper,int) -> access$000
    39:39:void access$100(org.cocos2dx.lib.Cocos2dxVideoHelper,int) -> access$100
    39:39:void access$1000(org.cocos2dx.lib.Cocos2dxVideoHelper,int,boolean) -> access$1000
    39:39:void access$1100(org.cocos2dx.lib.Cocos2dxVideoHelper,int) -> access$1100
    39:39:void access$1200(org.cocos2dx.lib.Cocos2dxVideoHelper,int,boolean) -> access$1200
    39:39:void access$1300(org.cocos2dx.lib.Cocos2dxVideoHelper,int,boolean) -> access$1300
    39:39:void access$1400(org.cocos2dx.lib.Cocos2dxVideoHelper,int,boolean) -> access$1400
    39:39:void access$1500(org.cocos2dx.lib.Cocos2dxVideoHelper) -> access$1500
    39:39:org.cocos2dx.lib.Cocos2dxActivity access$1600(org.cocos2dx.lib.Cocos2dxVideoHelper) -> access$1600
    39:39:void access$200(org.cocos2dx.lib.Cocos2dxVideoHelper,int,int,java.lang.String) -> access$200
    39:39:void access$300(org.cocos2dx.lib.Cocos2dxVideoHelper,int) -> access$300
    39:39:void access$400(org.cocos2dx.lib.Cocos2dxVideoHelper,int,int,int,int,int) -> access$400
    39:39:void access$500(org.cocos2dx.lib.Cocos2dxVideoHelper,int,boolean,int,int) -> access$500
    39:39:void access$600(org.cocos2dx.lib.Cocos2dxVideoHelper,int) -> access$600
    39:39:void access$700(org.cocos2dx.lib.Cocos2dxVideoHelper,int) -> access$700
    39:39:void access$800(org.cocos2dx.lib.Cocos2dxVideoHelper,int) -> access$800
    39:39:void access$900(org.cocos2dx.lib.Cocos2dxVideoHelper,int,int) -> access$900
    216:221:int createVideoWidget() -> createVideoWidget
    342:348:void onBackKeyEvent() -> onBackKeyEvent
    368:371:void pauseVideo(int) -> pauseVideo
    236:239:void removeVideoWidget(int) -> removeVideoWidget
    410:413:void restartVideo(int) -> restartVideo
    382:385:void resumeVideo(int) -> resumeVideo
    424:428:void seekVideoTo(int,int) -> seekVideoTo
    322:331:void setFullScreenEnabled(int,boolean,int,int) -> setFullScreenEnabled
    277:281:void setLooping(int,boolean) -> setLooping
    292:296:void setUserInputEnabled(int,boolean) -> setUserInputEnabled
    464:472:void setVideoKeepRatioEnabled(int,boolean) -> setVideoKeepRatioEnabled
    307:311:void setVideoRect(int,int,int,int,int) -> setVideoRect
    252:257:void setVideoUrl(int,int,java.lang.String) -> setVideoUrl
    439:448:void setVideoVisible(int,boolean) -> setVideoVisible
    354:357:void startVideo(int) -> startVideo
    396:399:void stopVideo(int) -> stopVideo
org.cocos2dx.lib.Cocos2dxVideoHelper$1 -> org.cocos2dx.lib.Cocos2dxVideoHelper$1:
    206:206:void <init>(org.cocos2dx.lib.Cocos2dxVideoHelper) -> <init>
    210:210:void onVideoEvent(int,int) -> onVideoEvent
org.cocos2dx.lib.Cocos2dxVideoHelper$VideoEventRunnable -> org.cocos2dx.lib.Cocos2dxVideoHelper$VideoEventRunnable:
    193:195:void <init>(org.cocos2dx.lib.Cocos2dxVideoHelper,int,int) -> <init>
    199:199:void run() -> run
org.cocos2dx.lib.Cocos2dxVideoHelper$VideoHandler -> org.cocos2dx.lib.Cocos2dxVideoHelper$VideoHandler:
    76:77:void <init>(org.cocos2dx.lib.Cocos2dxVideoHelper) -> <init>
    82:184:void handleMessage(android.os.Message) -> handleMessage
org.cocos2dx.lib.Cocos2dxVideoView -> org.cocos2dx.lib.Cocos2dxVideoView:
    99:103:void <init>(org.cocos2dx.lib.Cocos2dxActivity,int) -> <init>
    41:41:int access$000(org.cocos2dx.lib.Cocos2dxVideoView) -> access$000
    41:41:int access$002(org.cocos2dx.lib.Cocos2dxVideoView,int) -> access$002
    41:41:int access$100(org.cocos2dx.lib.Cocos2dxVideoView) -> access$100
    41:41:int access$1000(org.cocos2dx.lib.Cocos2dxVideoView) -> access$1000
    41:41:int access$102(org.cocos2dx.lib.Cocos2dxVideoView,int) -> access$102
    41:41:java.lang.String access$1100(org.cocos2dx.lib.Cocos2dxVideoView) -> access$1100
    41:41:android.media.MediaPlayer$OnErrorListener access$1200(org.cocos2dx.lib.Cocos2dxVideoView) -> access$1200
    41:41:int access$1302(org.cocos2dx.lib.Cocos2dxVideoView,int) -> access$1302
    41:41:android.view.SurfaceHolder access$1402(org.cocos2dx.lib.Cocos2dxVideoView,android.view.SurfaceHolder) -> access$1402
    41:41:void access$1500(org.cocos2dx.lib.Cocos2dxVideoView) -> access$1500
    41:41:int access$202(org.cocos2dx.lib.Cocos2dxVideoView,int) -> access$202
    41:41:android.media.MediaPlayer$OnPreparedListener access$300(org.cocos2dx.lib.Cocos2dxVideoView) -> access$300
    41:41:android.media.MediaPlayer access$400(org.cocos2dx.lib.Cocos2dxVideoView) -> access$400
    41:41:int access$500(org.cocos2dx.lib.Cocos2dxVideoView) -> access$500
    41:41:int access$600(org.cocos2dx.lib.Cocos2dxVideoView) -> access$600
    41:41:int access$602(org.cocos2dx.lib.Cocos2dxVideoView,int) -> access$602
    41:41:boolean access$700(org.cocos2dx.lib.Cocos2dxVideoView) -> access$700
    41:41:void access$800(org.cocos2dx.lib.Cocos2dxVideoView,boolean) -> access$800
    41:41:org.cocos2dx.lib.Cocos2dxVideoView$OnVideoEventListener access$900(org.cocos2dx.lib.Cocos2dxVideoView) -> access$900
    348:351:void fixSize() -> fixSize
    356:394:void fixSize(int,int,int,int) -> fixSize
    735:735:int getAudioSessionId() -> getAudioSessionId
    706:707:int getBufferPercentage() -> getBufferPercentage
    686:687:int getCurrentPosition() -> getCurrentPosition
    674:682:int getDuration() -> getDuration
    188:196:void initVideoView() -> initVideoView
    713:713:boolean isInPlaybackState() -> isInPlaybackState
    702:702:boolean isPlaying() -> isPlaying
    108:110:void onMeasure(int,int) -> onMeasure
    201:206:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    271:329:void openVideo() -> openVideo
    625:634:void pause() -> pause
    602:608:void release(boolean) -> release
    142:158:int resolveAdjustedSize(int,int) -> resolveAdjustedSize
    665:669:void restart() -> restart
    653:658:void resume() -> resume
    693:697:void seekTo(int) -> seekTo
    129:136:void setFullScreenEnabled(boolean,int,int) -> setFullScreenEnabled
    343:344:void setKeepRatio(boolean) -> setKeepRatio
    253:253:void setLooping(boolean) -> setLooping
    552:552:void setOnCompletionListener(org.cocos2dx.lib.Cocos2dxVideoView$OnVideoEventListener) -> setOnCompletionListener
    565:565:void setOnErrorListener(android.media.MediaPlayer$OnErrorListener) -> setOnErrorListener
    541:541:void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener) -> setOnPreparedListener
    257:257:void setUserInputEnabled(boolean) -> setUserInputEnabled
    220:230:void setVideoFileName(java.lang.String) -> setVideoFileName
    120:125:void setVideoRect(int,int,int,int) -> setVideoRect
    243:249:void setVideoURI(android.net.Uri,java.util.Map) -> setVideoURI
    235:236:void setVideoURL(java.lang.String) -> setVideoURL
    175:184:void setVisibility(int) -> setVisibility
    614:621:void start() -> start
    638:642:void stop() -> stop
    261:266:void stopPlayback() -> stopPlayback
    649:649:void suspend() -> suspend
org.cocos2dx.lib.Cocos2dxVideoView$1 -> org.cocos2dx.lib.Cocos2dxVideoView$1:
    399:399:void <init>(org.cocos2dx.lib.Cocos2dxVideoView) -> <init>
    401:404:void onVideoSizeChanged(android.media.MediaPlayer,int,int) -> onVideoSizeChanged
org.cocos2dx.lib.Cocos2dxVideoView$2 -> org.cocos2dx.lib.Cocos2dxVideoView$2:
    410:410:void <init>(org.cocos2dx.lib.Cocos2dxVideoView) -> <init>
    412:432:void onPrepared(android.media.MediaPlayer) -> onPrepared
org.cocos2dx.lib.Cocos2dxVideoView$3 -> org.cocos2dx.lib.Cocos2dxVideoView$3:
    438:438:void <init>(org.cocos2dx.lib.Cocos2dxVideoView) -> <init>
    440:450:void onCompletion(android.media.MediaPlayer) -> onCompletion
org.cocos2dx.lib.Cocos2dxVideoView$4 -> org.cocos2dx.lib.Cocos2dxVideoView$4:
    468:468:void <init>(org.cocos2dx.lib.Cocos2dxVideoView) -> <init>
    470:520:boolean onError(android.media.MediaPlayer,int,int) -> onError
org.cocos2dx.lib.Cocos2dxVideoView$4$1 -> org.cocos2dx.lib.Cocos2dxVideoView$4$1:
    509:509:void <init>(org.cocos2dx.lib.Cocos2dxVideoView$4) -> <init>
    514:515:void onClick(android.content.DialogInterface,int) -> onClick
org.cocos2dx.lib.Cocos2dxVideoView$5 -> org.cocos2dx.lib.Cocos2dxVideoView$5:
    527:527:void <init>(org.cocos2dx.lib.Cocos2dxVideoView) -> <init>
    529:529:void onBufferingUpdate(android.media.MediaPlayer,int) -> onBufferingUpdate
org.cocos2dx.lib.Cocos2dxVideoView$6 -> org.cocos2dx.lib.Cocos2dxVideoView$6:
    569:569:void <init>(org.cocos2dx.lib.Cocos2dxVideoView) -> <init>
    573:579:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    585:586:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    592:594:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
org.cocos2dx.lib.Cocos2dxWebView -> org.cocos2dx.lib.Cocos2dxWebView:
    61:61:void <clinit>() -> <clinit>
    67:67:void <init>(android.content.Context) -> <init>
    72:93:void <init>(android.content.Context,int) -> <init>
    60:60:java.lang.String access$000(org.cocos2dx.lib.Cocos2dxWebView) -> access$000
    60:60:int access$100(org.cocos2dx.lib.Cocos2dxWebView) -> access$100
    60:60:java.lang.String access$200() -> access$200
    97:97:void setJavascriptInterfaceScheme(java.lang.String) -> setJavascriptInterfaceScheme
    101:101:void setScalesPageToFit(boolean) -> setScalesPageToFit
    166:173:void setWebViewRect(int,int,int,int) -> setWebViewRect
org.cocos2dx.lib.Cocos2dxWebView$Cocos2dxWebViewClient -> org.cocos2dx.lib.Cocos2dxWebView$Cocos2dxWebViewClient:
    104:104:void <init>(org.cocos2dx.lib.Cocos2dxWebView) -> <init>
    142:144:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    154:156:void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    107:137:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
org.cocos2dx.lib.Cocos2dxWebView$Cocos2dxWebViewClient$1 -> org.cocos2dx.lib.Cocos2dxWebView$Cocos2dxWebViewClient$1:
    112:112:void <init>(org.cocos2dx.lib.Cocos2dxWebView$Cocos2dxWebViewClient,java.lang.String) -> <init>
    115:115:void run() -> run
org.cocos2dx.lib.Cocos2dxWebView$Cocos2dxWebViewClient$2 -> org.cocos2dx.lib.Cocos2dxWebView$Cocos2dxWebViewClient$2:
    144:144:void <init>(org.cocos2dx.lib.Cocos2dxWebView$Cocos2dxWebViewClient,java.lang.String) -> <init>
    147:147:void run() -> run
org.cocos2dx.lib.Cocos2dxWebView$Cocos2dxWebViewClient$3 -> org.cocos2dx.lib.Cocos2dxWebView$Cocos2dxWebViewClient$3:
    156:156:void <init>(org.cocos2dx.lib.Cocos2dxWebView$Cocos2dxWebViewClient,java.lang.String) -> <init>
    159:159:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper -> org.cocos2dx.lib.Cocos2dxWebViewHelper:
    55:60:void <init>(android.widget.FrameLayout) -> <init>
    78:78:void _didFailLoading(int,java.lang.String) -> _didFailLoading
    72:72:void _didFinishLoading(int,java.lang.String) -> _didFinishLoading
    84:84:void _onJsCallback(int,java.lang.String) -> _onJsCallback
    66:66:boolean _shouldStartLoading(int,java.lang.String) -> _shouldStartLoading
    46:46:org.cocos2dx.lib.Cocos2dxActivity access$000() -> access$000
    46:46:android.widget.FrameLayout access$100() -> access$100
    46:46:android.util.SparseArray access$200() -> access$200
    298:300:java.lang.Object callInMainThread(java.util.concurrent.Callable) -> callInMainThread
    304:312:boolean canGoBack(int) -> canGoBack
    321:329:boolean canGoForward(int) -> canGoForward
    88:101:int createWebView() -> createWebView
    362:362:void evaluateJS(int,java.lang.String) -> evaluateJS
    170:192:float getOpacityWebView(int) -> getOpacityWebView
    338:338:void goBack(int) -> goBack
    350:350:void goForward(int) -> goForward
    223:223:void loadData(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> loadData
    261:261:void loadFile(int,java.lang.String) -> loadFile
    235:235:void loadHTMLString(int,java.lang.String,java.lang.String) -> loadHTMLString
    247:247:void loadUrl(int,java.lang.String,boolean) -> loadUrl
    286:286:void reload(int) -> reload
    105:105:void removeWebView(int) -> removeWebView
    130:131:void setBackgroundTransparent(int) -> setBackgroundTransparent
    211:211:void setJavascriptInterfaceScheme(int,java.lang.String) -> setJavascriptInterfaceScheme
    150:151:void setOpacityWebView(int,float) -> setOpacityWebView
    374:374:void setScalesPageToFit(int,boolean) -> setScalesPageToFit
    118:118:void setVisible(int,boolean) -> setVisible
    199:199:void setWebViewRect(int,int,int,int,int) -> setWebViewRect
    273:273:void stopLoading(int) -> stopLoading
org.cocos2dx.lib.Cocos2dxWebViewHelper$1 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$1:
    89:89:void <init>(int) -> <init>
    92:98:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper$10 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$10:
    235:235:void <init>(int,java.lang.String,java.lang.String) -> <init>
    238:240:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper$11 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$11:
    247:247:void <init>(int,boolean,java.lang.String) -> <init>
    250:254:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper$12 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$12:
    261:261:void <init>(int,java.lang.String) -> <init>
    264:266:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper$13 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$13:
    273:273:void <init>(int) -> <init>
    276:278:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper$14 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$14:
    286:286:void <init>(int) -> <init>
    289:291:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper$15 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$15:
    304:304:void <init>(int) -> <init>
    304:304:java.lang.Object call() -> call
    307:308:java.lang.Boolean call() -> call
org.cocos2dx.lib.Cocos2dxWebViewHelper$16 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$16:
    321:321:void <init>(int) -> <init>
    321:321:java.lang.Object call() -> call
    324:325:java.lang.Boolean call() -> call
org.cocos2dx.lib.Cocos2dxWebViewHelper$17 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$17:
    338:338:void <init>(int) -> <init>
    341:343:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper$18 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$18:
    350:350:void <init>(int) -> <init>
    353:355:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper$19 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$19:
    362:362:void <init>(int,java.lang.String) -> <init>
    365:367:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper$2 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$2:
    105:105:void <init>(int) -> <init>
    108:111:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper$20 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$20:
    374:374:void <init>(int,boolean) -> <init>
    377:379:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper$3 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$3:
    118:118:void <init>(int,boolean) -> <init>
    121:123:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper$4 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$4:
    131:131:void <init>(int) -> <init>
    134:141:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper$5 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$5:
    151:151:void <init>(int,float) -> <init>
    154:160:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper$6 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$6:
    171:171:void <init>(int) -> <init>
    171:171:java.lang.Object call() -> call
    175:185:java.lang.Float call() -> call
org.cocos2dx.lib.Cocos2dxWebViewHelper$7 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$7:
    199:199:void <init>(int,int,int,int,int) -> <init>
    202:204:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper$8 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$8:
    211:211:void <init>(int,java.lang.String) -> <init>
    214:216:void run() -> run
org.cocos2dx.lib.Cocos2dxWebViewHelper$9 -> org.cocos2dx.lib.Cocos2dxWebViewHelper$9:
    223:223:void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    226:228:void run() -> run
org.cocos2dx.lib.DataTaskHandler -> org.cocos2dx.lib.DataTaskHandler:
    53:56:void <init>(org.cocos2dx.lib.Cocos2dxDownloader,int) -> <init>
    49:49:void LogD(java.lang.String) -> LogD
    76:81:void onFailure(int,cz.msebera.android.httpclient.Header[],byte[],java.lang.Throwable) -> onFailure
    93:93:void onFinish() -> onFinish
    62:66:void onProgress(long,long) -> onProgress
    71:71:void onStart() -> onStart
    86:87:void onSuccess(int,cz.msebera.android.httpclient.Header[],byte[]) -> onSuccess
org.cocos2dx.lib.DownloadTask -> org.cocos2dx.lib.DownloadTask:
    227:230:void <init>() -> <init>
    234:237:void resetStatus() -> resetStatus
org.cocos2dx.lib.FileTaskHandler -> org.cocos2dx.lib.FileTaskHandler:
    161:166:void <init>(org.cocos2dx.lib.Cocos2dxDownloader,int,java.io.File,java.io.File) -> <init>
    157:157:void LogD(java.lang.String) -> LogD
    192:197:void onFailure(int,cz.msebera.android.httpclient.Header[],java.lang.Throwable,java.io.File) -> onFailure
    187:187:void onFinish() -> onFinish
    172:176:void onProgress(long,long) -> onProgress
    181:181:void onStart() -> onStart
    202:221:void onSuccess(int,cz.msebera.android.httpclient.Header[],java.io.File) -> onSuccess
org.cocos2dx.lib.GameControllerAdapter -> org.cocos2dx.lib.GameControllerAdapter:
    29:29:void <init>() -> <init>
    29:29:void access$000(java.lang.String,int) -> access$000
    29:29:void access$100(java.lang.String,int) -> access$100
    29:29:void access$200(java.lang.String,int,int,boolean,float,boolean) -> access$200
    29:29:void access$300(java.lang.String,int,int,float,boolean) -> access$300
    33:35:void addRunnableToFrameStartList(java.lang.Runnable) -> addRunnableToFrameStartList
    88:88:void onAxisEvent(java.lang.String,int,int,float,boolean) -> onAxisEvent
    77:77:void onButtonEvent(java.lang.String,int,int,boolean,float,boolean) -> onButtonEvent
    55:55:void onConnected(java.lang.String,int) -> onConnected
    66:66:void onDisconnected(java.lang.String,int) -> onDisconnected
    44:48:void onDrawFrameStart() -> onDrawFrameStart
    39:40:void removeRunnableFromFrameStartList(java.lang.Runnable) -> removeRunnableFromFrameStartList
org.cocos2dx.lib.GameControllerAdapter$1 -> org.cocos2dx.lib.GameControllerAdapter$1:
    55:55:void <init>(java.lang.String,int) -> <init>
    59:59:void run() -> run
org.cocos2dx.lib.GameControllerAdapter$2 -> org.cocos2dx.lib.GameControllerAdapter$2:
    66:66:void <init>(java.lang.String,int) -> <init>
    70:70:void run() -> run
org.cocos2dx.lib.GameControllerAdapter$3 -> org.cocos2dx.lib.GameControllerAdapter$3:
    77:77:void <init>(java.lang.String,int,int,boolean,float,boolean) -> <init>
    81:81:void run() -> run
org.cocos2dx.lib.GameControllerAdapter$4 -> org.cocos2dx.lib.GameControllerAdapter$4:
    88:88:void <init>(java.lang.String,int,int,float,boolean) -> <init>
    92:92:void run() -> run
org.cocos2dx.lib.GameControllerUtils -> org.cocos2dx.lib.GameControllerUtils:
    30:30:void <init>() -> <init>
    34:36:void ensureDirectoryExist(java.lang.String) -> ensureDirectoryExist
    42:62:java.lang.String readJsonFile(java.lang.String) -> readJsonFile
org.cocos2dx.lib.HeadTaskHandler -> org.cocos2dx.lib.HeadTaskHandler:
    109:114:void <init>(org.cocos2dx.lib.Cocos2dxDownloader,int,java.lang.String,java.lang.String,java.lang.String) -> <init>
    105:105:void LogD(java.lang.String) -> LogD
    139:144:void onFailure(int,cz.msebera.android.httpclient.Header[],byte[],java.lang.Throwable) -> onFailure
    134:134:void onFinish() -> onFinish
    119:128:void onSuccess(int,cz.msebera.android.httpclient.Header[],byte[]) -> onSuccess
org.cocos2dx.lib.ResizeLayout -> org.cocos2dx.lib.ResizeLayout:
    36:33:void <init>(android.content.Context) -> <init>
    40:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    49:56:void onLayout(boolean,int,int,int,int) -> onLayout
    44:44:void setEnableForceDoLayout(boolean) -> setEnableForceDoLayout
org.cocos2dx.lib.ResizeLayout$1 -> org.cocos2dx.lib.ResizeLayout$1:
    56:56:void <init>(org.cocos2dx.lib.ResizeLayout) -> <init>
    60:61:void run() -> run
org.cocos2dx.lib.ShouldStartLoadingWorker -> org.cocos2dx.lib.ShouldStartLoadingWorker:
    46:50:void <init>(java.util.concurrent.CountDownLatch,boolean[],int,java.lang.String) -> <init>
    55:56:void run() -> run
